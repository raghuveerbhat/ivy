Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/experimental/array_methods", "data_classes/array/experimental/array_methods/count_nonzero", "data_classes/array/experimental/array_methods/exp2", "data_classes/array/experimental/array_methods/float_power", "data_classes/array/experimental/array_methods/fmax", "data_classes/array/experimental/array_methods/fmod", "data_classes/array/experimental/array_methods/gcd", "data_classes/array/experimental/array_methods/lcm", "data_classes/array/experimental/array_methods/nansum", "data_classes/array/experimental/array_methods/sinc", "data_classes/array/experimental/array_methods/trapz", "data_classes/array/experimental/elementwise", "data_classes/array/experimental/elementwise/ArrayWithElementWiseExtensions", "data_classes/array/extensions", "data_classes/array/extensions/activations", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions", "data_classes/array/extensions/array_methods", "data_classes/array/extensions/array_methods/diagflat", "data_classes/array/extensions/array_methods/dirichlet", "data_classes/array/extensions/array_methods/flatten", "data_classes/array/extensions/array_methods/fliplr", "data_classes/array/extensions/array_methods/flipud", "data_classes/array/extensions/array_methods/heaviside", "data_classes/array/extensions/array_methods/hstack", "data_classes/array/extensions/array_methods/i0", "data_classes/array/extensions/array_methods/kron", "data_classes/array/extensions/array_methods/max_pool1d", "data_classes/array/extensions/array_methods/max_pool2d", "data_classes/array/extensions/array_methods/median", "data_classes/array/extensions/array_methods/moveaxis", "data_classes/array/extensions/array_methods/msort", "data_classes/array/extensions/array_methods/pad", "data_classes/array/extensions/array_methods/rot90", "data_classes/array/extensions/array_methods/top_k", "data_classes/array/extensions/array_methods/vstack", "data_classes/array/extensions/conversions", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions", "data_classes/array/extensions/creation", "data_classes/array/extensions/creation/ArrayWithCreationExtensions", "data_classes/array/extensions/data_type", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions", "data_classes/array/extensions/device", "data_classes/array/extensions/device/ArrayWithDeviceExtensions", "data_classes/array/extensions/general", "data_classes/array/extensions/general/ArrayWithGeneralExtensions", "data_classes/array/extensions/gradients", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions", "data_classes/array/extensions/image", "data_classes/array/extensions/image/ArrayWithImageExtension", "data_classes/array/extensions/layers", "data_classes/array/extensions/layers/ArrayWithLayersExtensions", "data_classes/array/extensions/linear_algebra", "data_classes/array/extensions/linear_algebra/ArrayWithLinalgExtensions", "data_classes/array/extensions/losses", "data_classes/array/extensions/losses/ArrayWithLossesExtensions", "data_classes/array/extensions/manipulation", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions", "data_classes/array/extensions/norms", "data_classes/array/extensions/norms/ArrayWithNormsExtensions", "data_classes/array/extensions/random", "data_classes/array/extensions/random/ArrayWithRandomExtensions", "data_classes/array/extensions/searching", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions", "data_classes/array/extensions/set", "data_classes/array/extensions/set/ArrayWithSetExtensions", "data_classes/array/extensions/sorting", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions", "data_classes/array/extensions/statistical", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions", "data_classes/array/extensions/utility", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/experimental/container_methods", "data_classes/container/experimental/container_methods/count_nonzero", "data_classes/container/experimental/container_methods/exp2", "data_classes/container/experimental/container_methods/float_power", "data_classes/container/experimental/container_methods/fmax", "data_classes/container/experimental/container_methods/fmod", "data_classes/container/experimental/container_methods/gcd", "data_classes/container/experimental/container_methods/lcm", "data_classes/container/experimental/container_methods/nansum", "data_classes/container/experimental/container_methods/sinc", "data_classes/container/experimental/container_methods/static_count_nonzero", "data_classes/container/experimental/container_methods/static_exp2", "data_classes/container/experimental/container_methods/static_float_power", "data_classes/container/experimental/container_methods/static_fmax", "data_classes/container/experimental/container_methods/static_fmod", "data_classes/container/experimental/container_methods/static_gcd", "data_classes/container/experimental/container_methods/static_lcm", "data_classes/container/experimental/container_methods/static_nansum", "data_classes/container/experimental/container_methods/static_sinc", "data_classes/container/experimental/elementwise", "data_classes/container/experimental/elementwise/ContainerWithElementWiseExtensions", "data_classes/container/extensions", "data_classes/container/extensions/activations", "data_classes/container/extensions/activations/ContainerWithActivationExtensions", "data_classes/container/extensions/container_methods", "data_classes/container/extensions/container_methods/diagflat", "data_classes/container/extensions/container_methods/dirichlet", "data_classes/container/extensions/container_methods/flatten", "data_classes/container/extensions/container_methods/fliplr", "data_classes/container/extensions/container_methods/flipud", "data_classes/container/extensions/container_methods/hamming_window", "data_classes/container/extensions/container_methods/hann_window", "data_classes/container/extensions/container_methods/heaviside", "data_classes/container/extensions/container_methods/hstack", "data_classes/container/extensions/container_methods/i0", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/kaiser_window", "data_classes/container/extensions/container_methods/kron", "data_classes/container/extensions/container_methods/max_pool1d", "data_classes/container/extensions/container_methods/max_pool2d", "data_classes/container/extensions/container_methods/median", "data_classes/container/extensions/container_methods/moveaxis", "data_classes/container/extensions/container_methods/msort", "data_classes/container/extensions/container_methods/pad", "data_classes/container/extensions/container_methods/rot90", "data_classes/container/extensions/container_methods/static_diagflat", "data_classes/container/extensions/container_methods/static_dirichlet", "data_classes/container/extensions/container_methods/static_flatten", "data_classes/container/extensions/container_methods/static_fliplr", "data_classes/container/extensions/container_methods/static_flipud", "data_classes/container/extensions/container_methods/static_hamming_window", "data_classes/container/extensions/container_methods/static_hann_window", "data_classes/container/extensions/container_methods/static_heaviside", "data_classes/container/extensions/container_methods/static_hstack", "data_classes/container/extensions/container_methods/static_i0", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/static_kaiser_window", "data_classes/container/extensions/container_methods/static_kron", "data_classes/container/extensions/container_methods/static_max_pool1d", "data_classes/container/extensions/container_methods/static_max_pool2d", "data_classes/container/extensions/container_methods/static_median", "data_classes/container/extensions/container_methods/static_moveaxis", "data_classes/container/extensions/container_methods/static_msort", "data_classes/container/extensions/container_methods/static_pad", "data_classes/container/extensions/container_methods/static_rot90", "data_classes/container/extensions/container_methods/static_top_k", "data_classes/container/extensions/container_methods/static_triu_indices", "data_classes/container/extensions/container_methods/static_vstack", "data_classes/container/extensions/container_methods/top_k", "data_classes/container/extensions/container_methods/triu_indices", "data_classes/container/extensions/container_methods/vstack", "data_classes/container/extensions/conversions", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions", "data_classes/container/extensions/creation", "data_classes/container/extensions/creation/ContainerWithCreationExtensions", "data_classes/container/extensions/data_type", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions", "data_classes/container/extensions/device", "data_classes/container/extensions/device/ContainerWithDeviceExtensions", "data_classes/container/extensions/general", "data_classes/container/extensions/general/ContainerWithGeneralExtensions", "data_classes/container/extensions/gradients", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions", "data_classes/container/extensions/image", "data_classes/container/extensions/image/ContainerWithImageExtensions", "data_classes/container/extensions/layers", "data_classes/container/extensions/layers/ContainerWithLayersExtensions", "data_classes/container/extensions/linear_algebra", "data_classes/container/extensions/linear_algebra/ContainerWithLinalgExtensions", "data_classes/container/extensions/losses", "data_classes/container/extensions/losses/ContainerWithLossesExtensions", "data_classes/container/extensions/manipulation", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions", "data_classes/container/extensions/norms", "data_classes/container/extensions/norms/ContainerWithNormsExtensions", "data_classes/container/extensions/random", "data_classes/container/extensions/random/ContainerWithRandomExtensions", "data_classes/container/extensions/searching", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions", "data_classes/container/extensions/set", "data_classes/container/extensions/set/ContainerWithSetExtensions", "data_classes/container/extensions/sorting", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions", "data_classes/container/extensions/statistical", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions", "data_classes/container/extensions/utility", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/experimental", "functional/experimental/elementwise", "functional/experimental/elementwise/count_nonzero", "functional/experimental/elementwise/exp2", "functional/experimental/elementwise/float_power", "functional/experimental/elementwise/fmax", "functional/experimental/elementwise/fmod", "functional/experimental/elementwise/gcd", "functional/experimental/elementwise/lcm", "functional/experimental/elementwise/nansum", "functional/experimental/elementwise/sinc", "functional/experimental/elementwise/trapz", "functional/extensions", "functional/extensions/activations", "functional/extensions/compilation", "functional/extensions/constants", "functional/extensions/creation", "functional/extensions/creation/triu_indices", "functional/extensions/data_type", "functional/extensions/device", "functional/extensions/general", "functional/extensions/gradients", "functional/extensions/layers", "functional/extensions/layers/hamming_window", "functional/extensions/layers/hann_window", "functional/extensions/layers/kaiser_bessel_derived_window", "functional/extensions/layers/kaiser_window", "functional/extensions/layers/max_pool1d", "functional/extensions/layers/max_pool2d", "functional/extensions/layers/pad", "functional/extensions/layers/vorbis_window", "functional/extensions/linear_algebra", "functional/extensions/linear_algebra/diagflat", "functional/extensions/linear_algebra/kron", "functional/extensions/losses", "functional/extensions/manipulation", "functional/extensions/manipulation/flatten", "functional/extensions/manipulation/fliplr", "functional/extensions/manipulation/flipud", "functional/extensions/manipulation/heaviside", "functional/extensions/manipulation/hstack", "functional/extensions/manipulation/i0", "functional/extensions/manipulation/moveaxis", "functional/extensions/manipulation/ndenumerate", "functional/extensions/manipulation/ndindex", "functional/extensions/manipulation/rot90", "functional/extensions/manipulation/top_k", "functional/extensions/manipulation/vstack", "functional/extensions/meta", "functional/extensions/nest", "functional/extensions/norms", "functional/extensions/random", "functional/extensions/random/dirichlet", "functional/extensions/searching", "functional/extensions/set", "functional/extensions/sorting", "functional/extensions/sorting/msort", "functional/extensions/sparse_array", "functional/extensions/sparse_array/is_ivy_sparse_array", "functional/extensions/sparse_array/is_native_sparse_array", "functional/extensions/sparse_array/native_sparse_array", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/extensions/statistical", "functional/extensions/statistical/median", "functional/extensions/utility", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_frontend_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/NewTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/experimental/array_methods.rst", "data_classes/array/experimental/array_methods/count_nonzero.rst", "data_classes/array/experimental/array_methods/exp2.rst", "data_classes/array/experimental/array_methods/float_power.rst", "data_classes/array/experimental/array_methods/fmax.rst", "data_classes/array/experimental/array_methods/fmod.rst", "data_classes/array/experimental/array_methods/gcd.rst", "data_classes/array/experimental/array_methods/lcm.rst", "data_classes/array/experimental/array_methods/nansum.rst", "data_classes/array/experimental/array_methods/sinc.rst", "data_classes/array/experimental/array_methods/trapz.rst", "data_classes/array/experimental/elementwise.rst", "data_classes/array/experimental/elementwise/ArrayWithElementWiseExtensions.rst", "data_classes/array/extensions.rst", "data_classes/array/extensions/activations.rst", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions.rst", "data_classes/array/extensions/array_methods.rst", "data_classes/array/extensions/array_methods/diagflat.rst", "data_classes/array/extensions/array_methods/dirichlet.rst", "data_classes/array/extensions/array_methods/flatten.rst", "data_classes/array/extensions/array_methods/fliplr.rst", "data_classes/array/extensions/array_methods/flipud.rst", "data_classes/array/extensions/array_methods/heaviside.rst", "data_classes/array/extensions/array_methods/hstack.rst", "data_classes/array/extensions/array_methods/i0.rst", "data_classes/array/extensions/array_methods/kron.rst", "data_classes/array/extensions/array_methods/max_pool1d.rst", "data_classes/array/extensions/array_methods/max_pool2d.rst", "data_classes/array/extensions/array_methods/median.rst", "data_classes/array/extensions/array_methods/moveaxis.rst", "data_classes/array/extensions/array_methods/msort.rst", "data_classes/array/extensions/array_methods/pad.rst", "data_classes/array/extensions/array_methods/rot90.rst", "data_classes/array/extensions/array_methods/top_k.rst", "data_classes/array/extensions/array_methods/vstack.rst", "data_classes/array/extensions/conversions.rst", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions.rst", "data_classes/array/extensions/creation.rst", "data_classes/array/extensions/creation/ArrayWithCreationExtensions.rst", "data_classes/array/extensions/data_type.rst", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions.rst", "data_classes/array/extensions/device.rst", "data_classes/array/extensions/device/ArrayWithDeviceExtensions.rst", "data_classes/array/extensions/general.rst", "data_classes/array/extensions/general/ArrayWithGeneralExtensions.rst", "data_classes/array/extensions/gradients.rst", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions.rst", "data_classes/array/extensions/image.rst", "data_classes/array/extensions/image/ArrayWithImageExtension.rst", "data_classes/array/extensions/layers.rst", "data_classes/array/extensions/layers/ArrayWithLayersExtensions.rst", "data_classes/array/extensions/linear_algebra.rst", "data_classes/array/extensions/linear_algebra/ArrayWithLinalgExtensions.rst", "data_classes/array/extensions/losses.rst", "data_classes/array/extensions/losses/ArrayWithLossesExtensions.rst", "data_classes/array/extensions/manipulation.rst", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions.rst", "data_classes/array/extensions/norms.rst", "data_classes/array/extensions/norms/ArrayWithNormsExtensions.rst", "data_classes/array/extensions/random.rst", "data_classes/array/extensions/random/ArrayWithRandomExtensions.rst", "data_classes/array/extensions/searching.rst", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions.rst", "data_classes/array/extensions/set.rst", "data_classes/array/extensions/set/ArrayWithSetExtensions.rst", "data_classes/array/extensions/sorting.rst", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions.rst", "data_classes/array/extensions/statistical.rst", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions.rst", "data_classes/array/extensions/utility.rst", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/experimental/container_methods.rst", "data_classes/container/experimental/container_methods/count_nonzero.rst", "data_classes/container/experimental/container_methods/exp2.rst", "data_classes/container/experimental/container_methods/float_power.rst", "data_classes/container/experimental/container_methods/fmax.rst", "data_classes/container/experimental/container_methods/fmod.rst", "data_classes/container/experimental/container_methods/gcd.rst", "data_classes/container/experimental/container_methods/lcm.rst", "data_classes/container/experimental/container_methods/nansum.rst", "data_classes/container/experimental/container_methods/sinc.rst", "data_classes/container/experimental/container_methods/static_count_nonzero.rst", "data_classes/container/experimental/container_methods/static_exp2.rst", "data_classes/container/experimental/container_methods/static_float_power.rst", "data_classes/container/experimental/container_methods/static_fmax.rst", "data_classes/container/experimental/container_methods/static_fmod.rst", "data_classes/container/experimental/container_methods/static_gcd.rst", "data_classes/container/experimental/container_methods/static_lcm.rst", "data_classes/container/experimental/container_methods/static_nansum.rst", "data_classes/container/experimental/container_methods/static_sinc.rst", "data_classes/container/experimental/elementwise.rst", "data_classes/container/experimental/elementwise/ContainerWithElementWiseExtensions.rst", "data_classes/container/extensions.rst", "data_classes/container/extensions/activations.rst", "data_classes/container/extensions/activations/ContainerWithActivationExtensions.rst", "data_classes/container/extensions/container_methods.rst", "data_classes/container/extensions/container_methods/diagflat.rst", "data_classes/container/extensions/container_methods/dirichlet.rst", "data_classes/container/extensions/container_methods/flatten.rst", "data_classes/container/extensions/container_methods/fliplr.rst", "data_classes/container/extensions/container_methods/flipud.rst", "data_classes/container/extensions/container_methods/hamming_window.rst", "data_classes/container/extensions/container_methods/hann_window.rst", "data_classes/container/extensions/container_methods/heaviside.rst", "data_classes/container/extensions/container_methods/hstack.rst", "data_classes/container/extensions/container_methods/i0.rst", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/kaiser_window.rst", "data_classes/container/extensions/container_methods/kron.rst", "data_classes/container/extensions/container_methods/max_pool1d.rst", "data_classes/container/extensions/container_methods/max_pool2d.rst", "data_classes/container/extensions/container_methods/median.rst", "data_classes/container/extensions/container_methods/moveaxis.rst", "data_classes/container/extensions/container_methods/msort.rst", "data_classes/container/extensions/container_methods/pad.rst", "data_classes/container/extensions/container_methods/rot90.rst", "data_classes/container/extensions/container_methods/static_diagflat.rst", "data_classes/container/extensions/container_methods/static_dirichlet.rst", "data_classes/container/extensions/container_methods/static_flatten.rst", "data_classes/container/extensions/container_methods/static_fliplr.rst", "data_classes/container/extensions/container_methods/static_flipud.rst", "data_classes/container/extensions/container_methods/static_hamming_window.rst", "data_classes/container/extensions/container_methods/static_hann_window.rst", "data_classes/container/extensions/container_methods/static_heaviside.rst", "data_classes/container/extensions/container_methods/static_hstack.rst", "data_classes/container/extensions/container_methods/static_i0.rst", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/static_kaiser_window.rst", "data_classes/container/extensions/container_methods/static_kron.rst", "data_classes/container/extensions/container_methods/static_max_pool1d.rst", "data_classes/container/extensions/container_methods/static_max_pool2d.rst", "data_classes/container/extensions/container_methods/static_median.rst", "data_classes/container/extensions/container_methods/static_moveaxis.rst", "data_classes/container/extensions/container_methods/static_msort.rst", "data_classes/container/extensions/container_methods/static_pad.rst", "data_classes/container/extensions/container_methods/static_rot90.rst", "data_classes/container/extensions/container_methods/static_top_k.rst", "data_classes/container/extensions/container_methods/static_triu_indices.rst", "data_classes/container/extensions/container_methods/static_vstack.rst", "data_classes/container/extensions/container_methods/top_k.rst", "data_classes/container/extensions/container_methods/triu_indices.rst", "data_classes/container/extensions/container_methods/vstack.rst", "data_classes/container/extensions/conversions.rst", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions.rst", "data_classes/container/extensions/creation.rst", "data_classes/container/extensions/creation/ContainerWithCreationExtensions.rst", "data_classes/container/extensions/data_type.rst", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions.rst", "data_classes/container/extensions/device.rst", "data_classes/container/extensions/device/ContainerWithDeviceExtensions.rst", "data_classes/container/extensions/general.rst", "data_classes/container/extensions/general/ContainerWithGeneralExtensions.rst", "data_classes/container/extensions/gradients.rst", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions.rst", "data_classes/container/extensions/image.rst", "data_classes/container/extensions/image/ContainerWithImageExtensions.rst", "data_classes/container/extensions/layers.rst", "data_classes/container/extensions/layers/ContainerWithLayersExtensions.rst", "data_classes/container/extensions/linear_algebra.rst", "data_classes/container/extensions/linear_algebra/ContainerWithLinalgExtensions.rst", "data_classes/container/extensions/losses.rst", "data_classes/container/extensions/losses/ContainerWithLossesExtensions.rst", "data_classes/container/extensions/manipulation.rst", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions.rst", "data_classes/container/extensions/norms.rst", "data_classes/container/extensions/norms/ContainerWithNormsExtensions.rst", "data_classes/container/extensions/random.rst", "data_classes/container/extensions/random/ContainerWithRandomExtensions.rst", "data_classes/container/extensions/searching.rst", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions.rst", "data_classes/container/extensions/set.rst", "data_classes/container/extensions/set/ContainerWithSetExtensions.rst", "data_classes/container/extensions/sorting.rst", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions.rst", "data_classes/container/extensions/statistical.rst", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions.rst", "data_classes/container/extensions/utility.rst", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/experimental.rst", "functional/experimental/elementwise.rst", "functional/experimental/elementwise/count_nonzero.rst", "functional/experimental/elementwise/exp2.rst", "functional/experimental/elementwise/float_power.rst", "functional/experimental/elementwise/fmax.rst", "functional/experimental/elementwise/fmod.rst", "functional/experimental/elementwise/gcd.rst", "functional/experimental/elementwise/lcm.rst", "functional/experimental/elementwise/nansum.rst", "functional/experimental/elementwise/sinc.rst", "functional/experimental/elementwise/trapz.rst", "functional/extensions.rst", "functional/extensions/activations.rst", "functional/extensions/compilation.rst", "functional/extensions/constants.rst", "functional/extensions/creation.rst", "functional/extensions/creation/triu_indices.rst", "functional/extensions/data_type.rst", "functional/extensions/device.rst", "functional/extensions/general.rst", "functional/extensions/gradients.rst", "functional/extensions/layers.rst", "functional/extensions/layers/hamming_window.rst", "functional/extensions/layers/hann_window.rst", "functional/extensions/layers/kaiser_bessel_derived_window.rst", "functional/extensions/layers/kaiser_window.rst", "functional/extensions/layers/max_pool1d.rst", "functional/extensions/layers/max_pool2d.rst", "functional/extensions/layers/pad.rst", "functional/extensions/layers/vorbis_window.rst", "functional/extensions/linear_algebra.rst", "functional/extensions/linear_algebra/diagflat.rst", "functional/extensions/linear_algebra/kron.rst", "functional/extensions/losses.rst", "functional/extensions/manipulation.rst", "functional/extensions/manipulation/flatten.rst", "functional/extensions/manipulation/fliplr.rst", "functional/extensions/manipulation/flipud.rst", "functional/extensions/manipulation/heaviside.rst", "functional/extensions/manipulation/hstack.rst", "functional/extensions/manipulation/i0.rst", "functional/extensions/manipulation/moveaxis.rst", "functional/extensions/manipulation/ndenumerate.rst", "functional/extensions/manipulation/ndindex.rst", "functional/extensions/manipulation/rot90.rst", "functional/extensions/manipulation/top_k.rst", "functional/extensions/manipulation/vstack.rst", "functional/extensions/meta.rst", "functional/extensions/nest.rst", "functional/extensions/norms.rst", "functional/extensions/random.rst", "functional/extensions/random/dirichlet.rst", "functional/extensions/searching.rst", "functional/extensions/set.rst", "functional/extensions/sorting.rst", "functional/extensions/sorting/msort.rst", "functional/extensions/sparse_array.rst", "functional/extensions/sparse_array/is_ivy_sparse_array.rst", "functional/extensions/sparse_array/is_native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/extensions/statistical.rst", "functional/extensions/statistical/median.rst", "functional/extensions/utility.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_frontend_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/NewTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "Array methods", "count_nonzero array", "exp2 array", "float_power array", "fmax array", "fmod array", "gcd array", "lcm array", "nansum array", "sinc array", "trapz array", "Elementwise", "ArrayWithElementWiseExtensions", "Extensions", "Activations", "ArrayWithActivationsExtensions", "Array methods", "diagflat array", "dirichlet array", "flatten array", "fliplr array", "flipud array", "heaviside array", "hstack array", "i0 array", "kron array", "max_pool1d array", "max_pool2d array", "median array", "moveaxis array", "msort array", "pad array", "rot90 array", "top_k array", "vstack array", "Conversions", "ArrayWithConversionsExtensions", "Creation", "ArrayWithCreationExtensions", "Data type", "ArrayWithData_typeExtensions", "Device", "ArrayWithDeviceExtensions", "General", "ArrayWithGeneralExtensions", "Gradients", "ArrayWithGradientsExtensions", "Image", "ArrayWithImageExtension", "Layers", "ArrayWithLayersExtensions", "Linear algebra", "ArrayWithLinalgExtensions", "Losses", "ArrayWithLossesExtensions", "Manipulation", "ArrayWithManipulationExtensions", "Norms", "ArrayWithNormsExtensions", "Random", "ArrayWithRandomExtensions", "Searching", "ArrayWithSearchingExtensions", "Set", "ArrayWithSetExtensions", "Sorting", "ArrayWithSortingExtensions", "Statistical", "ArrayWithStatisticalExtensions", "Utility", "ArrayWithUtilityExtensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "Container methods", "count_nonzero container", "exp2 container", "float_power container", "fmax container", "fmod container", "gcd container", "lcm container", "nansum container", "sinc container", "static_count_nonzero container", "static_exp2 container", "static_float_power container", "static_fmax container", "static_fmod container", "static_gcd container", "static_lcm container", "static_nansum container", "static_sinc container", "Elementwise", "ContainerWithElementWiseExtensions", "Extensions", "Activations", "ContainerWithActivationExtensions", "Container methods", "diagflat container", "dirichlet container", "flatten container", "fliplr container", "flipud container", "hamming_window container", "hann_window container", "heaviside container", "hstack container", "i0 container", "kaiser_bessel_derived_window container", "kaiser_window container", "kron container", "max_pool1d container", "max_pool2d container", "median container", "moveaxis container", "msort container", "pad container", "rot90 container", "static_diagflat container", "static_dirichlet container", "static_flatten container", "static_fliplr container", "static_flipud container", "static_hamming_window container", "static_hann_window container", "static_heaviside container", "static_hstack container", "static_i0 container", "static_kaiser_bessel_derived_window container", "static_kaiser_window container", "static_kron container", "static_max_pool1d container", "static_max_pool2d container", "static_median container", "static_moveaxis container", "static_msort container", "static_pad container", "static_rot90 container", "static_top_k container", "static_triu_indices container", "static_vstack container", "top_k container", "triu_indices container", "vstack container", "Conversions", "ContainerWithConversionExtensions", "Creation", "ContainerWithCreationExtensions", "Data type", "ContainerWithData_typeExtensions", "Device", "ContainerWithDeviceExtensions", "General", "ContainerWithGeneralExtensions", "Gradients", "ContainerWithGradientsExtensions", "Image", "ContainerWithImageExtensions", "Layers", "ContainerWithLayersExtensions", "Linear algebra", "ContainerWithLinalgExtensions", "Losses", "ContainerWithLossesExtensions", "Manipulation", "ContainerWithManipulationExtensions", "Norms", "ContainerWithNormsExtensions", "Random", "ContainerWithRandomExtensions", "Searching", "ContainerWithSearchingExtensions", "Set", "ContainerWithSetExtensions", "Sorting", "ContainerWithSortingExtensions", "Statistical", "ContainerWithStatisticalExtensions", "Utility", "ContainerWithUtilityExtensions", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Experimental", "Elementwise", "count_nonzero", "exp2", "float_power", "fmax", "fmod", "gcd", "lcm", "nansum", "sinc", "trapz", "Extensions", "Activations", "Compilation", "Constants", "Creation", "triu_indices", "Data type", "Device", "General", "Gradients", "Layers", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "max_pool1d", "max_pool2d", "pad", "vorbis_window", "Linear algebra", "diagflat", "kron", "Losses", "Manipulation", "flatten", "fliplr", "flipud", "heaviside", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "rot90", "top_k", "vstack", "Meta", "Nest", "Norms", "Random", "dirichlet", "Searching", "Set", "Sorting", "msort", "Sparse array", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "Utility", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_frontend_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "NewTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 33, 34, 35, 41, 42, 325, 328, 336, 341, 1719, 1735, 1736], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 46, 48, 50, 51, 52, 53, 55, 57, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 134, 135, 136, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 166, 168, 170, 172, 174, 176, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 321, 323, 326, 327, 328, 331, 332, 333, 334, 336, 337, 339, 340, 341, 343, 344, 346, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 387, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 426, 428, 429, 430, 431, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1723, 1724, 1726, 1728, 1729, 1732, 1734, 1735, 1736, 1739, 1740, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1780], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 134, 135, 136, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 166, 168, 170, 172, 174, 176, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 319, 320, 321, 322, 325, 326, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 346, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 387, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 426, 428, 429, 430, 431, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1733, 1739, 1740, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1780], "ml": [32, 34, 35, 36, 39, 335, 340, 341, 342, 344, 345, 346, 357, 1719, 1725, 1726, 1727, 1728, 1729, 1732, 1734, 1736], "explos": [32, 34, 1719], "A": [32, 33, 34, 35, 38, 39, 40, 41, 54, 55, 56, 57, 134, 135, 146, 147, 150, 151, 160, 161, 319, 323, 325, 326, 331, 332, 335, 337, 341, 344, 358, 1718, 1719, 1729, 1730], "huge": [32, 34, 344, 1719, 1729, 1735], "number": [32, 33, 41, 42, 54, 55, 56, 57, 60, 61, 134, 135, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 323, 325, 326, 327, 334, 336, 337, 339, 341, 344, 1719], "tool": [32, 35, 42, 327, 342, 346, 357, 358, 1719, 1727, 1728, 1729, 1730, 1732, 1735, 1736], "have": [32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1718, 1719, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "explod": [32, 33, 1719], "onto": [32, 33, 1719, 1729], "scene": [32, 33, 136, 137, 319, 340, 342, 1719, 1729], "b": [32, 35, 36, 60, 61, 134, 135, 140, 141, 319, 322, 323, 324, 327, 332, 340, 341, 342, 344, 345, 346, 356, 1719, 1725], "why": [32, 34, 42, 334, 343, 1719], "unifi": [32, 34, 319, 320, 321, 325, 329, 335, 339, 341, 358, 1719, 1725, 1726, 1727, 1729, 1733, 1736], "should": [32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 54, 55, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 150, 151, 152, 153, 158, 159, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1719, 1725, 1726, 1729, 1731, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "we": [32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 162, 163, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1729, 1730, 1734, 1735], "try": [32, 34, 35, 38, 40, 41, 42, 321, 323, 325, 329, 330, 341, 343, 358, 1719], "them": [32, 33, 34, 35, 38, 40, 42, 320, 321, 322, 323, 329, 333, 334, 335, 336, 337, 341, 343, 344, 345, 358, 1718, 1719, 1726, 1727, 1729, 1731, 1735], "c": [32, 34, 35, 36, 41, 134, 135, 136, 137, 140, 141, 158, 159, 319, 323, 327, 332, 339, 340, 341, 342, 344, 358, 1718, 1719, 1725, 1729, 1733, 1734, 1736], "standard": [32, 60, 61, 148, 149, 150, 151, 158, 159, 319, 320, 321, 323, 325, 328, 331, 334, 337, 338, 358, 1719, 1725, 1727, 1728, 1731, 1732, 1734], "re": [32, 33, 34, 36, 40, 41, 42, 134, 135, 319, 325, 338, 339, 343, 346, 358, 1719, 1729], "collabor": [32, 33, 34, 1719], "The": [32, 33, 35, 36, 37, 38, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 344, 345, 346, 357, 1718, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "consortium": [32, 34, 1719], "python": [32, 33, 34, 38, 39, 41, 42, 150, 151, 320, 323, 329, 330, 335, 337, 339, 341, 343, 344, 358, 1718, 1719, 1726, 1729, 1730, 1731, 1735, 1736], "data": [32, 34, 41, 54, 55, 57, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 343, 1718, 1719, 1729, 1730, 1731, 1733, 1734, 1735], "api": [32, 33, 41, 42, 60, 61, 319, 321, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 344, 358, 1718, 1719, 1725, 1727, 1729, 1731, 1734, 1736], "open": [33, 34, 35, 36, 38, 41, 42, 150, 151, 324, 325, 328, 335, 336, 339, 357, 1719, 1727, 1728, 1729, 1731, 1732], "sourc": [33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 320, 321, 323, 324, 335, 1719, 1728, 1729, 1730, 1731, 1732], "project": [33, 34, 35, 38, 41, 42, 322, 337, 345, 357, 358, 1725, 1727, 1729, 1732, 1736], "ha": [33, 34, 35, 40, 42, 142, 143, 146, 147, 154, 155, 158, 159, 320, 322, 323, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 357, 358, 1725, 1728, 1729, 1731, 1732, 1735], "grown": 33, "consider": [33, 327, 331, 339, 1726, 1727], "recent": [33, 34, 41, 42, 337], "year": [33, 35, 320, 358, 1719, 1729], "especi": [33, 41, 320, 339, 1729], "deep": [33, 36, 39, 40, 42, 323, 325, 336, 340, 343, 344, 1719, 1727, 1729, 1732, 1733, 1735, 1736], "learn": [33, 34, 36, 39, 40, 41, 136, 137, 319, 320, 332, 340, 357, 1718, 1719, 1727, 1731, 1732, 1733, 1734, 1735, 1736], "can": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 56, 57, 142, 143, 146, 147, 150, 151, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 358, 1718, 1719, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1735, 1736], "seen": [33, 34, 324, 327, 329, 335, 337, 341, 343, 344, 1735], "from": [33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736], "rapidli": 33, "increas": [33, 142, 143, 325, 329, 338, 339, 1729], "github": [33, 37, 39, 40, 42, 320, 325, 327, 328, 337], "repo": [33, 37, 38, 39, 41, 42, 320, 325, 335, 338], "contain": [33, 37, 38, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 158, 159, 160, 161, 319, 320, 324, 325, 327, 328, 331, 332, 333, 334, 337, 340, 341, 342, 345, 358, 1718, 1719, 1729, 1730, 1735], "term": [33, 42, 323, 341, 1718, 1729], "over": [33, 35, 41, 42, 142, 143, 158, 159, 160, 161, 162, 163, 322, 327, 328, 334, 337, 341, 343, 358, 1727, 1729], "time": [33, 34, 35, 40, 41, 42, 136, 137, 154, 155, 322, 323, 324, 325, 327, 331, 332, 333, 334, 335, 337, 338, 341, 344, 346, 358, 1727, 1729, 1730, 1733, 1734, 1735], "These": [33, 34, 35, 37, 39, 40, 41, 42, 320, 323, 324, 325, 327, 328, 330, 331, 332, 334, 336, 337, 338, 341, 342, 344, 345, 346, 358, 1718, 1729, 1733, 1735, 1736], "ar": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 60, 61, 134, 135, 142, 143, 146, 147, 150, 151, 152, 153, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "written": [33, 41, 321, 328, 331, 334, 335, 337, 338, 341, 343, 346, 358, 1727, 1729, 1733, 1735, 1736], "mani": [33, 34, 35, 40, 41, 42, 146, 147, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 344, 358, 1725, 1729, 1732, 1735, 1736], "differ": [33, 34, 35, 39, 41, 42, 60, 61, 134, 135, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 358, 1719, 1726, 1727, 1728, 1729, 1732, 1735, 1736], "while": [33, 34, 40, 41, 42, 322, 325, 327, 330, 331, 334, 335, 337, 339, 343, 345, 346, 358, 1729, 1735, 1736], "thi": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1719, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "i": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "wonder": [33, 35, 343], "thing": [33, 34, 35, 39, 40, 41, 42, 322, 330, 335, 337, 339, 343, 344, 1729], "research": [33, 357, 1729, 1736], "develop": [33, 34, 35, 36, 37, 39, 40, 41, 42, 320, 324, 338, 357, 358, 1718, 1719, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736], "when": [33, 34, 36, 37, 39, 40, 41, 42, 54, 55, 56, 57, 142, 143, 144, 145, 150, 151, 152, 153, 158, 159, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 343, 344, 346, 358, 1727, 1729, 1732, 1733, 1734, 1735], "also": [33, 34, 36, 37, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 357, 358, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1734, 1735, 1736], "consid": [33, 34, 142, 143, 332, 338, 342, 343, 344, 1726, 1730, 1734, 1736], "speed": [33, 337, 1732], "which": [33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1734, 1735, 1736], "evolv": [33, 1729], "sharabl": 33, "code": [33, 34, 35, 37, 38, 39, 40, 41, 42, 60, 61, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 356, 358, 1718, 1719, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736], "significantli": [33, 1727], "hinder": [33, 331], "librari": [33, 34, 35, 36, 40, 320, 339, 346, 356, 358, 1718, 1719, 1725, 1726, 1727, 1729, 1733, 1736], "becom": [33, 35, 42, 323, 327, 335, 358], "outdat": 33, "matter": [33, 327], "month": [33, 41], "rigor": [33, 337], "maintain": [33, 42, 156, 157, 320, 324, 1728], "against": [33, 56, 57, 142, 143, 152, 153, 337, 341, 358, 1729], "newest": 33, "For": [33, 34, 35, 37, 38, 40, 41, 42, 136, 137, 142, 143, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 357, 358, 1726, 1727, 1730, 1735, 1736], "softwar": [33, 34, 41, 42, 1727, 1732, 1733, 1734], "pipelin": [33, 321, 346, 1718, 1729, 1730, 1735], "where": [33, 34, 35, 36, 38, 41, 42, 54, 55, 60, 61, 134, 135, 142, 143, 146, 147, 150, 151, 152, 153, 158, 159, 160, 161, 321, 322, 323, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 358, 1719, 1727, 1736], "rapid": [33, 34, 41, 1729], "prototyp": [33, 1729], "vital": [33, 346], "signific": [33, 34, 358, 1729], "bottleneck": 33, "As": [33, 42, 162, 163, 321, 323, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 358, 1729, 1734], "new": [33, 34, 35, 36, 38, 40, 41, 42, 134, 135, 136, 137, 146, 147, 148, 149, 319, 322, 323, 324, 325, 327, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 343, 346, 357, 1718, 1719, 1727, 1731, 1735, 1736], "futur": [33, 35, 41, 42, 325, 335, 338, 339, 343, 358, 1735], "avail": [33, 41, 42, 134, 135, 323, 324, 326, 328, 335, 358, 1734, 1735], "backend": [33, 39, 40, 41, 42, 49, 51, 53, 134, 135, 136, 137, 319, 320, 321, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 346, 1718, 1719, 1729, 1732, 1735, 1736], "specif": [33, 40, 42, 134, 135, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 357, 358, 1718, 1725, 1727, 1728, 1730, 1731, 1732, 1736], "quickli": [33, 35, 41, 42, 344, 345, 1729, 1736], "obsolet": [33, 35], "user": [33, 34, 37, 38, 41, 42, 319, 322, 323, 325, 333, 334, 335, 337, 339, 340, 341, 358, 1727, 1729, 1735, 1736], "constantli": [33, 338, 339], "invent": 33, "wheel": 33, "If": [33, 36, 37, 38, 40, 41, 42, 44, 49, 52, 53, 54, 55, 56, 57, 60, 61, 136, 137, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "our": [33, 34, 36, 39, 40, 41, 42, 44, 162, 163, 164, 320, 323, 324, 325, 327, 329, 330, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1719, 1734, 1735, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "desir": [33, 42, 56, 57, 152, 153, 322, 325, 335, 341, 1729], "provid": [33, 41, 42, 54, 55, 134, 135, 136, 137, 146, 147, 152, 153, 158, 159, 160, 161, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 337, 339, 343, 345, 357, 358, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1736], "simultan": [33, 35], "all": [33, 34, 35, 36, 37, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 134, 135, 142, 143, 146, 147, 150, 151, 160, 161, 162, 163, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1735, 1736], "modern": [33, 34, 1734], "simpl": [33, 40, 41, 42, 321, 323, 325, 326, 327, 328, 332, 334, 335, 337, 338, 339, 343, 345, 346, 358, 1718, 1728, 1729, 1730, 1731], "scalabl": [33, 341, 1734, 1735], "manner": [33, 41, 49, 52, 53, 326, 328, 335, 338, 344, 357, 358, 1725, 1727, 1735, 1736], "must": [33, 35, 37, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 320, 321, 325, 326, 327, 328, 329, 331, 332, 335, 338, 339, 341, 345, 346, 1730, 1736], "determin": [33, 60, 61, 142, 143, 146, 147, 160, 161, 323, 325, 326, 328, 332, 335, 336, 339], "exactli": [33, 35, 323, 325, 326, 327, 339], "common": [33, 40, 60, 61, 323, 325, 326, 327, 330, 332, 333, 335, 338, 339, 358, 1726, 1729, 1736], "ground": [33, 335, 337], "li": 33, "between": [33, 144, 145, 146, 147, 321, 322, 323, 327, 331, 332, 335, 336, 337, 339, 340, 342, 343, 344, 346, 357, 1719, 1725, 1726, 1728, 1729, 1730, 1735], "find": [33, 36, 38, 39, 40, 41, 42, 320, 324, 337, 339, 341, 344, 1718, 1719], "exist": [33, 34, 38, 40, 41, 134, 135, 146, 147, 320, 322, 327, 328, 332, 333, 334, 335, 337, 339, 341, 358, 1718, 1727, 1729, 1732, 1735], "essenti": [33, 34, 40, 323, 326, 327, 332, 338, 1735], "order": [33, 38, 40, 41, 42, 136, 137, 142, 143, 156, 157, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 335, 336, 337, 338, 339, 344, 346, 358, 1725, 1728, 1729, 1730, 1732, 1735], "design": [33, 34, 319, 325, 334, 335, 336, 339, 341, 343, 358, 1725, 1727, 1729, 1732, 1733, 1734], "univers": 33, "abstract": [33, 323, 325, 335, 337, 339, 345, 358, 1727, 1729, 1731, 1732, 1736], "In": [33, 35, 37, 40, 41, 42, 134, 135, 146, 147, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 357, 358, 1719, 1725, 1727, 1729, 1730, 1732, 1735], "search": [33, 39, 41, 49, 52, 53, 153, 323, 327, 337, 338], "languag": [33, 35, 335, 339, 341, 1718, 1727, 1730, 1732, 1733, 1734, 1735], "first": [33, 34, 37, 38, 39, 40, 41, 42, 60, 61, 142, 143, 150, 151, 152, 153, 154, 155, 158, 159, 320, 321, 323, 327, 331, 332, 333, 334, 335, 337, 339, 341, 343, 344, 346, 1727, 1729, 1730, 1734], "see": [33, 36, 38, 40, 41, 42, 56, 57, 60, 61, 142, 143, 152, 153, 158, 159, 160, 161, 320, 323, 324, 326, 327, 331, 332, 335, 336, 337, 338, 339, 341, 343, 344, 357, 358, 1719, 1725], "clear": [33, 34, 35, 40, 42, 325, 326, 327, 335, 339, 341, 343, 1729], "front": [33, 340, 341, 344, 1719, 1727, 1729], "runner": 33, "look": [33, 37, 38, 41, 42, 322, 323, 325, 326, 327, 329, 331, 332, 335, 336, 337, 338, 339, 341, 343, 345, 346, 1719, 1725, 1729], "littl": [33, 336, 343, 1731], "deeper": [33, 42, 319, 337, 340], "follow": [33, 34, 38, 40, 41, 42, 134, 135, 136, 137, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 358, 1719, 1726, 1729, 1732], "same": [33, 35, 37, 38, 41, 42, 49, 50, 51, 54, 55, 56, 57, 60, 61, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 358, 1719, 1726, 1728, 1735, 1736], "core": [33, 40, 41, 326, 337, 346, 1719, 1727, 1728, 1729, 1730, 1734, 1736], "principl": [33, 1727, 1729, 1732], "oper": [33, 40, 41, 56, 57, 134, 135, 136, 137, 140, 141, 320, 321, 323, 325, 326, 327, 328, 332, 334, 335, 337, 339, 341, 344, 345, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736], "expos": [33, 341, 345], "almost": [33, 39, 323, 336, 342, 344], "ident": [33, 35, 323, 332, 333, 335, 336, 338, 339, 343, 344, 358, 1718, 1719], "function": [33, 38, 42, 45, 46, 49, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 319, 320, 321, 322, 324, 327, 328, 330, 334, 339, 340, 342, 343, 344, 345, 356, 357, 1718, 1719, 1726, 1727, 1728, 1729, 1730, 1735, 1736], "uniqu": [33, 154, 155, 323, 332, 335, 336, 337, 339, 358, 1732], "syntax": [33, 34, 325, 330, 1729], "argument": [33, 40, 49, 50, 51, 52, 53, 60, 61, 134, 135, 319, 320, 321, 322, 323, 327, 328, 330, 332, 333, 336, 337, 338, 339, 341, 343, 344, 1718, 1729], "There": [33, 40, 41, 42, 320, 321, 323, 325, 327, 329, 330, 332, 335, 336, 341, 344, 358, 1730, 1731, 1735, 1736], "onli": [33, 36, 40, 41, 42, 146, 147, 150, 151, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 356, 358, 1719, 1728, 1729, 1730, 1735, 1736], "so": [33, 34, 40, 41, 42, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 321, 322, 323, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 358, 1719, 1729, 1730, 1731, 1733], "wai": [33, 34, 39, 40, 41, 320, 322, 325, 334, 336, 337, 339, 343, 344, 345, 346, 358, 1731, 1735, 1736], "manipul": [33, 147, 338, 341, 346, 357, 1729], "tensor": [33, 54, 55, 60, 61, 134, 135, 146, 147, 150, 151, 321, 322, 325, 326, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 344, 346, 358, 1718, 1719, 1726, 1727, 1730, 1732, 1733, 1736], "unsurprisingli": [33, 327], "fundament": [33, 335, 339, 341, 1729], "consist": [33, 320, 321, 325, 329, 334, 341, 1730], "each": [33, 34, 35, 37, 40, 41, 42, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 152, 153, 154, 155, 158, 159, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 346, 357, 358, 1719, 1725, 1726, 1730, 1732, 1735], "veri": [33, 34, 39, 40, 41, 42, 323, 325, 326, 327, 331, 332, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 358, 1719, 1725, 1726, 1727, 1729, 1730, 1731, 1734, 1735, 1736], "similar": [33, 40, 41, 323, 324, 325, 326, 329, 333, 335, 336, 337, 338, 344, 358, 1725, 1726, 1727, 1728, 1735], "convent": [33, 322, 331, 338, 357, 1735], "those": [33, 40, 41, 42, 146, 147, 323, 325, 333, 335, 337, 339, 1726], "numpi": [33, 34, 39, 40, 41, 42, 134, 135, 320, 322, 324, 325, 326, 329, 331, 334, 336, 337, 338, 339, 341, 343, 346, 1718, 1719, 1731, 1736], "introduc": [33, 323, 324, 325, 336, 344], "2006": 33, "layer": [33, 141, 148, 149, 328, 335, 338, 339, 341, 342, 345, 1719, 1727, 1729, 1733, 1736], "therefor": [33, 37, 40, 42, 60, 61, 320, 321, 323, 325, 326, 327, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 345, 358, 1726, 1729, 1735], "present": [33, 40, 42, 323, 325, 326, 331, 334, 341, 1726, 1727, 1736], "itself": [33, 41, 42, 320, 323, 334, 335, 345, 357, 358, 1728, 1729, 1730, 1735], "cut": [33, 1735], "cloth": 33, "adher": [33, 34, 320, 325, 328, 331, 339, 341, 346, 1725, 1726, 1735], "set": [33, 36, 38, 42, 49, 52, 53, 134, 135, 136, 137, 142, 143, 152, 153, 155, 156, 157, 158, 159, 319, 320, 321, 323, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 341, 343, 344, 1727, 1728, 1729, 1730, 1731, 1733, 1736], "semant": [33, 341, 346, 1730], "round": [33, 34, 35, 37, 38, 40, 41, 42, 60, 61, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "up": [33, 34, 35, 36, 37, 38, 40, 42, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 358, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "hopefulli": [33, 34, 35, 37, 38, 40, 41, 42, 44, 164, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "paint": [33, 341], "pictur": [33, 40, 341], "how": [33, 35, 36, 38, 39, 40, 41, 42, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 357, 358, 1719, 1725, 1729], "pleas": [33, 34, 35, 37, 38, 40, 41, 42, 44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "reach": [33, 34, 35, 37, 38, 40, 41, 42, 44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "out": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "discord": [33, 34, 35, 37, 38, 40, 41, 42, 44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "you": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 134, 135, 164, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1718, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "ani": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 51, 54, 55, 60, 61, 134, 135, 160, 161, 162, 163, 164, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1718, 1719, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "question": [33, 34, 35, 37, 38, 40, 41, 42, 44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 357, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "With": [34, 35, 41, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 142, 143, 152, 153, 158, 159, 327, 333, 335, 337, 339, 341, 1729, 1732], "central": [34, 40, 339, 1735], "goal": [34, 40, 1729, 1735], "being": [34, 35, 41, 42, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 334, 335, 336, 337, 339, 341, 344, 357, 358, 1719, 1725, 1727, 1728, 1729, 1730, 1735, 1736], "would": [34, 36, 38, 40, 41, 42, 146, 147, 319, 320, 321, 322, 323, 325, 327, 328, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 358, 1719, 1729, 1735], "entir": [34, 35, 40, 41, 42, 158, 159, 160, 161, 320, 321, 323, 325, 327, 334, 335, 337, 339, 341, 344, 345, 346, 358, 1729, 1735, 1736], "forgiven": 34, "rais": [34, 42, 134, 135, 146, 147, 150, 151, 160, 161, 320, 322, 329, 330, 334, 335, 341, 343], "an": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 357, 358, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1718, 1719, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "eyebrow": 34, "want": [34, 36, 40, 41, 42, 162, 163, 324, 333, 334, 337, 339, 344, 345, 346, 358], "somehow": 34, "tensorflow": [34, 35, 39, 40, 41, 42, 134, 135, 320, 324, 325, 326, 331, 334, 335, 336, 337, 338, 339, 341, 346, 358, 1718, 1719, 1727, 1730, 1732, 1733, 1735, 1736], "pytorch": [34, 35, 39, 40, 136, 137, 324, 325, 326, 329, 331, 332, 334, 335, 336, 338, 339, 341, 346, 358, 1718, 1719, 1730, 1732, 1733, 1735, 1736], "jax": [34, 35, 39, 40, 41, 42, 136, 137, 320, 322, 324, 325, 326, 331, 334, 335, 336, 337, 338, 339, 341, 343, 346, 358, 1719, 1730, 1732, 1735, 1736], "other": [34, 37, 40, 41, 42, 56, 57, 134, 135, 158, 159, 320, 321, 323, 324, 327, 328, 330, 332, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 356, 357, 358, 1718, 1719, 1725, 1727, 1728, 1729, 1735, 1736], "strong": [34, 358, 1729], "industri": [34, 1729, 1731], "back": [34, 41, 42, 321, 325, 333, 340, 358, 1727, 1731], "momentum": 34, "won": [34, 35, 41, 42, 323, 337, 346], "t": [34, 35, 37, 38, 40, 41, 42, 162, 163, 319, 322, 323, 324, 325, 327, 333, 334, 337, 339, 341, 343, 344, 345, 346, 358, 1727, 1729, 1731], "ad": [34, 39, 40, 41, 42, 146, 147, 321, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 345, 358, 1728, 1729], "just": [34, 35, 41, 42, 320, 322, 325, 327, 328, 332, 333, 334, 335, 336, 337, 341, 343, 344, 358, 1729, 1730, 1735], "make": [34, 35, 40, 41, 42, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 346, 1727, 1729, 1730, 1731, 1732, 1735, 1736], "problem": [34, 42, 321, 335, 343, 1725, 1731, 1735], "even": [34, 35, 41, 42, 320, 325, 326, 328, 331, 332, 335, 339, 343, 344, 345, 346, 358, 1735], "wors": 34, "rather": [34, 42, 134, 135, 136, 137, 320, 323, 325, 328, 334, 335, 336, 337, 338, 346, 358, 1725, 1728, 1729], "funni": 34, "comic": 34, "strip": 34, "": [34, 35, 36, 37, 38, 40, 41, 42, 54, 55, 134, 135, 136, 137, 142, 143, 158, 159, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 357, 358, 1718, 1719, 1725, 1728, 1729, 1730, 1732, 1733, 1734, 1735], "easi": [34, 41, 42, 323, 332, 336, 339, 1727, 1729, 1735, 1736], "feasibl": [34, 40], "space": [34, 134, 135, 337, 339], "howev": [34, 40, 41, 42, 320, 321, 322, 323, 325, 326, 327, 328, 331, 332, 334, 335, 336, 337, 339, 341, 343, 344, 345, 346, 358, 1728, 1729, 1735], "import": [34, 37, 39, 40, 41, 42, 162, 163, 320, 321, 322, 323, 325, 326, 327, 328, 330, 334, 335, 336, 338, 341, 343, 344, 346, 358, 1719, 1725, 1727, 1729, 1732, 1733, 1735], "case": [34, 40, 41, 42, 49, 52, 53, 134, 135, 146, 147, 158, 159, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 358, 1728, 1732], "ivi": [34, 35, 36, 38, 39, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 319, 320, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 339, 340, 356, 358, 1718, 1719, 1725, 1736], "unlik": [34, 323, 327, 334, 1734, 1736], "charger": 34, "charact": [34, 330], "encod": [34, 134, 135, 344], "instant": [34, 1719], "messag": [34, 42, 324, 327, 329, 330, 335, 341, 343], "much": [34, 40, 41, 42, 321, 323, 325, 334, 335, 336, 338, 341, 343, 344, 1727, 1729, 1735, 1736], "one": [34, 35, 40, 41, 42, 54, 55, 134, 135, 142, 143, 146, 147, 152, 153, 154, 155, 320, 321, 322, 323, 325, 327, 330, 331, 332, 333, 334, 335, 337, 339, 340, 343, 344, 346, 358, 1719, 1729, 1730, 1732, 1735], "doe": [34, 38, 40, 42, 146, 147, 319, 322, 325, 327, 328, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 344, 358, 1718, 1725, 1729, 1730, 1736], "mandat": [34, 325, 334, 337, 338], "adopt": [34, 42, 321, 331, 339, 1728, 1729, 1734], "continu": [34, 35, 39, 40, 41, 319, 320, 330, 337, 358, 1729], "own": [34, 35, 41, 320, 325, 328, 329, 335, 337, 338, 341, 358, 1718, 1725, 1728, 1729, 1734, 1735], "call": [34, 38, 42, 321, 322, 323, 325, 326, 327, 328, 331, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 358, 1729, 1730, 1733], "signatur": [34, 60, 61, 325, 326, 327, 328, 331, 334, 337, 338, 339, 1726, 1735], "replac": [34, 38, 42, 60, 61, 134, 135, 146, 147, 150, 151, 323, 325, 326, 327, 333, 335, 337, 343, 346, 358, 1736], "your": [34, 35, 36, 37, 38, 39, 40, 41, 320, 328, 338, 339, 344, 345, 358, 1719, 1729], "1": [34, 35, 38, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 320, 322, 323, 325, 327, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 358, 1719], "10": [34, 38, 41, 60, 61, 134, 135, 136, 137, 142, 143, 150, 151, 158, 159, 320, 323, 325, 327, 336, 337, 341, 343, 344, 1734], "100": [34, 35, 337, 344, 345, 346, 358, 1719], "despit": [34, 323, 325, 326, 339, 341, 1726, 1729], "distinct": [34, 41, 323, 328, 334, 335, 340, 1719, 1729], "still": [34, 40, 42, 325, 328, 334, 335, 337, 339, 345, 358, 1719, 1726, 1729, 1735], "believ": [34, 42], "share": [34, 322, 323, 327, 332, 336, 337, 339, 341, 1727, 1728, 1735], "bring": [34, 320, 337, 341, 342, 1718], "benefit": [34, 35, 41, 321, 323, 334, 339, 343, 344, 358, 1727, 1731, 1734], "unrel": [34, 42], "what": [34, 35, 37, 42, 319, 323, 327, 328, 331, 333, 335, 337, 340, 341, 343, 344, 345, 346, 357, 358, 1719, 1725, 1730, 1731, 1734], "again": [34, 35, 42, 322, 323, 327, 334, 335, 337, 338, 339, 344, 346, 358, 1734, 1735], "contrari": 34, "bumpi": 34, "road": 34, "allud": [34, 344], "most": [34, 39, 40, 41, 321, 323, 325, 326, 330, 331, 332, 334, 335, 337, 338, 339, 341, 343, 344, 345, 358, 1729, 1730, 1732, 1733, 1735, 1736], "technologi": [34, 1727, 1731], "sector": [34, 60, 61], "full": [34, 35, 42, 142, 143, 325, 328, 331, 335, 337, 339, 341, 358, 1727, 1729, 1735], "success": 34, "reason": [34, 40, 42, 320, 321, 323, 325, 327, 332, 334, 335, 338, 339, 341, 343, 1735], "build": [34, 36, 37, 41, 324, 325, 332, 340, 342, 345, 346, 358, 1718, 1719, 1727, 1729, 1731, 1734, 1735, 1736], "custom": [34, 324, 329, 336, 337, 345, 1729, 1733, 1734, 1735], "comput": [34, 35, 41, 45, 46, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 158, 159, 323, 325, 332, 335, 337, 339, 341, 344, 358, 1718, 1725, 1727, 1729, 1730, 1732, 1733, 1735], "thank": [34, 344], "interoper": [34, 1726, 1727, 1729, 1732], "compon": [34, 341, 1725, 1730, 1732], "bio": [34, 41], "hardwar": [34, 41, 339, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735], "initi": [34, 42, 322, 325, 326, 337, 341, 1729, 1735, 1736], "pcie": 34, "interfac": [34, 343, 346, 358, 1718, 1725, 1726, 1727, 1728, 1729, 1733, 1736], "motherboard": 34, "raid": 34, "storag": [34, 344], "virtual": [34, 37, 38, 42, 1732, 1733], "bluetooth": 34, "wireless": 34, "exchang": [34, 39, 1725, 1727], "btx": 34, "form": [34, 36, 49, 50, 51, 52, 53, 54, 55, 136, 137, 142, 143, 332, 337, 339, 345, 346, 1729, 1730, 1735], "factor": [34, 136, 137, 140, 141, 142, 143, 329], "sata": 34, "connect": [34, 41, 345, 346, 1727], "host": [34, 358, 1734], "bu": 34, "adapt": 34, "devic": [34, 42, 54, 55, 59, 105, 150, 151, 319, 322, 325, 329, 332, 333, 336, 338, 339, 341, 346, 358, 1718, 1728, 1729, 1731, 1732, 1733, 1734], "html": [34, 38, 60, 61, 328], "enabl": [34, 41, 42, 321, 323, 332, 333, 334, 335, 337, 339, 340, 342, 344, 346, 358, 1718, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1736], "anyon": [34, 36, 42, 358, 1735], "websit": [34, 320], "tcp": 34, "ip": 34, "node": [34, 323, 335, 1730], "commun": [34, 36, 40, 41, 42, 358, 1719, 1728, 1729, 1731], "network": [34, 323, 332, 341, 345, 357, 1719, 1725, 1727, 1728, 1729, 1733, 1735, 1736], "smtp": 34, "possibl": [34, 36, 40, 41, 42, 146, 147, 323, 324, 325, 327, 328, 334, 335, 336, 337, 339, 341, 344, 357, 358, 1727, 1729, 1735], "send": [34, 1734], "gmail": 34, "outlook": 34, "pop": [34, 41], "u": [34, 36, 41, 42, 142, 143, 323, 333, 334, 335, 336, 337, 338, 339, 345, 358], "email": 34, "ieee": 34, "754": 34, "allow": [34, 37, 40, 42, 324, 329, 330, 333, 335, 336, 337, 341, 343, 358, 1718, 1727, 1729, 1733, 1734], "calcul": [34, 40, 60, 61, 144, 145, 158, 159, 328, 336, 341], "live": [34, 35, 325, 1725, 1727], "depend": [34, 37, 40, 41, 42, 56, 57, 134, 135, 156, 157, 325, 328, 333, 334, 335, 337, 339, 341, 358, 1727, 1729, 1730], "did": [34, 40, 346, 1735], "aris": [34, 325, 358], "until": [34, 42, 330, 338, 341, 358, 1719, 1736], "wa": [34, 42, 158, 159, 160, 161, 320, 327, 335, 341, 343, 1728, 1729, 1731], "substanti": [34, 42, 321, 325, 337, 1729], "innov": 34, "growth": [34, 1732], "usag": [34, 325, 341, 358, 1732], "relev": [34, 40, 41, 42, 323, 324, 325, 327, 336, 344, 1727, 1734, 1735], "area": [34, 60, 61, 334, 356, 1719, 1725], "necess": 34, "parti": [34, 358, 1728, 1729, 1735], "could": [34, 35, 40, 41, 42, 320, 325, 327, 333, 334, 335, 336, 337, 341, 343, 344, 345, 1729, 1734, 1735], "easili": [34, 41, 324, 335, 339, 344, 345, 346, 358, 1719, 1729, 1735, 1736], "engag": [34, 36, 42], "regard": [34, 39, 323, 335, 336, 339], "effect": [34, 40, 136, 137, 158, 159, 321, 323, 328, 331, 334, 358], "2015": [34, 1729], "sinc": [34, 41, 42, 320, 323, 334, 335, 337, 358, 1729, 1735], "alongsid": 34, "machin": [34, 41, 142, 143, 320, 332, 357, 1718, 1727, 1729, 1731, 1732, 1733, 1734, 1735], "given": [34, 35, 38, 40, 41, 42, 44, 134, 135, 144, 145, 146, 147, 150, 151, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 345, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1731, 1732, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "frame": [34, 357, 1729], "less": [34, 42, 60, 61, 142, 143, 150, 151, 158, 159, 323, 325, 327, 329, 331, 334, 335, 339, 340, 341, 1729, 1731], "matur": [34, 358, 1729], "state": [34, 325, 328, 329, 331, 335, 337, 340, 341, 342, 344, 357, 1719, 1735, 1736], "than": [34, 37, 42, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 158, 159, 320, 323, 324, 325, 327, 329, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 358, 1726, 1727, 1728, 1729, 1735, 1736], "preced": [34, 345], "mention": [34, 40, 41, 42, 327, 331, 332, 334, 339, 1729], "aros": 34, "70": 34, "80": 34, "90": [34, 60, 61], "effort": [34, 36, 358, 1725, 1729, 1735], "stage": [34, 36, 38, 42, 319, 330, 337, 1719, 1729], "complet": [34, 40, 42, 320, 321, 323, 324, 327, 335, 336, 337, 343, 344, 1727], "natur": [34, 142, 143, 321, 327, 336, 357], "like": [34, 38, 40, 41, 42, 136, 137, 319, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 357, 358, 1719, 1729, 1734], "certainli": [34, 1735], "mission": [34, 1719, 1731], "creat": [34, 36, 37, 38, 40, 41, 42, 54, 55, 150, 151, 325, 326, 329, 333, 334, 335, 336, 337, 339, 341, 342, 345, 356, 357, 1718, 1719, 1729, 1730, 1735], "At": [34, 40, 41, 320, 335, 337, 338, 1729], "process": [34, 35, 36, 38, 41, 42, 323, 332, 335, 336, 337, 339, 341, 346, 1727, 1728, 1729, 1732, 1733, 1735, 1736], "ourselv": [34, 1735], "lead": [34, 35, 327, 358], "quansight": [34, 1735], "compani": [34, 1725], "made": [34, 37, 40, 42, 320, 324, 334, 338, 341, 343, 1729], "organ": [34, 321, 323, 332, 335, 338, 1718], "panda": 34, "scipi": [34, 1731, 1736], "conda": [34, 38, 41, 1731], "dask": 34, "apach": [34, 1731, 1735], "mxnet": [34, 1736], "onnx": [34, 1727, 1735], "scikit": 34, "jupyt": [34, 1731], "aw": 34, "cupi": [34, 1729, 1736], "net": [34, 35, 341, 346], "sympi": 34, "rai": 34, "modin": 34, "spyder": 34, "includ": [34, 40, 42, 54, 55, 134, 135, 152, 153, 158, 159, 160, 161, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 357, 358, 1726, 1727, 1729, 1731, 1734, 1735, 1736], "member": [34, 40, 42, 335], "googl": [34, 1719], "octoml": [34, 1735], "einop": [34, 134, 135], "further": [34, 35, 38, 42, 320, 321, 327, 329, 335, 337, 340, 341, 344, 345, 1719, 1734, 1735], "sponsor": 34, "lg": 34, "electron": 34, "microsoft": [34, 1729, 1734, 1736], "d": [34, 35, 36, 41, 140, 141, 142, 143, 319, 323, 337, 344, 1719, 1725], "e": [34, 35, 36, 37, 38, 40, 41, 42, 136, 137, 142, 143, 150, 151, 156, 157, 158, 159, 319, 320, 323, 329, 337, 341, 344, 358, 1718, 1725], "shaw": 34, "co": [34, 39, 60, 61, 134, 135, 325, 341, 357, 1719], "intel": [34, 1727, 1734], "togeth": [34, 321, 323, 330, 335, 338, 339, 345, 346, 358, 1727, 1729, 1730, 1735], "major": [34, 325, 326, 337, 358, 1726, 1729], "involv": [34, 36, 38, 56, 57, 319, 325, 327, 339, 346, 1729, 1735], "anoth": [34, 40, 41, 42, 323, 325, 332, 333, 335, 336, 337, 339, 341, 343, 346, 1718, 1729, 1735], "promis": 34, "sign": [34, 41, 60, 61, 142, 143, 341, 346], "pursuit": 34, "unif": [34, 36, 343, 1725, 1735], "clearli": [34, 40, 42, 327, 336, 337, 1733], "lot": [34, 35, 325, 333, 337, 358, 1728], "thought": [34, 41, 42, 331, 1727], "care": [34, 42, 337, 339, 346], "attent": [34, 42, 321], "gone": [34, 340], "simplifi": [34, 329, 335, 341, 342, 345, 1725, 1727, 1728, 1729, 1732, 1735, 1736], "compat": [34, 60, 61, 142, 143, 146, 147, 152, 153, 158, 159, 160, 161, 322, 331, 335, 336, 338, 341, 358, 1719], "excit": [34, 36, 319, 1719], "complianc": 34, "hope": [34, 358, 1735], "due": [34, 37, 41, 320, 334, 335, 1729], "suit": [34, 41, 319, 320, 324, 337, 344, 357, 1718, 1729, 1735], "some": [34, 35, 40, 41, 42, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 357, 358, 1718, 1719, 1725, 1726, 1728, 1729, 1730, 1735, 1736], "motiv": [34, 343], "great": [34, 35, 42, 337, 341, 343, 1735], "convinc": 34, "celebr": 34, "encourag": [34, 357, 358], "foundat": [34, 1732], "point": [35, 40, 41, 42, 56, 57, 60, 61, 142, 143, 150, 151, 158, 159, 320, 321, 324, 327, 328, 331, 334, 335, 337, 338, 339, 341, 343, 344, 357, 1735], "mai": [35, 39, 40, 41, 42, 60, 61, 156, 157, 320, 323, 325, 334, 335, 337, 342, 343, 345, 1736], "ask": [35, 40, 41, 327, 341, 343, 358], "perfectli": 35, "happi": [35, 41, 358], "current": [35, 38, 40, 41, 42, 134, 135, 320, 322, 323, 325, 326, 329, 332, 333, 335, 336, 339, 341, 346, 357, 358, 1719, 1729, 1735, 1736], "us": [35, 36, 37, 39, 40, 42, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 146, 147, 148, 149, 150, 151, 162, 163, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 357, 358, 1718, 1719, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "abund": 35, "better": [35, 37, 319, 335, 336, 338, 339, 340, 343, 344, 345, 1732], "ll": [35, 36, 41, 42, 327, 334, 344], "give": [35, 37, 41, 42, 319, 322, 327, 328, 331, 1729, 1733], "two": [35, 40, 41, 54, 55, 142, 143, 320, 321, 325, 327, 328, 335, 337, 339, 340, 344, 346, 1719, 1726, 1734], "exampl": [35, 40, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337, 338, 341, 343, 344, 345, 346, 357, 358, 1719, 1726, 1727, 1730, 1732, 1735, 1736], "streamlin": [35, 1732], "workflow": [35, 40, 42, 322, 324, 325, 335, 344, 356, 1718, 1719, 1728, 1735, 1736], "save": [35, 37, 330, 337, 358, 1728], "week": [35, 42, 1719], "let": [35, 37, 134, 135, 158, 159, 323, 325, 326, 327, 328, 329, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 1719, 1736], "sai": [35, 41, 333, 343], "deepmind": 35, "releas": [35, 40, 41, 42, 325, 335, 338, 339, 358, 1719, 1729, 1735], "awesom": 35, "paper": 35, "love": 35, "choic": [35, 41, 158, 159, 334, 335, 344, 1729], "perceiverio": 35, "happen": [35, 41, 42, 337, 344], "slew": 35, "rush": 35, "f": [35, 36, 38, 42, 319, 323, 330, 341, 344, 1725], "g": [35, 36, 40, 41, 150, 151, 319, 320, 323, 337, 341, 358, 1718, 1725], "inevit": [35, 1730], "deviat": [35, 148, 149, 150, 151, 320], "origin": [35, 40, 42, 142, 143, 146, 147, 158, 159, 322, 325, 333, 334, 335, 336, 341, 1729, 1730], "often": [35, 39, 320, 329, 330, 331, 332, 335, 337, 358, 1730, 1733, 1736], "erron": 35, "train": [35, 136, 137, 323, 326, 332, 344, 345, 346, 356, 357, 358, 1718, 1719, 1727, 1728, 1733, 1735, 1736], "poor": 35, "converg": 35, "perform": [35, 136, 137, 158, 159, 160, 161, 321, 322, 323, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 358, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "issu": [35, 36, 39, 40, 320, 322, 325, 327, 329, 335, 337, 341, 345, 358], "etc": [35, 40, 41, 42, 54, 55, 150, 151, 162, 163, 320, 321, 323, 324, 325, 327, 329, 331, 335, 336, 337, 338, 341, 343, 344, 358, 1718, 1727, 1729, 1735], "publish": [35, 358], "manag": [35, 36, 334, 358, 1731, 1733], "get": [35, 36, 39, 40, 41, 60, 61, 319, 324, 325, 326, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 1718, 1729, 1735], "work": [35, 39, 40, 41, 42, 319, 320, 323, 325, 326, 327, 329, 335, 336, 337, 338, 340, 341, 343, 345, 346, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "repositori": [35, 37, 38, 41, 42, 319, 320, 324, 330], "pull": [35, 36, 37, 38, 40, 41, 320, 327, 338, 339, 358], "request": [35, 36, 40, 327, 338, 339], "confus": [35, 325, 329, 334, 339, 1718], "do": [35, 40, 41, 42, 134, 135, 136, 137, 320, 321, 322, 323, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 338, 339, 341, 343, 344, 345, 346, 358, 1718, 1730, 1735, 1736], "don": [35, 40, 41, 42, 162, 163, 325, 337, 345, 358], "expect": [35, 42, 325, 329, 337, 358, 1719], "codebas": [35, 36, 319, 325, 334, 337, 338, 340, 1719], "total": [35, 36, 42, 158, 159, 325, 326, 327, 337, 339, 344, 345, 358], "hour": [35, 324], "spent": 35, "spin": 35, "off": [35, 41, 340, 1735], "test": [35, 39, 40, 60, 61, 160, 161, 319, 325, 327, 329, 330, 333, 335, 338, 358, 1729], "discuss": [35, 41, 42, 325, 326, 334, 335, 337, 339, 342, 343, 344, 358, 1719, 1725, 1730], "error": [35, 39, 41, 42, 60, 61, 321, 322, 324, 325, 326, 327, 329, 330, 331, 335, 337, 338, 343, 358, 1729], "iter": [35, 49, 50, 51, 52, 53, 134, 135, 162, 163, 323, 341, 344], "address": [35, 40, 42, 320, 321, 341, 1725, 1727, 1729, 1735], "sake": 35, "singl": [35, 40, 41, 42, 150, 151, 320, 323, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 358], "multipl": [35, 42, 148, 149, 158, 159, 160, 161, 322, 323, 327, 329, 332, 334, 339, 341, 358, 1727, 1728, 1729, 1736], "line": [35, 41, 320, 321, 327, 330, 333, 337, 339, 342, 343, 344, 345, 356, 1719, 1732], "convert": [35, 40, 49, 50, 51, 52, 53, 54, 55, 60, 61, 321, 333, 337, 341, 358, 1718, 1727, 1728, 1735], "directli": [35, 42, 320, 321, 323, 324, 325, 326, 328, 332, 333, 334, 335, 336, 338, 339, 341, 343, 345, 346, 357, 358, 1733, 1734, 1735], "graph": [35, 136, 137, 323, 332, 335, 339, 342, 358, 1718, 1725, 1729, 1732], "guarante": [35, 321, 358], "turn": [35, 41, 323, 327, 335, 337], "4": [35, 38, 40, 41, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 154, 155, 158, 159, 322, 323, 327, 337, 341, 343, 344, 345, 346, 1719, 1729, 1735, 1736], "step": [35, 37, 38, 40, 41, 42, 136, 137, 321, 322, 323, 325, 326, 327, 335, 337, 341, 344, 345, 346, 357, 1719, 1729], "take": [35, 36, 40, 41, 42, 158, 159, 323, 324, 325, 326, 327, 328, 334, 335, 336, 337, 339, 341, 343, 345, 346, 358, 1719, 1726, 1727, 1735], "few": [35, 39, 40, 42, 323, 325, 326, 331, 332, 334, 337, 339, 341, 342, 343, 344, 345, 356, 1719, 1729, 1731], "second": [35, 41, 60, 61, 136, 137, 142, 143, 154, 155, 320, 325, 327, 334, 335, 337, 343, 1734], "automat": [35, 40, 41, 42, 319, 323, 324, 325, 330, 332, 339, 340, 342, 345, 346, 1718, 1719, 1729, 1732, 1736], "convers": [35, 40, 50, 51, 52, 53, 60, 61, 99, 333, 340, 342, 346, 357, 358, 1718, 1719, 1728, 1735], "everyon": [35, 36, 42, 358], "regardless": [35, 36, 325, 343, 346], "wouldn": 35, "nice": [35, 337, 1729], "write": [35, 38, 39, 40, 42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 319, 320, 322, 325, 327, 328, 332, 334, 335, 336, 338, 341, 343, 346, 1729, 1736], "onc": [35, 40, 41, 42, 150, 151, 320, 323, 325, 326, 327, 335, 337, 339, 341, 344, 358], "know": [35, 42, 336, 337, 338, 1730], "among": [35, 337, 339, 1729], "frantic": 35, "port": 35, "last": [35, 42, 54, 55, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 320, 322, 325, 327, 330, 334, 336, 337, 339, 341, 358, 1729], "lucid": 35, "honk": 35, "improv": [35, 42, 325, 331, 332, 339, 341, 1718, 1727, 1729, 1731, 1732], "understand": [35, 37, 38, 39, 40, 41, 42, 319, 320, 327, 328, 331, 336, 339, 340, 1725, 1735], "pattern": [35, 134, 135, 325, 328], "hasn": 35, "chang": [35, 37, 38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 320, 322, 323, 324, 325, 327, 328, 335, 337, 338, 339, 341, 345, 358, 1719, 1732, 1735], "now": [35, 38, 41, 320, 322, 323, 325, 330, 331, 333, 335, 337, 338, 339, 343, 344, 346, 357, 358, 1729], "spend": [35, 1729], "torchvis": 35, "probabl": [35, 150, 151, 337], "sonnet": 35, "about": [35, 39, 40, 41, 42, 320, 324, 325, 331, 337, 338, 339, 340, 341, 343, 344, 345, 346, 358, 1730, 1731, 1734], "next": [35, 37, 40, 41, 42, 322, 327, 328, 333, 335, 338, 342, 343, 344, 1719, 1729, 1731], "everyth": [35, 40, 42, 327, 335, 336, 337, 338, 342, 358], "zero": [35, 54, 55, 56, 57, 60, 61, 136, 137, 142, 143, 152, 153, 158, 159, 160, 161, 321, 323, 325, 326, 327, 331, 333, 341, 344, 345, 1719, 1728], "need": [35, 37, 38, 40, 41, 42, 134, 135, 146, 147, 320, 321, 323, 325, 327, 328, 329, 332, 334, 335, 336, 338, 339, 341, 343, 344, 357, 358, 1725, 1729, 1730, 1731, 1735], "said": 35, "high": [35, 40, 150, 151, 335, 339, 344, 1718, 1725, 1726, 1727, 1728, 1729, 1733, 1735, 1736], "level": [35, 36, 40, 42, 323, 332, 335, 339, 340, 341, 344, 345, 346, 358, 1718, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736], "modul": [35, 38, 41, 162, 163, 321, 322, 330, 332, 334, 335, 337, 341, 342, 344, 346, 357, 358, 1719, 1729, 1730, 1732], "optim": [35, 136, 137, 334, 342, 344, 346, 357, 1719, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1736], "trainer": [35, 356, 358, 1719, 1736], "statu": [35, 40, 324], "quo": 35, "kera": [35, 1735], "dopamin": 35, "ignit": 35, "catalyst": 35, "lightn": 35, "fastai": 35, "haiku": [35, 346, 1729], "flax": [35, 346, 358, 1729], "trax": [35, 346], "objax": [35, 346], "idea": [35, 37, 335, 338, 342, 357, 1728], "fulli": [35, 321, 325, 331, 334, 339, 341, 342, 343, 344, 345, 346, 358, 1727, 1728, 1729, 1735, 1736], "offer": [35, 41, 335, 345, 1729, 1735, 1736], "strongli": [36, 41, 1735, 1736], "welcom": [36, 41, 42], "absolut": [36, 41, 60, 61, 142, 143, 339], "skill": [36, 1731], "whether": [36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 146, 147, 150, 151, 158, 159, 323, 325, 327, 331, 334, 335, 337, 338, 339], "veteran": 36, "beginn": [36, 1729], "aspect": [36, 335, 344, 1719, 1729], "guid": [36, 40, 41, 42, 330, 1719, 1735], "through": [36, 39, 40, 42, 319, 322, 323, 327, 332, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 346, 357, 1727, 1729, 1730, 1731], "journei": [36, 1719], "inclusvi": 36, "big": [36, 358, 1729], "team": [36, 40, 41, 42, 335, 1731], "board": 36, "contributor": [36, 41, 42, 335, 340, 1719, 1729], "split": [36, 42, 146, 147, 340, 341, 358, 1719, 1736], "section": [36, 37, 39, 40, 42, 319, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 1725, 1732, 1735], "below": [36, 38, 40, 41, 54, 55, 319, 323, 324, 325, 326, 327, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 1719, 1725, 1727, 1732, 1734], "best": [36, 39, 40, 41, 42, 319, 325, 330, 337, 338, 1732, 1733], "go": [36, 37, 40, 41, 42, 319, 322, 325, 327, 335, 336, 338, 340, 344, 358, 1725, 1729, 1730, 1734, 1736], "start": [36, 37, 38, 40, 41, 42, 319, 324, 325, 327, 328, 331, 335, 337, 339, 340, 341, 343, 344, 345, 357, 358, 1729, 1735], "finish": [36, 40, 41, 319, 1719], "dive": [36, 39, 40, 42, 323, 325, 336, 340, 343, 344, 358, 1719, 1735], "right": [36, 41, 42, 142, 143, 319, 327, 339, 344], "environ": [36, 37, 38, 42, 357, 1729, 1731], "basic": [36, 38, 40, 327], "fork": [36, 41, 320], "doc": [36, 39, 40, 327, 328, 331, 336, 337, 341, 344, 345, 1719], "document": [36, 39, 42, 325, 327, 335, 336, 337, 344, 346], "local": [36, 37, 38, 41, 320, 332], "task": [36, 42, 335, 336, 357, 1719, 1729, 1735, 1736], "help": [36, 37, 40, 41, 321, 322, 323, 325, 327, 333, 337, 338, 339, 343, 344, 345, 356, 1718, 1719, 1725, 1729, 1731, 1735], "appli": [36, 40, 41, 42, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 343, 344, 345, 346, 356, 358, 1718, 1719, 1730], "resourc": [36, 40], "video": [36, 41, 42, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 1727], "contribut": [37, 39, 40, 41, 42, 341, 1733], "toward": [37, 41, 146, 147, 338, 341, 1725, 1729], "requir": [37, 38, 40, 41, 321, 324, 325, 326, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 341, 343, 358, 1729, 1735], "slightli": [37, 323, 335, 341, 345], "more": [37, 39, 40, 42, 146, 147, 154, 155, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 357, 358, 1719, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1736], "complex": [37, 40, 325, 327, 335, 339, 344, 345, 346, 358, 1718, 1725, 1727, 1729, 1731, 1735, 1736], "setup": [37, 41, 42], "alon": [37, 337], "instanc": [37, 40, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 320, 321, 325, 327, 328, 331, 332, 333, 334, 337, 344, 345, 346, 1718, 1730], "mech": 37, "vision": [37, 356, 1719, 1725, 1735], "demo": [37, 357, 1719], "util": [37, 161, 326, 329, 338, 1727, 1735, 1736], "thu": [37, 40, 329, 335], "relat": [37, 39, 41, 42, 330, 335, 337, 338, 339, 357, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "folder": [37, 38, 41, 42, 320, 332, 335, 337, 338], "To": [37, 38, 41, 320, 323, 325, 327, 329, 330, 332, 335, 336, 337, 338, 344, 345, 346, 1719], "grasp": [37, 335], "directori": [37, 38, 40, 41, 42, 324, 335, 337], "tree": [37, 38, 325], "place": [37, 39, 42, 49, 51, 53, 54, 55, 60, 61, 134, 135, 146, 147, 319, 320, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 346, 1718, 1731], "dir": [37, 344], "clone": [37, 38, 42], "mutual": [37, 323, 332], "git": [37, 39, 41, 42, 320, 337], "http": [37, 41, 60, 61, 320, 325, 328], "com": [37, 41, 320, 325], "unifyai": [37, 38, 41, 42], "type": [37, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 319, 320, 321, 323, 324, 326, 327, 328, 330, 331, 333, 334, 336, 337, 338, 339, 341, 343, 344, 1719, 1729, 1730, 1733], "venv": 37, "python3": [37, 38, 41, 42], "m": [37, 38, 41, 42, 54, 55, 142, 143, 150, 151, 319, 341], "ivy_dev": [37, 38, 41, 42], "activ": [37, 38, 41, 42, 46, 78, 134, 135, 162, 163, 338, 345, 1719, 1729, 1732], "window": [37, 38, 42, 140, 141, 1734], "block": [37, 42, 323, 329, 330, 332, 337, 340, 342, 346, 358, 1718, 1719, 1734, 1736], "none": [37, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 320, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346], "ivy_devscriptsactiv": 37, "bat": [37, 38, 41, 42], "mac": [37, 38, 41, 42], "linux": [37, 38, 41, 42, 1732, 1734], "bin": [37, 38, 41, 42, 320, 323], "instal": [37, 38, 41, 42, 322, 330, 357, 1719], "packag": [37, 38, 41, 330, 335, 358, 1729, 1731], "edit": [37, 40, 41, 42], "mode": [37, 41, 42, 142, 143, 323, 327, 339, 358, 1729, 1732], "cd": [37, 38, 41, 42], "pip": [37, 41, 357, 1719], "repeat": [37, 42, 134, 135, 146, 147, 321, 322, 327, 328, 330, 337], "note": [37, 40, 41, 42, 60, 61, 325, 327, 328, 335, 336, 337, 338], "link": [37, 40, 41, 324, 325, 335, 1725, 1727], "reflect": [37, 42, 321, 337], "immedi": [37, 339, 1719], "ivy_robot": [37, 357], "docker": [37, 39], "desktop": [37, 41], "imag": [37, 38, 41, 139, 140, 141, 338, 341, 342, 344, 346, 357, 1719, 1729], "my": [37, 338], "mount": [37, 42], "run": [37, 38, 40, 41, 136, 137, 319, 322, 324, 327, 330, 331, 335, 336, 341, 342, 343, 344, 345, 346, 357, 358, 1727, 1729, 1730, 1731, 1732, 1734, 1735, 1736], "rm": [37, 42], "v": [37, 41, 42, 140, 141, 156, 157, 336, 341, 344, 345, 346, 1719], "pwd": 37, "volum": 37, "rebuild": 37, "after": [37, 38, 40, 41, 42, 136, 137, 148, 149, 320, 325, 327, 329, 331, 335, 337, 340, 1729], "everi": [37, 38, 40, 42, 54, 55, 134, 135, 320, 322, 323, 324, 325, 327, 331, 332, 333, 334, 335, 336, 337, 338, 341, 343, 345, 1729], "id": [37, 39, 41, 321, 323, 330], "pycharm": 37, "configur": [37, 38, 41, 42, 324, 325, 333], "part": [37, 42, 54, 55, 136, 137, 320, 332, 335, 337, 338, 339, 341, 342, 346, 357, 358, 1727, 1729, 1734, 1735, 1736], "vscode": [37, 41], "found": [37, 40, 41, 42, 321, 322, 323, 325, 328, 330, 333, 334, 335, 339, 1731], "devcontain": 37, "extens": [37, 39, 41, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 328, 335, 337, 1003, 1726, 1729, 1736], "remot": [37, 41, 320], "codespac": 37, "config": [37, 320, 344, 1730], "json": [37, 344], "good": [37, 38, 39, 40, 41, 42, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345], "feel": [37, 38, 40, 41, 42, 44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "free": [37, 38, 39, 40, 42, 44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "channel": [37, 38, 40, 41, 42, 44, 134, 135, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "pre": [37, 40, 337, 346, 358, 1729], "commit": [37, 40, 320, 324, 327, 337], "_": [37, 38, 41, 60, 61, 328, 330, 334, 335, 337, 344], "builder": [38, 356, 358, 1718, 1719], "dockerfil": [38, 41], "command": [38, 41, 320, 333, 1719], "maco": [38, 1734], "latest": [38, 40, 41, 42, 60, 61, 322, 324, 325, 328, 338, 358, 1734], "ubuntu": [38, 324], "arg": [38, 49, 50, 51, 329, 335, 341, 345], "name": [38, 40, 41, 42, 154, 155, 322, 323, 327, 328, 330, 331, 335, 336, 337, 338, 339, 341, 344, 346, 1729], "uid": 38, "bash": [38, 42, 320], "root": [38, 41, 42, 60, 61, 335, 344], "both": [38, 42, 60, 61, 142, 143, 322, 323, 325, 326, 327, 328, 331, 332, 334, 335, 337, 339, 341, 343, 344, 345, 346, 357, 358, 1729, 1732, 1734, 1735, 1736], "either": [38, 40, 41, 42, 60, 61, 134, 135, 322, 323, 325, 326, 327, 328, 332, 334, 335, 336, 337, 339, 341, 344, 358, 1729], "termin": [38, 41, 42, 323, 341, 344], "3": [38, 41, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 154, 155, 158, 159, 320, 322, 323, 325, 327, 337, 341, 343, 344, 345, 346, 1719, 1736], "8": [38, 41, 60, 61, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 323, 327, 337, 340, 344, 1719], "built": [38, 41, 42, 323, 337, 342, 1718, 1728, 1729, 1733], "doesn": [38, 41, 322, 323, 324, 325, 327, 337, 339, 341, 358, 1727], "explicit": [38, 41, 323, 325, 334, 335, 341, 358, 1729], "cmd": [38, 41], "file": [38, 40, 41, 42, 320, 321, 322, 323, 324, 328, 330, 332, 335, 336, 337, 338, 341, 344, 1725, 1728, 1729, 1730], "abov": [38, 41, 42, 54, 55, 60, 61, 150, 151, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 341, 343, 344, 345, 346, 1729, 1734], "script": [38, 41, 42, 327, 341, 358, 1729], "OR": [38, 41, 42, 160, 161], "move": [38, 42, 338], "execut": [38, 41, 42, 323, 327, 334, 337, 339, 341, 343, 346, 358, 1718, 1725, 1729, 1730, 1731, 1732, 1733, 1735], "insid": [38, 41, 42, 323, 325, 333, 337, 338, 1735], "make_docs_without_dock": 38, "path": [38, 41, 334, 335, 336, 1729], "rel": [38, 42, 136, 137, 142, 143, 146, 147, 156, 157, 336, 339, 1719, 1729, 1731], "assum": [38, 60, 61, 322, 325, 328, 336, 339, 343, 344, 358], "gener": [38, 40, 41, 42, 60, 61, 135, 136, 137, 150, 151, 162, 163, 319, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 343, 345, 346, 357, 358, 1718, 1719, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735], "prefer": [38, 41, 323, 333, 335, 339, 1729], "browser": [38, 41], "affect": [38, 335], "page": [38, 41, 42, 324, 342, 343, 346, 356, 1719], "It": [38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 319, 320, 321, 322, 323, 324, 325, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 1727, 1729, 1730, 1732, 1733, 1734, 1735, 1736], "synchron": [38, 324], "respons": [38, 42, 325], "rest": [38, 41, 324, 346, 1731], "remove_doc": 38, "indic": [38, 54, 55, 134, 135, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 324, 330, 331, 346, 1719], "privat": [38, 337], "access": [38, 40, 41, 42, 325, 335, 1729, 1731, 1733], "fulfil": [38, 340, 1719], "purpos": [38, 42, 321, 323, 324, 327, 329, 331, 332, 333, 335, 337, 339, 340, 343, 1718, 1719, 1728, 1730, 1733, 1734, 1735], "delet": [38, 42], "previous": [38, 41, 332, 337, 341], "autogenerated_sourc": 38, "2": [38, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 320, 322, 323, 325, 327, 329, 331, 334, 335, 336, 337, 340, 341, 343, 344, 345, 346, 358, 1719, 1735, 1736], "Then": [38, 40, 42, 333, 338, 358], "format": [38, 319, 325, 326, 327, 328, 329, 341, 343, 344, 1719, 1725, 1727, 1729, 1730], "x": [38, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 1719], "png": [38, 344], "_imag": 38, "lastli": 38, "docstr": [38, 39, 40, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 319, 330, 331, 332, 335, 338], "structur": [38, 42, 321, 323, 332, 336, 338, 344, 345, 1728, 1729], "rst": [38, 427], "main": [38, 41, 54, 55, 142, 143, 323, 330, 333, 337, 1727, 1729, 1730, 1735], "submodul": [38, 40, 41, 42, 44, 164, 320, 324, 326, 332, 333, 337, 340, 341, 345, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1718, 1719, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "skip": [38, 324, 333, 337], "read": [38, 40, 1719, 1729], "partial_sourc": 38, "conf": 38, "copi": [38, 42, 54, 55, 56, 57, 134, 135, 146, 147, 322, 325, 328, 335, 336, 341, 344, 357, 358], "5": [38, 41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 320, 322, 323, 327, 331, 336, 337, 343, 344, 345], "create_rst_fil": 38, "list": [38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 134, 135, 140, 141, 146, 147, 148, 149, 162, 163, 320, 323, 325, 326, 327, 330, 331, 335, 336, 337, 338, 341, 344, 345, 346, 358, 1719, 1729, 1730, 1735], "filter": [38, 140, 141, 337], "recurs": [38, 41, 49, 50, 51, 52, 53, 320, 323, 332, 345, 358], "repres": [38, 60, 61, 142, 143, 339, 343, 1726, 1727, 1730], "its": [38, 40, 41, 42, 49, 52, 53, 56, 57, 146, 147, 325, 328, 333, 335, 336, 337, 338, 339, 346, 358, 1718, 1728, 1729, 1735], "overal": [38, 323, 325, 326, 328, 346, 1725, 1727, 1728, 1729], "markup": 38, "6": [38, 54, 55, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 156, 157, 158, 159, 322, 323, 327, 337, 339, 341, 343, 344, 345], "extract": [38, 335, 338, 1725, 1729, 1730, 1735], "class": [38, 40, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 321, 323, 325, 326, 327, 328, 331, 336, 337, 339, 341, 342, 344, 345, 346, 356, 357, 358, 1718, 1719, 1727, 1729, 1730, 1736], "get_functions_and_class": 38, "doctr": 38, "7": [38, 42, 45, 46, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 323, 327, 332, 334, 337], "readm": [38, 358], "module_nam": 38, "copy_readme_to_rst": 38, "tabl": [38, 325, 335, 1729], "content": [38, 40, 334, 341, 344], "toc": 38, "accord": [38, 40, 41, 56, 57, 134, 135, 158, 159, 320, 325, 332, 335, 337], "append": [38, 329, 337, 341, 344], "append_toctree_to_rst": 38, "9": [38, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 156, 157, 158, 159, 323, 327, 337, 344, 345, 1725], "index": [38, 54, 55, 134, 135, 152, 153, 154, 155, 156, 157, 323, 332, 336, 337, 343, 1729], "create_index_rst": 38, "14": [38, 56, 57, 60, 61, 150, 151, 158, 159, 323, 327, 337], "\u03c0": 38, "updat": [38, 40, 41, 42, 49, 51, 53, 134, 135, 136, 137, 319, 320, 321, 323, 324, 325, 327, 331, 333, 336, 339, 341, 343, 344, 346, 358], "namespac": [38, 40, 325, 333, 335, 336, 338, 341, 346], "remov": [38, 40, 142, 143, 322, 325, 328, 332, 337, 339, 346, 1729], "here": [39, 40, 41, 42, 320, 323, 324, 327, 331, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 357, 358, 1729, 1730], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "respect": [39, 40, 42, 60, 61, 136, 137, 321, 323, 325, 327, 331, 335, 337, 338, 1725, 1735], "behaviour": [39, 40, 42, 319, 320, 321, 323, 325, 328, 329, 331, 334, 335, 337, 338, 343], "frontend": [39, 319, 325, 337, 338, 340, 342, 1718, 1729], "refer": [39, 40, 41, 42, 158, 159, 160, 161, 320, 325, 331, 332, 335, 336, 337, 358, 1718, 1729], "realpython": 39, "pyn": 39, "kind": [39, 335, 337, 339, 341, 358], "stack": [39, 142, 143, 146, 147, 341, 1719, 1725, 1727, 1734, 1735], "overflow": [39, 325], "platform": [39, 41, 1727, 1731, 1733], "sort": [39, 157, 338], "inform": [39, 40, 41, 42, 136, 137, 320, 323, 329, 336, 337, 1732], "pilot": 39, "bit": [39, 40, 41, 323, 325, 327, 332, 341, 343, 1735], "thei": [39, 40, 42, 142, 143, 150, 151, 319, 320, 322, 323, 324, 325, 326, 327, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 358, 1719, 1726, 1729, 1731, 1732, 1735, 1736], "done": [39, 40, 41, 42, 320, 327, 330, 335, 337, 344, 1729], "faster": [39, 1718, 1731, 1734], "head": [39, 41, 1719], "stuck": [39, 40], "spell": 39, "check": [39, 40, 41, 42, 49, 50, 51, 52, 53, 56, 57, 134, 135, 136, 137, 320, 323, 327, 329, 333, 335, 338, 340, 341, 343, 344, 345, 1719], "though": [39, 40, 42, 325, 328, 332, 335, 339, 344, 358], "sound": [39, 340], "odd": [39, 320], "peopl": [39, 41, 42, 319, 1729, 1731], "action": [39, 327, 337], "integr": [39, 41, 56, 57, 319, 1727, 1729, 1731, 1732, 1733], "keep": [39, 40, 41, 42, 146, 147, 320, 323, 324, 337, 338, 339, 344, 346], "explain": [40, 41, 42, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 1719, 1725, 1732, 1735], "frequent": [40, 42, 1729], "wherebi": [40, 1726], "outlin": [40, 41, 42, 319, 323, 325, 328, 332, 334, 335, 337], "broad": [40, 1731], "individu": [40, 42, 320, 324, 332, 334, 335, 1729, 1732, 1735, 1736], "sub": [40, 42, 146, 147, 319, 323, 329, 335, 336, 337, 343, 344, 345, 1719, 1725], "distribut": [40, 144, 145, 150, 151, 326, 358, 1729, 1732], "across": [40, 152, 153, 320, 323, 325, 327, 329, 331, 332, 335, 337, 339, 1727, 1729, 1734], "todo": [40, 325, 335], "detail": [40, 42, 320, 322, 323, 324, 331, 332, 333, 335, 336, 337, 338, 341, 343, 344, 345, 1731, 1735], "befor": [40, 41, 42, 146, 147, 320, 321, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 341, 344, 358, 1729], "select": [40, 41, 42, 158, 159, 334, 337, 341, 343, 346, 358, 1729, 1732, 1733], "alloc": [40, 42, 54, 55, 56, 57, 358], "describ": [40, 42, 324, 337, 341, 346, 1729], "explan": [40, 42, 323, 328, 331, 335, 343], "instead": [40, 41, 42, 60, 61, 320, 323, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 344, 358, 1727, 1729, 1735, 1736], "focu": [40, 1727, 1728, 1731, 1736], "been": [40, 42, 134, 135, 150, 151, 320, 322, 323, 324, 325, 326, 328, 330, 331, 332, 337, 341, 343, 357, 358, 1718, 1729, 1736], "alwai": [40, 42, 56, 57, 136, 137, 146, 147, 321, 322, 323, 325, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 358], "NOT": 40, "pypi": [40, 41, 358], "implement": [40, 56, 57, 156, 157, 319, 320, 321, 322, 323, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 357, 358, 1718, 1719, 1726, 1727, 1728, 1729, 1732, 1735, 1736], "instruct": [40, 41, 320, 1727, 1730, 1733, 1735], "static": [40, 327, 328, 332, 333, 335, 358, 1728, 1729, 1730], "method": [40, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 320, 321, 325, 327, 328, 330, 331, 332, 333, 337, 338, 341, 342, 345, 346, 358, 1719, 1730, 1736], "arrai": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 319, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 358, 1718, 1719, 1727, 1728, 1729, 1731, 1735, 1736], "revers": [40, 134, 135, 142, 143, 158, 159, 323, 325, 327, 328, 335, 339, 346, 358], "familiar": [40, 41], "yourself": [40, 42, 335, 337, 339, 357], "hypothesi": [40, 42, 320, 333], "pass": [40, 42, 162, 163, 320, 321, 322, 323, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 358, 1727], "fail": [40, 41, 42, 320, 324, 325, 327, 330, 335], "els": [40, 134, 135, 150, 151, 322, 325, 329, 332, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 358, 1730], "cover": [40, 320, 327, 328, 332, 333, 337, 339, 340], "lambda": [40, 337, 341, 344], "direct": [40, 335, 336, 339, 345, 346, 357, 1725, 1729, 1730, 1733], "bind": [40, 323, 1728, 1729], "defin": [40, 41, 54, 55, 134, 135, 142, 143, 324, 325, 328, 331, 335, 336, 337, 338, 343, 345, 358, 1718, 1726, 1727, 1728, 1729, 1730, 1733, 1735, 1736], "def": [40, 41, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 427, 1719], "special": [40, 158, 159, 320, 321, 327, 328, 329, 331, 334, 338, 1729, 1730, 1731], "sure": [40, 41, 42, 320, 324, 335, 336, 339], "aforement": 40, "correct": [40, 42, 158, 159, 319, 323, 325, 326, 330, 331, 332, 336, 337, 1719], "categori": [40, 320, 321, 323, 325, 335, 338, 340, 1719], "parent": [40, 343], "arraywithelementwis": [40, 60, 321, 343], "containerwithmanipul": 40, "hint": [40, 60, 61, 321, 328, 331, 332, 334, 335, 338], "add": [40, 41, 42, 60, 61, 148, 149, 162, 163, 319, 320, 321, 322, 323, 325, 328, 331, 332, 334, 335, 337, 338, 339, 341, 343, 358, 1719, 1725, 1727, 1729], "thorough": [40, 328, 331, 337], "ensur": [40, 41, 42, 134, 135, 321, 325, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 1729], "produc": [40, 325, 337, 338, 1730, 1732], "comment": [40, 41, 42, 320, 325, 330, 335], "add_reformatting_checklist_": 40, "category_nam": [40, 325, 326, 328, 331, 332], "pr": [40, 42, 320, 335], "belong": [40, 320, 345], "shown": [40, 42, 162, 163, 324, 325, 327, 330, 331, 335, 336, 337, 338, 341, 343, 358], "trigger": [40, 324], "autom": [40, 337, 1718, 1719, 1731], "bot": 40, "proper": 40, "markdown": 40, "text": [40, 42, 327, 328], "might": [40, 41, 42, 134, 135, 325, 327, 330, 333, 334, 335, 337, 338, 339, 341, 343, 344, 1718], "moment": [40, 136, 137, 322, 358], "patient": [40, 41], "modifi": [40, 41, 42, 320, 322, 325, 326, 328, 330, 332, 338, 341], "item": [40, 49, 53, 134, 135, 162, 163, 323, 325, 341, 343, 344, 346, 1719], "symbol": [40, 41, 1729, 1730], "emoji": 40, "within": [40, 42, 49, 52, 53, 335, 336, 337, 345, 358, 1725, 1726, 1730], "legend": 40, "mark": [40, 42, 337], "review": [40, 42, 327, 335, 338], "checkbox": [40, 41], "proce": [40, 41], "elabor": 40, "struggl": 40, "assigne": 40, "author": [40, 42, 1719, 1727, 1731], "later": [40, 337, 1729], "status": 40, "manual": [40, 41, 42, 324, 335, 337, 345], "refrain": 40, "transpil": [40, 335, 340, 341, 342, 1718, 1719, 1729, 1735, 1736], "locat": [40, 42, 322, 326, 335, 336, 337, 338, 1727], "subsect": [40, 42, 320, 324], "verifi": [40, 325, 326, 335, 337, 338], "miss": [40, 41, 321, 323, 327, 330, 337], "simpler": [40, 42, 335, 1730, 1736], "titl": [40, 42, 335, 1719], "label": [40, 42, 144, 145, 324, 335, 340, 341, 342, 346, 1729], "suggest": [40, 41, 42, 325, 335, 337, 338], "simpli": [40, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 321, 322, 323, 325, 326, 327, 328, 331, 332, 334, 335, 336, 337, 339, 341, 345, 346, 358, 1718, 1730, 1735], "leav": [40, 49, 52, 53, 323, 325, 327, 328, 331, 332, 334, 337, 344, 345], "assess": [40, 339], "appropri": [40, 42, 152, 153, 162, 163, 333, 337], "wait": [40, 42, 335], "option": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 346, 358, 1729, 1735], "composit": [40, 319, 321, 322, 323, 325, 334, 336, 337, 339, 341, 345, 346, 358, 1718, 1730], "temporari": [40, 325], "merg": [40, 42, 320, 335, 1729], "close": [40, 41, 42, 328, 335, 337, 339, 1729], "normal": [40, 148, 149, 150, 151, 344, 1727], "altern": [40, 41, 334, 335, 344, 1732], "composition": [40, 334, 335], "choos": [40, 41, 42, 152, 153, 342, 346, 1736], "decid": [40, 41, 325, 339], "addit": [40, 41, 42, 134, 135, 148, 149, 323, 325, 327, 328, 335, 337, 338, 339, 343, 344, 346, 1729, 1730, 1731, 1735], "potenti": [40, 41, 42, 325, 335, 340, 1732], "pend": 40, "show": [40, 41, 42, 324, 327, 334, 335, 337, 357, 358, 1719, 1729], "helpfulli": [40, 339, 1727], "prevent": [40, 42, 136, 137, 325, 330, 334, 335, 338, 339], "problemat": [40, 41], "unimpl": 40, "final": [40, 42, 134, 135, 321, 325, 327, 328, 330, 332, 334, 335, 339, 340, 344, 1725, 1735], "issue_link": 40, "chosen": 40, "correctli": [40, 41, 42, 142, 143, 152, 153, 323, 325, 327, 329, 330, 331, 334, 336, 337, 339, 345, 358], "alias": [40, 335, 336], "detect": [40, 41, 322, 323, 330, 337, 344, 345], "alias_nam": 40, "function_nam": 40, "notic": [40, 339], "alia": 40, "alreadi": [40, 41, 42, 322, 323, 325, 331, 335, 339, 358, 1719, 1729, 1731, 1736], "push": [40, 42, 320, 330, 1735], "liner": 40, "default": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 322, 325, 326, 327, 328, 329, 331, 332, 333, 335, 337, 339, 341, 345, 1718, 1729], "meanwhil": 40, "reselect": 40, "too": [40, 41, 42, 320, 324, 325, 330, 358], "placement": 40, "categoris": [40, 320, 335], "faithfulli": 40, "descript": [40, 60, 61, 328], "inner": [40, 142, 143, 334], "fall": [40, 42, 325, 340, 1719], "under": [40, 41, 42, 319, 320, 323, 327, 328, 332, 335, 337, 339, 340, 341, 344, 346, 358, 1729, 1732, 1736], "linalg": [40, 334, 1719], "match": [40, 56, 57, 323, 327, 1730, 1735], "creation_routin": [40, 336], "fft": [40, 1729], "indexing_routin": 40, "logic": [40, 160, 161, 321, 325, 326, 329, 333, 335, 337, 343, 1719], "ma": 40, "manipulation_routin": 40, "mathematical_funct": [40, 335], "matrix": [40, 134, 135, 140, 141, 142, 143, 325, 335, 1727, 1729], "ndarrai": [40, 54, 55, 134, 135, 321, 325, 326, 331, 334, 335, 336, 338, 339, 341, 343, 346, 1718], "random": [40, 151, 326, 337, 338, 346, 357, 1719, 1729], "sorting_searching_count": 40, "statist": [40, 159, 325, 335, 337, 338, 1729], "ufunc": 40, "hierarchi": [40, 344, 1725, 1735], "__init__": [40, 322, 325, 329, 335, 338, 341, 343, 344, 345, 346, 1719], "py": [40, 41, 42, 320, 322, 324, 325, 326, 328, 329, 330, 331, 332, 335, 336, 337, 338, 341, 343, 345, 346], "decomposit": [40, 1736], "matrix_and_vector_product": 40, "matrix_eigenvalu": 40, "norms_and_other_numb": 40, "solving_equations_and_inverting_matric": 40, "product": [40, 60, 61, 142, 143, 158, 159, 341, 1729, 1731], "seem": [40, 41, 339, 345, 346, 358, 1729], "np": [40, 321, 325, 326, 331, 334, 335, 336, 337, 338, 339, 341, 343, 344, 346, 1718, 1719], "func": [40, 327], "gleam": 40, "yet": [40, 41, 358], "uncom": 40, "test_numpy_inn": 40, "mirror": [40, 1729], "correspond": [40, 42, 56, 57, 60, 61, 134, 135, 146, 147, 158, 159, 321, 322, 323, 324, 325, 327, 328, 331, 332, 333, 335, 337, 339, 341, 1729], "ivy_test": [40, 41, 42, 320, 324, 336], "test_ivi": [40, 41, 42, 324, 336, 337], "test_frontend": [40, 336], "unsur": [40, 337], "put": [40, 337, 358, 1735], "explor": [40, 41, 42, 325, 339, 342, 346, 357, 1729, 1732], "outer": [40, 142, 143], "confirm": 40, "ve": [40, 41, 42, 150, 151, 339, 340, 343, 1718, 1719], "empti": [40, 41, 134, 135, 321, 325, 326], "along": [40, 45, 46, 134, 135, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 327, 334, 338, 339, 341, 1729], "backend_nam": [40, 322, 325, 326, 328, 331, 332, 333], "relevant_submodul": 40, "sometim": [40, 41, 42, 325, 335, 337, 338, 339], "behav": [40, 320, 329, 334, 336, 343, 1730], "helper": [40, 324, 325, 329, 344, 1718], "recreat": 40, "defer": [40, 321, 323, 325, 326, 332, 333, 334, 335, 337, 1735], "clearer": [40, 329, 344], "mind": [40, 321, 323, 337], "posit": [40, 42, 49, 50, 51, 60, 61, 134, 135, 142, 143, 146, 147, 320, 323, 333, 335, 336, 337, 338, 344, 357, 1731], "keyword": [40, 49, 50, 51, 323, 325, 326, 333, 334, 335, 336, 337, 338, 344], "paramet": [40, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 328, 329, 331, 333, 337, 338, 341, 343, 344, 357, 1730], "strategi": [40, 333, 336], "draw": [40, 150, 151, 336, 337], "realli": [41, 323, 358, 1734, 1735], "gh": 41, "your_fold": 41, "cours": [41, 42, 320, 327, 338, 339, 344, 358, 1734, 1735], "whatev": [41, 323, 358], "elig": 41, "student": 41, "licenc": 41, "remind": 41, "account": [41, 328, 335], "licens": [41, 1732], "expir": 41, "abl": [41, 42, 320, 325, 332, 334, 335, 339, 341, 346, 1732, 1735], "profession": 41, "trial": 41, "jetbrain": 41, "valid": [41, 140, 141, 160, 161, 322, 325, 327, 336, 337, 1730], "bui": [41, 1735], "paid": 41, "pace": 41, "align": [41, 42, 341, 343, 1718, 1735], "stabl": [41, 134, 135, 156, 157, 322, 325, 341, 358], "mayb": [41, 49, 52, 53, 341, 343], "person": [41, 42], "experi": [41, 337, 342, 344, 358], "avoid": [41, 42, 322, 323, 325, 330, 333, 335, 337, 338, 1729], "abil": [41, 339, 342, 358, 1729], "certain": [41, 42, 320, 325, 337, 339, 358, 1733], "perhap": [41, 343, 344, 345, 358, 1735], "track": [41, 42, 1729], "click": [41, 42, 324, 328, 342, 1719], "icon": [41, 42], "side": [41, 42, 156, 157], "left": [41, 42, 142, 143, 152, 153, 156, 157, 325, 327], "panel": 41, "drop": [41, 358], "down": [41, 337, 1718, 1729, 1735], "builtin": [41, 343, 345], "virtualenv": 41, "o": [41, 319, 341], "tick": [41, 42, 324], "test_array_api": [41, 42, 320, 337], "r": [41, 42, 319], "txt": [41, 320, 338], "visual": [41, 335, 358, 1729, 1731, 1734], "mitig": [41, 1735], "conflict": [41, 42, 335, 344], "particular": [41, 42, 320, 322, 325, 327, 333, 334, 335, 336, 337, 338, 339, 1725, 1729, 1735], "system": [41, 42, 322, 325, 358, 1727, 1729, 1732, 1734, 1736], "jaxlib": [41, 321, 325, 326, 331, 338, 341, 343], "wsl": 41, "powershel": 41, "admin": 41, "visit": [41, 42, 336], "deploy": [41, 1728, 1731, 1732, 1735, 1736], "top": [41, 42, 146, 147, 325, 335, 337, 344, 345, 1729, 1733], "press": [41, 42, 344, 1719], "ok": 41, "debug": [41, 42, 323, 324, 337, 339, 344, 1729], "dialog": 41, "invalid": [41, 160, 161, 325, 330], "caus": [41, 42, 320, 322, 323, 324, 325, 327, 334, 337, 358], "earlier": [41, 42], "necessari": [41, 42, 146, 147, 322, 323, 327, 333, 334, 335, 337, 339], "virtualis": 41, "sudo": 41, "apt": 41, "ca": 41, "certif": 41, "curl": 41, "gnupg": 41, "lsb": 41, "mkdir": 41, "p": [41, 42, 134, 135, 319], "keyr": 41, "fssl": 41, "download": [41, 337], "gpg": 41, "dearmor": 41, "echo": 41, "deb": 41, "arch": 41, "dpkg": 41, "print": [41, 42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 323, 327, 337, 341, 343, 344, 345, 1719], "architectur": [41, 346, 358, 1727, 1728, 1729, 1732, 1733, 1734], "lsb_releas": 41, "tee": 41, "dev": [41, 58, 59, 326, 332, 343, 345], "null": 41, "ce": 41, "cli": 41, "containerd": 41, "io": 41, "compos": [41, 323, 337, 358, 1729, 1736], "plugin": 41, "systemctl": 41, "permiss": 41, "post": [41, 148, 149, 346], "coupl": [41, 321, 343, 345, 1729], "unit": [41, 45, 46, 320, 325, 335, 336, 337, 358, 1730, 1733], "test_ab": [41, 337], "context": [41, 42, 140, 141, 327], "menu": 41, "editor": 41, "green": [41, 42], "appear": [41, 42, 339], "pytest": [41, 42, 320, 337], "keyboard": 41, "shortcut": 41, "displai": [41, 323, 337, 344], "screenshot": 41, "henc": [41, 323, 337], "ctrl": [41, 42], "shift": [41, 42, 146, 147, 327, 331], "bottom": [41, 1735], "screen": [41, 344], "elsewher": 41, "test_elementwis": 41, "tab": [41, 324, 344, 1719], "progress": [41, 42, 346], "bar": 41, "shell": [41, 42], "run_tests_cli": [41, 320], "run_ivy_core_test": 41, "run_ivy_nn_test": 41, "run_ivy_stateful_test": 41, "run_test": 41, "sh": [41, 42, 320], "test_depend": 41, "test_ivy_cor": 41, "test_ivy_nn": 41, "test_ivy_st": 41, "test_": [41, 320, 324, 336], "test_funct": [41, 42, 324, 336, 337], "test_cor": [41, 42, 324, 336], "wish": [41, 335], "ivy_cor": 41, "ivy_nn": 41, "ivy_st": 41, "torch": [41, 42, 320, 321, 322, 324, 325, 326, 329, 331, 332, 334, 335, 336, 337, 338, 339, 341, 343, 344, 346, 358, 1718, 1719, 1735], "dure": [41, 136, 137, 158, 159, 323, 325, 326, 329, 332, 333, 334, 335, 336, 337, 339, 358, 1729, 1730, 1735], "simplest": [41, 327, 337, 339], "valu": [41, 42, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 320, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 358, 1729, 1730], "return": [41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 358, 1719, 1730], "becaus": [41, 42, 321, 322, 323, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 339, 341, 345, 346, 358, 1729, 1732, 1735], "header": [41, 42], "summari": [41, 42, 337], "recommend": [41, 42, 322], "advanc": [41, 1728], "q": [41, 42, 319, 358], "studio": 41, "easiest": 41, "effici": [41, 42, 323, 330, 332, 333, 334, 337, 341, 344, 358, 1729, 1731, 1732], "afterward": [41, 344], "background": [41, 1729, 1731], "restart": 41, "corner": [41, 42, 337], "overlap": [41, 338, 339, 1730], "test_file_path": 41, "test_fn_nam": 41, "enter": [41, 42, 321, 325, 326, 331, 333], "forward": [41, 322, 328, 337, 338, 339, 346, 357, 358, 1729, 1730], "slash": 41, "regular": [41, 42, 335, 336, 1729], "headach": 41, "arm": [41, 42], "m1": 41, "featur": [41, 42, 331, 335, 338, 339, 344, 358, 1719, 1729, 1730, 1731, 1735], "vm": 41, "azur": 41, "cloud": [41, 357, 1731], "mean": [41, 42, 134, 135, 140, 141, 150, 151, 158, 159, 319, 320, 322, 323, 325, 326, 327, 332, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 357, 358, 1718, 1719, 1726, 1729], "longer": [41, 325, 333, 334, 337, 1729], "worri": 41, "agnost": [41, 321, 331, 341, 343, 346, 358, 1719, 1735, 1736], "usual": [41, 320, 335, 337, 339], "favourit": 41, "theme": 41, "unsupport": [41, 330, 335], "old": [41, 322, 334], "slow": 41, "ipad": 41, "long": [41, 42, 324, 325, 327, 341, 1729], "cool": [41, 338], "sever": [41, 42, 338, 358, 1727, 1733], "requisit": 41, "pane": [41, 42], "readi": 41, "begin": [41, 320, 336], "dropdown": 41, "master": [41, 42, 320, 338, 1729], "view": [41, 42, 324, 1729], "box": 41, "upto": [41, 42], "15": [41, 60, 61, 150, 151, 158, 159, 327, 1732], "minut": 41, "subsequ": [41, 321, 325, 327, 331, 332, 334, 337, 339, 345, 1730], "launch": 41, "12": [41, 60, 61, 134, 135, 150, 151, 158, 159, 322, 323, 325, 327, 338], "output": [41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 319, 320, 321, 323, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 341, 343, 345, 346, 358, 1718, 1719, 1730], "That": [41, 42, 337, 343, 344, 345, 1730], "approach": [41, 42, 323, 325, 332, 333, 337, 339, 343, 344, 358, 1726, 1733, 1735], "colour": 41, "applic": [41, 325, 326, 333, 345, 1726, 1727, 1729, 1731, 1733, 1735], "chanc": 41, "troubleshoot": 41, "ever": 41, "64": [41, 60, 61, 140, 141, 344, 345, 1719, 1734], "usr": 41, "flask": 41, "toolbar": [41, 42], "_array_modul": [41, 320], "array_api_test": [41, 42, 320], "refresh": 41, "conftest": 41, "nutshel": [41, 331], "hook": 41, "lint": 41, "accept": [41, 42, 49, 60, 61, 321, 323, 326, 327, 328, 331, 332, 333, 334, 336, 337, 338, 343, 1718, 1719, 1727], "fix": [41, 42, 324, 325, 337, 338], "attempt": [41, 330, 358], "succe": 41, "properli": [41, 319, 329, 337], "server": [42, 1729], "suitabl": [42, 323, 338, 1729], "quick": [42, 319, 336, 345], "tendenc": 42, "land": 42, "isn": [42, 333, 344, 358, 1731], "end": [42, 322, 334, 338, 339, 340, 357, 358, 1719, 1727, 1732], "world": [42, 1731], "come": [42, 335, 338, 339, 345, 356, 1718, 1719, 1729], "fly": [42, 1729], "hard": [42, 337, 343, 1729], "receiv": [42, 325, 326, 337], "internship": 42, "bug": [42, 335, 337, 338], "serv": [42, 321, 323, 331, 332, 337, 339, 340, 1718, 1719, 1727], "suspect": 42, "observ": [42, 329, 341, 1731], "act": [42, 327, 358, 1736], "placehold": [42, 321, 330, 331, 1718], "ii": 42, "iii": 42, "issue_numb": 42, "No": [42, 1729], "soon": [42, 325, 356, 358, 1719], "partial": 42, "solut": [42, 323, 325, 337, 339, 1727, 1731], "associ": [42, 142, 143, 325, 332, 333, 335, 336, 337, 358], "respond": 42, "shape": [42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 323, 325, 326, 327, 328, 331, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 1719], "dai": [42, 324], "warn": 42, "without": [42, 321, 323, 325, 326, 327, 329, 330, 331, 332, 336, 337, 338, 339, 343, 344, 345, 357, 358, 1726, 1729, 1730, 1731, 1735], "likewis": [42, 323, 325, 328, 331, 332, 335, 339, 344, 1735], "freed": 42, "flag": [42, 136, 137, 325, 333, 334, 335, 337], "remain": [42, 146, 147, 152, 153, 324, 327, 338, 339, 358], "prioriti": [42, 334], "short": [42, 325, 335, 338, 341, 345], "basi": [42, 320, 344], "situat": [42, 346], "upon": [42, 327, 334, 337, 339, 358, 1728, 1729], "period": [42, 338], "unabl": [42, 339], "obvious": 42, "never": [42, 146, 147, 325, 335, 337, 339], "qualiti": 42, "hypothet": 42, "frustrat": 42, "delai": 42, "busi": 42, "fine": [42, 325, 327, 335, 343, 346, 1735], "inact": 42, "limit": [42, 327, 329, 330, 335, 337, 339, 344, 358, 1728, 1729, 1730], "me": 42, "unfairli": 42, "definit": [42, 142, 143, 325, 332, 343], "investig": 42, "maximum": [42, 60, 61, 134, 135, 136, 137, 146, 147, 152, 153, 327, 344, 1719, 1736], "incomplet": 42, "three": [42, 323, 327, 335, 337, 339, 340, 341, 1719, 1730, 1735], "per": [42, 140, 141, 335, 337, 344], "self": [42, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 321, 323, 329, 335, 336, 341, 343, 344, 345, 346, 1719], "assign": [42, 322, 325, 330, 334, 343], "sequenc": [42, 146, 147, 158, 159, 160, 161, 325, 326, 327, 329, 337, 338, 341, 346, 357, 1732], "regist": 42, "wherea": [42, 321, 323, 325, 326, 327, 331, 332, 337, 338, 346, 1726], "primarili": [42, 323, 1729], "invit": 42, "roadmap": [42, 324, 1719], "result": [42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 320, 321, 323, 324, 325, 327, 328, 331, 333, 334, 335, 336, 337, 338, 341, 344, 358, 1719, 1730, 1732], "mainli": [42, 319, 342, 344, 1718, 1729], "extend": [42, 322, 328, 331, 335, 338, 358, 1726, 1729, 1735], "ideal": [42, 334, 344], "Such": [42, 337], "easier": [42, 321, 325, 335, 338, 1718, 1729, 1731], "interv": [42, 150, 151, 160, 161], "forth": 42, "rare": [42, 326, 358, 1734], "scenario": 42, "someon": [42, 358], "someth": [42, 338, 344, 345, 358, 1735], "unfortun": 42, "redund": [42, 325, 329, 335, 339], "specifi": [42, 54, 55, 56, 57, 134, 135, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 158, 159, 160, 161, 319, 325, 326, 331, 332, 334, 335, 336, 337, 339, 341, 344, 345, 1735], "behind": [42, 136, 137, 319, 331, 337, 340, 342], "well": [42, 324, 325, 334, 335, 336, 337, 345, 346, 357, 1728, 1729, 1730, 1734], "practic": [42, 324, 1732], "separ": [42, 321, 323, 337, 341, 343, 344, 1730, 1734], "branch": [42, 320, 358, 1729], "role": [42, 335, 342, 1730, 1732, 1736], "kept": [42, 334, 338], "date": [42, 338], "upstream": [42, 320], "base": [42, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 323, 324, 325, 329, 331, 333, 336, 337, 338, 341, 357, 1729, 1734, 1736], "complic": [42, 336, 341], "merge_with_upstream": 42, "name_of_your_branch": 42, "resolv": [42, 320, 325, 341], "abort": 42, "tediou": [42, 327], "resolut": 42, "stash": 42, "reinstat": 42, "fetch": [42, 320], "0": [42, 45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 320, 322, 323, 325, 327, 328, 329, 335, 336, 337, 338, 341, 343, 344, 345, 346, 358, 1719], "uncommit": 42, "unstag": 42, "untrack": 42, "comprehens": [42, 320], "atlassian": 42, "tutori": [42, 335], "wrote": 42, "piec": [42, 321, 332, 333, 341, 1725, 1727], "tag": 42, "navig": [42, 319], "blame": 42, "revis": 42, "log": [42, 60, 61, 142, 143, 323, 324, 327, 332, 334, 335, 337, 339, 341, 344, 1719], "eg": 42, "16": [42, 60, 61, 140, 141, 142, 143, 150, 151, 158, 159, 327, 344], "past": [42, 336, 1729], "l": [42, 142, 143, 319], "filepath": [42, 320], "grep": 42, "retriev": [42, 335], "commit_id": 42, "handi": 42, "histori": 42, "toggl": 42, "vertic": 42, "highlight": [42, 327], "previou": [42, 136, 137, 320, 331, 335, 337, 339, 346, 358, 1732], "whenev": [42, 324, 325, 329, 333, 337, 344], "think": [42, 327, 1730], "gain": [42, 320, 340, 345, 1729], "quit": [42, 321, 327, 328, 332, 333, 337, 339, 1729, 1735], "newli": [42, 56, 57, 334, 337], "cannot": [42, 320, 322, 325, 335, 341, 346, 1735], "least": [42, 321, 325, 327, 332, 337], "approv": 42, "hash": [42, 344], "cancel": 42, "speedup": 42, "button": 42, "unavail": 42, "tickbox": 42, "lower": [42, 54, 55, 60, 61, 142, 143, 150, 151, 327, 335, 337, 339, 341, 358, 1718, 1725, 1726, 1727, 1729, 1730, 1735, 1736], "span": [42, 339, 1727, 1735], "intent": [42, 334], "larg": [42, 344, 1729], "discourag": 42, "philosophi": 42, "increment": [42, 134, 135, 338, 1729], "valuabl": 42, "infrequ": 42, "earli": [42, 1719, 1729], "wast": 42, "spot": [42, 327, 332], "mistak": [42, 330], "propos": [42, 335, 339, 1729], "mountain": 42, "around": [42, 321, 331, 332, 335, 338, 343, 358, 1718, 1727, 1729, 1736], "advoc": [42, 358], "style": [42, 1729], "were": [42, 325, 330, 337, 338, 339, 341, 1729, 1730, 1735], "actual": [42, 319, 332, 334, 337, 339, 340, 345, 358, 1730, 1735], "aim": [42, 320, 337, 340, 1727, 1729, 1732], "session": [42, 1729], "smaller": [42, 146, 147, 341], "exact": [42, 320, 327, 341], "beauti": 42, "particularli": [42, 344, 358, 1727], "concern": [42, 319, 323, 327, 334, 339, 340, 1735], "difficult": [42, 320, 325, 337, 358], "undo": 42, "stress": 42, "frequenc": [42, 134, 135, 324], "advantag": [42, 334, 335, 1729], "nifti": 42, "reassur": 42, "isol": [42, 1730, 1735], "fact": [42, 335, 337, 341, 344], "local_path_to_ivi": 42, "overwrit": [42, 334, 335, 341], "subfold": [42, 336, 337, 338], "wide": [42, 337, 1727, 1729], "via": [42, 320, 323, 325, 326, 334, 335, 338, 339, 341, 343, 344, 357, 1729], "dep": 42, "fresh": 42, "arsen": 42, "declar": 42, "exec": 42, "rf": 42, "cp": 42, "ivy_contain": 42, "test_imag": 42, "test_random_crop": 42, "test_creation_funct": 42, "test_arang": 42, "variou": [42, 320, 325, 328, 329, 331, 333, 336, 337, 357, 1718, 1725, 1727, 1728, 1729, 1732, 1735], "cpu": [42, 54, 55, 58, 59, 150, 151, 326, 335, 358, 1727, 1729, 1732, 1734], "gpu": [42, 326, 343, 1727, 1729, 1732, 1733, 1734], "combin": [42, 321, 323, 325, 327, 332, 337, 339, 346, 1729], "num": [42, 331, 341], "integ": [42, 60, 61, 146, 147, 150, 151, 158, 159, 160, 161, 323, 325, 333, 336, 337, 341, 343], "greater": [42, 60, 61, 150, 151, 336], "prompt": [42, 1719], "whole": 42, "multipli": [42, 60, 61, 158, 159, 321, 322, 323, 327], "cursor": 42, "alt": 42, "j": [42, 54, 55, 142, 143, 319, 1725], "blog": 42, "breakpoint": 42, "gutter": 42, "caret": 42, "f8": 42, "f9": 42, "Into": 42, "f7": 42, "smart": 42, "interest": 42, "consol": [42, 337, 343], "store": [42, 56, 57, 134, 135, 136, 137, 142, 143, 146, 147, 321, 322, 323, 328, 335, 341, 343, 344, 345, 1718], "variabl": [42, 134, 135, 136, 137, 148, 149, 322, 325, 328, 330, 331, 334, 337, 338, 341, 344, 345, 346, 358, 1719, 1730], "fragment": [42, 1725, 1727, 1731], "except": [42, 134, 135, 146, 147, 150, 151, 160, 161, 319, 320, 321, 325, 328, 330, 331, 334, 335, 339, 341, 343, 358], "pychram": 42, "depth": [42, 54, 55, 344, 345, 346, 357], "dummi": 42, "wherein": [42, 333, 337], "evalu": [42, 60, 61, 323, 325, 339, 1729], "failur": [42, 320, 324, 337], "overview": [44, 164, 337, 340, 357, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "forum": [44, 164, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 436, 472, 474, 475, 557, 648, 682, 1003, 1004, 1198, 1250, 1316, 1448, 1464, 1545, 1549, 1567, 1572, 1599, 1646, 1662, 1707, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1741, 1743, 1753, 1765, 1768, 1770, 1776], "arraywithactiv": [45, 343], "abc": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 343], "gelu": [45, 46], "approxim": [45, 46, 142, 143, 328, 335], "true": [45, 46, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 323, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 339, 341, 344, 345, 346], "variant": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 327, 328, 339], "wrap": [45, 46, 49, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 341, 343, 346, 358, 1718, 1725, 1729, 1730, 1735, 1736], "minim": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 328, 334, 336, 339, 341, 1727, 1735], "y": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 322, 323, 327, 335, 336, 338, 339, 341, 343], "185": [45, 46], "046": [45, 46], "leaky_relu": [45, 46, 336, 1719], "alpha": [45, 46, 60, 61, 335, 336], "39": [45, 46, 60, 61, 150, 151], "85": [45, 46, 150, 151], "17": [45, 46, 323, 327], "log_softmax": [45, 46], "axi": [45, 46, 54, 55, 134, 135, 142, 143, 144, 145, 146, 147, 152, 153, 156, 157, 158, 159, 160, 161, 323, 325, 327, 329, 331, 332, 334, 335, 337, 339, 341, 343, 346, 357], "98": [45, 46, 136, 137, 150, 151], "37": [45, 46, 60, 61], "35": [45, 46, 140, 141], "0719": [45, 46], "62": [45, 46], "221": [45, 46], "82": [45, 46, 60, 61], "relu": [45, 46, 162, 163, 336, 344, 345, 1719], "sigmoid": [45, 46, 341, 344, 345, 1719], "269": [45, 46], "731": [45, 46], "881": [45, 46, 60, 61], "softmax": [45, 46, 162, 163, 1719], "union": [45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 338, 339, 341, 346], "nativearrai": [45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 321, 323, 327, 329, 330, 331, 332, 333, 334, 335, 338, 341, 343, 1718], "input": [45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 320, 321, 322, 323, 325, 326, 327, 328, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 358, 1730, 1733], "int": [45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 346], "ax": [45, 46, 142, 143, 146, 147, 152, 153, 158, 159, 160, 161, 325, 327, 337, 338, 341, 343], "broadcast": [45, 46, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 323, 325, 327, 328, 337, 338, 341], "ret": [45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 328, 334, 335, 336, 338, 341, 346], "element": [45, 46, 54, 55, 60, 61, 134, 135, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 158, 159, 328, 336, 337, 339, 341, 1733], "wise": [45, 46, 60, 61, 142, 143, 339], "422": [45, 46], "155": [45, 46], "softplu": [45, 46, 339, 1719], "beta": [45, 46, 148, 149, 339], "threshold": [45, 46, 60, 61, 339], "3461": [45, 46], "6491": [45, 46], "22": [45, 46, 60, 61, 134, 135, 150, 151, 158, 159, 323], "09": [45, 46], "31": [45, 46, 60, 61, 344], "55": [45, 46], "13": [45, 46, 60, 61, 140, 141, 150, 151, 158, 159, 323, 327, 337], "collect": [49, 329, 336, 337, 357, 1727, 1729, 1732], "args_to_ivi": 49, "include_deriv": [49, 50, 51, 52, 53], "kwarg": [49, 50, 51, 329, 335, 341, 345], "nest": [49, 50, 51, 52, 53, 321, 323, 332, 338, 344, 345, 358, 1718, 1729], "otherwis": [49, 50, 51, 52, 53, 56, 57, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 152, 153, 158, 159, 160, 161, 321, 323, 324, 325, 326, 327, 337, 341], "unchang": [49, 50, 51, 52, 53], "dict": [49, 50, 51, 52, 53, 134, 135, 323, 330, 344, 345, 1718], "bool": [49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 325, 327, 329, 334, 335, 337, 338, 341, 346], "deriv": [49, 50, 51, 52, 53, 54, 55, 136, 137, 325, 326, 343, 345], "tupl": [49, 50, 51, 52, 53, 54, 55, 56, 57, 134, 135, 140, 141, 142, 143, 146, 147, 152, 153, 154, 155, 158, 159, 160, 161, 325, 330, 331, 336, 337, 341, 344, 345, 358], "fals": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135, 136, 137, 142, 143, 146, 147, 152, 153, 156, 157, 158, 159, 160, 161, 322, 325, 327, 329, 334, 335, 336, 337, 341, 344, 345, 346], "str": [49, 50, 51, 134, 135, 140, 141, 325, 326, 329, 330, 335, 338, 341, 346], "kei": [49, 50, 51, 323, 330, 336, 337, 344, 1729, 1732, 1736], "word": [49, 50, 51, 323, 335, 1718], "args_to_n": [49, 334], "cont_inplac": [49, 51, 53], "ignore_frontend_arrai": [49, 51], "nativ": [49, 51, 52, 53, 54, 55, 134, 135, 325, 329, 333, 334, 335, 336, 337, 341, 343, 344, 1718, 1727, 1736], "to_ivi": 49, "leaf": [49, 52, 323, 332, 344], "travers": [49, 52, 53, 323, 325, 341], "lowest": [49, 52, 53, 150, 151, 332, 358, 1718, 1726, 1730, 1734], "to_n": [49, 341], "arraywithcr": [54, 343], "asarrai": [54, 55, 134, 135, 333, 334], "dtype": [54, 55, 56, 57, 140, 141, 142, 143, 150, 151, 152, 153, 158, 159, 320, 322, 325, 326, 327, 330, 332, 333, 335, 336, 337, 338, 341, 343, 1719], "boolean": [54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 146, 147, 152, 153, 323, 335, 336, 337, 339], "nativedtyp": [54, 55, 56, 57, 150, 151, 152, 153, 158, 159, 325, 326, 331, 335, 338, 341], "datatyp": [54, 55], "infer": [54, 55, 134, 135, 146, 147, 319, 322, 325, 326, 333, 341, 346, 1727, 1728, 1731, 1733], "nativedevic": [54, 55, 58, 59, 150, 151, 325, 326, 329, 331, 338], "interpret": [54, 55, 324, 1730], "copy_arrai": [54, 55], "empty_lik": [54, 55, 339], "deafult": [54, 55, 152, 153], "uniniti": [54, 55], "from_dlpack": [54, 55], "full_lik": [54, 55, 338], "fill_valu": [54, 55, 152, 153, 325, 336, 338], "float": [54, 55, 56, 57, 60, 61, 134, 135, 136, 137, 142, 143, 144, 145, 148, 149, 150, 151, 158, 159, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 343, 345], "scalar": [54, 55, 60, 61, 134, 135, 325, 358, 1729], "fill": [54, 55, 150, 151, 152, 153, 336], "equal": [54, 55, 56, 57, 60, 61, 134, 135, 142, 143, 146, 147, 150, 151, 156, 157, 158, 159, 323, 325, 327, 329], "000123": [54, 55], "ones": [54, 55, 136, 137, 150, 151, 327, 331, 337, 343, 344, 1719, 1729], "meshgrid": [54, 55], "spars": [54, 55, 144, 145], "xy": [54, 55], "native_arrai": [54, 55, 56, 57, 60, 61, 146, 147, 333, 336, 337], "one_hot": [54, 55, 346, 1719], "on_valu": [54, 55], "off_valu": [54, 55], "scatter": [54, 55, 134, 135, 339, 1736], "hot": [54, 55], "dimens": [54, 55, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 327, 329, 336, 337, 339, 341, 344], "float32": [54, 55, 56, 57, 140, 141, 325, 327, 337], "cuda": [54, 55, 150, 151, 341, 358, 1718, 1734], "unless": [54, 55, 142, 143, 322, 326, 334, 358], "overrid": [54, 55], "ones_lik": [54, 55, 322, 346, 1719], "tril": [54, 55], "k": [54, 55, 140, 141, 142, 143, 150, 151, 319, 320, 335, 341, 1725, 1729], "n": [54, 55, 142, 143, 146, 147, 150, 151, 152, 153, 158, 159, 160, 161, 319, 337], "whose": [54, 55, 60, 61, 134, 135, 142, 143, 146, 147, 154, 155, 328, 337], "innermost": [54, 55, 142, 143], "mxn": [54, 55, 142, 143], "matric": [54, 55, 142, 143, 357, 1729], "diagon": [54, 55, 142, 143], "triangular": [54, 55, 142, 143], "triu": [54, 55], "upper": [54, 55, 142, 143, 150, 151, 334, 337], "zeros_lik": [54, 55, 335, 339, 1719], "creation": [55, 101, 325, 326, 329, 331, 333, 336, 337, 338, 341, 1729, 1731, 1735], "data_typ": [56, 57, 102, 103, 325, 337, 338], "arraywithdatatyp": [56, 343], "astyp": [56, 57, 140, 141, 325, 334, 335, 339], "irrespect": [56, 57, 323, 334, 343, 1736], "promot": [56, 57, 60, 61, 142, 143, 320, 328, 329, 332], "rule": [56, 57, 142, 143, 320, 321, 323, 325, 327, 330, 331, 332, 337, 339, 1730], "cast": [56, 57, 325, 332, 336, 341, 1719], "nan": [56, 57, 60, 61, 134, 135, 158, 159, 320, 325, 328, 337, 338], "infin": [56, 57, 60, 61, 134, 135, 320, 328], "numer": [56, 57, 60, 61, 134, 135, 142, 143, 150, 151, 152, 153, 325, 333, 335, 336, 337, 338, 339, 341, 345, 1726, 1729, 1735], "non": [56, 57, 142, 143, 150, 151, 152, 153, 158, 159, 160, 161, 323, 325, 327, 333, 341, 1729], "float64": [56, 57, 150, 151, 158, 159, 325, 337], "broadcast_arrai": [56, 57], "arbitrari": [56, 57, 323, 331, 332, 334, 335, 337, 345, 358, 1730, 1735], "x1": [56, 57, 60, 61, 142, 143, 152, 153, 320, 325, 327, 329, 331, 335], "x2": [56, 57, 60, 61, 134, 135, 142, 143, 152, 153, 320, 325, 327, 329, 331, 335], "x3": [56, 57], "mix": [56, 57, 60, 61, 319, 327, 334, 337, 339, 341, 1718, 1729, 1733, 1735], "broadcast_to": [56, 57, 325], "can_cast": [56, 57, 325, 332, 335], "occur": [56, 57, 154, 155, 320], "as_n": [56, 57, 58, 59, 325], "int32": [56, 57, 150, 151, 152, 153, 158, 159, 325, 337, 341], "finfo": [56, 57, 337], "iinfo": [56, 57, 330], "119": [56, 57], "122": [56, 57], "int8": [56, 57, 150, 151, 325, 337], "min": [56, 57, 134, 135, 158, 159], "128": [56, 57, 140, 141], "max": [56, 57, 134, 135, 142, 143, 158, 159, 337], "127": [56, 57], "is_bool_dtyp": [56, 57], "is_float_dtyp": [56, 57, 338], "is_int_dtyp": [56, 57, 336, 338], "is_uint_dtyp": [56, 57, 336, 338], "result_typ": [56, 57, 325], "arrays_and_dtyp": [56, 57], "arraywithdevic": [58, 343], "to_devic": [58, 59], "stream": [58, 59, 1733], "ab": [60, 61, 325, 333, 335, 337, 1719], "aco": [60, 61, 1719], "real": [60, 61, 323, 1731], "invers": [60, 61, 325, 357], "cosin": [60, 61], "57": [60, 61], "69": [60, 61, 337, 344], "acosh": [60, 61, 1719], "hyperbol": [60, 61], "32": [60, 61, 150, 151, 344, 1734], "99": [60, 61, 136, 137], "sum": [60, 61, 134, 135, 142, 143, 144, 145, 158, 159, 323, 325, 332, 334, 341], "z": [60, 61, 134, 135, 142, 143, 144, 145, 150, 151, 322, 323, 327, 341, 343], "asin": [60, 61, 1719], "sine": [60, 61], "927": [60, 61], "asinh": [60, 61, 1719], "atan": [60, 61, 1719], "tangent": [60, 61, 328], "785": [60, 61], "464": [60, 61], "atan2": [60, 61, 1719], "coordin": [60, 61, 152, 153], "quotient": [60, 61], "245": [60, 61], "atanh": [60, 61, 1719], "549": [60, 61], "47": [60, 61, 150, 151], "bitwise_and": [60, 61], "11": [60, 61, 134, 135, 140, 141, 142, 143, 150, 151, 158, 159, 323, 325, 327, 338], "bitwise_invert": [60, 61], "bitiwse_invert": [60, 61], "bitwise_left_shift": [60, 61], "bitwise_or": [60, 61], "bitwise_right_shift": [60, 61], "bitwise_xor": [60, 61], "89": [60, 61, 150, 151], "51": [60, 61], "18": [60, 61, 150, 151, 323, 327], "19": [60, 61, 150, 151, 327], "26": [60, 61, 148, 149, 150, 151], "27": [60, 61, 142, 143, 150, 151], "23": [60, 61, 150, 151, 337, 341], "20": [60, 61, 140, 141, 150, 151, 158, 159, 339, 343], "74": [60, 61], "41": [60, 61], "59": [60, 61], "24": [60, 61, 142, 143, 158, 159, 344], "ceil": [60, 61, 1719], "express": [60, 61, 328, 330, 335, 341, 346, 1729, 1730], "radian": [60, 61, 328], "54": [60, 61, 140, 141, 327], "416": [60, 61], "cosh": [60, 61, 1719], "angl": [60, 61, 357], "76": [60, 61], "03": [60, 61], "81": [60, 61, 337], "deg2rad": [60, 61], "degre": [60, 61, 158, 159, 1728], "180": [60, 61], "270": [60, 61], "360": [60, 61], "71": [60, 61], "28": [60, 61, 148, 149], "divid": [60, 61, 134, 135, 146, 147, 321, 323, 327], "dividend": [60, 61], "divisor": [60, 61, 136, 137, 158, 159], "375": [60, 61], "erf": [60, 61], "exponenti": [60, 61], "gauss": [60, 61], "exp": [60, 61, 1719], "expm1": [60, 61, 325], "244": [60, 61], "918": [60, 61], "48": [60, 61], "147": [60, 61], "floor": [60, 61, 1719], "floor_divid": [60, 61], "greater_equ": [60, 61], "isfinit": [60, 61, 335], "out_i": [60, 61], "self_i": [60, 61], "finit": [60, 61], "inf": [60, 61, 134, 135, 142, 143, 325, 337], "isinf": [60, 61], "neg": [60, 61, 142, 143, 146, 147, 150, 151, 160, 161, 323, 332, 334], "isnan": [60, 61], "isreal": [60, 61], "1j": [60, 61], "5j": [60, 61], "6j": [60, 61], "less_equ": [60, 61, 329], "61": [60, 61], "log10": [60, 61], "logarithm": [60, 61], "602": [60, 61], "699": [60, 61], "log1p": [60, 61], "693": [60, 61], "001": [60, 61, 148, 149, 344, 345], "0953": [60, 61], "log2": [60, 61], "logaddexp": [60, 61], "05": [60, 61, 136, 137, 148, 149, 158, 159, 336, 337], "logical_and": [60, 61, 335, 339, 1719, 1736], "logical_not": [60, 61, 325, 1719], "logical_or": [60, 61, 1719, 1736], "conform": [60, 61, 328], "org": [60, 61, 328], "api_specif": [60, 61, 328], "elementwise_funct": [60, 61, 328], "noqa": [60, 61], "simplic": [60, 61, 328, 339, 345, 357], "nestabl": [60, 61, 319, 327, 328, 334, 337, 1718], "logical_xor": [60, 61], "use_wher": [60, 61], "formula": [60, 61], "clip": [60, 61, 146, 147, 323, 332, 334, 344, 346, 1719], "minimum": [60, 61, 134, 135, 146, 147, 152, 153, 1719, 1726, 1732, 1736], "exce": [60, 61], "arguement": [60, 61], "condit": [60, 61, 152, 153, 320, 325, 327, 329, 334, 337, 357], "boradcastbl": [60, 61], "thatth": [60, 61], "30": [60, 61], "56": [60, 61, 140, 141, 150, 151, 327], "21": [60, 61, 134, 135, 150, 151], "not_equ": [60, 61], "pow": [60, 61, 320], "expon": [60, 61, 134, 135], "rad2deg": [60, 61], "286": [60, 61], "458": [60, 61], "573": [60, 61], "reciproc": [60, 61], "remaind": [60, 61, 146, 147], "modulu": [60, 61], "x2_i": [60, 61, 320], "94": [60, 61, 136, 137, 150, 151], "256": [60, 61], "0001": [60, 61], "36": [60, 61, 140, 141], "67": [60, 61, 134, 135], "45": [60, 61], "678": [60, 61], "25": [60, 61, 134, 135, 142, 143, 144, 145, 150, 151, 158, 159, 323], "33": [60, 61, 150, 151, 158, 159], "sin": [60, 61, 134, 135, 321, 341, 1719], "841": [60, 61], "909": [60, 61], "141": [60, 61], "sinh": [60, 61, 1719], "63": [60, 61], "232": [60, 61], "sqrt": [60, 61], "squar": [60, 61, 142, 143], "subtract": [60, 61, 321, 323, 327], "tan": [60, 61, 323, 328, 331, 332, 334, 335, 341, 1719], "tanh": [60, 61, 341, 1719], "762": [60, 61], "964": [60, 61], "trunc": [60, 61], "trunc_divid": [60, 61], "elementwis": [61, 148, 149, 332, 338, 341], "arraywithactivationsextens": 77, "arraywithconversionsextens": 98, "arraywithcreationextens": 100, "arraywithdata_typeextens": 102, "arraywithdeviceextens": 104, "arraywithgener": [134, 343], "all_equ": [134, 135], "equality_matrix": [134, 135], "compar": [134, 135, 156, 157, 322, 327, 330, 336, 337, 344, 1725, 1727, 1729, 1735, 1736], "array_equ": [134, 135], "assert_supports_inplac": [134, 135], "clip_matrix_norm": [134, 135], "max_norm": [134, 135], "norm": [134, 135, 142, 143, 149, 338, 1719], "downscal": [134, 135], "894": [134, 135], "79": [134, 135], "clip_vector_norm": [134, 135], "vector": [134, 135, 140, 141, 142, 143, 357, 1729], "default_v": [134, 135], "catch_except": [134, 135], "rev": [134, 135], "with_cal": [134, 135], "catch": [134, 135, 337], "callabl": [134, 135, 323, 329, 335, 337, 341], "einops_rearrang": [134, 135], "axes_length": [134, 135], "arrang": [134, 135], "rearrang": [134, 135], "einops_reduc": [134, 135], "reduct": [134, 135, 144, 145, 160, 161, 325, 337, 343, 1719], "reduc": [134, 135, 142, 143, 152, 153, 158, 159, 160, 161, 329, 335, 339, 341, 343, 1727, 1731, 1732, 1733], "One": [134, 135, 146, 147, 150, 151, 325, 327, 336, 337, 341, 343, 344], "prod": [134, 135, 158, 159, 325, 327, 341], "einops_repeat": [134, 135], "fourier_encod": [134, 135], "max_freq": [134, 135], "num_band": [134, 135], "linear": [134, 135, 140, 141, 328, 335, 337, 339, 341, 344, 345, 346, 1719, 1727, 1728, 1729, 1732], "concat": [134, 135, 146, 147, 336, 339, 341, 1719], "flatten": [134, 135, 146, 147, 152, 153, 154, 155], "band": [134, 135], "linearli": [134, 135], "oppos": [134, 135, 325], "geometr": [134, 135], "concaten": [134, 135, 146, 147, 336, 339, 341, 344, 1719], "seper": [134, 135, 327], "batch": [134, 135, 323, 332, 344, 1727], "expand": [134, 135, 146, 147, 323], "gather": [134, 135, 1736], "batch_dim": [134, 135], "gather_nd": [134, 135, 1719], "get_num_dim": [134, 135, 1719], "as_arrai": [134, 135], "has_nan": [134, 135], "include_inf": [134, 135], "inplace_decr": [134, 135], "val": [134, 135, 334, 343], "decrement": [134, 135], "inplace_incr": [134, 135], "inplace_upd": [134, 135, 334], "ensure_in_backend": [134, 135, 334], "inplac": [134, 135, 136, 137, 319, 321, 327, 331, 333, 336, 339, 343, 345], "is_arrai": [134, 135, 335], "exclus": [134, 135, 136, 137, 158, 159, 323, 325, 332, 335, 338, 346, 1733, 1735], "trace": [134, 135, 142, 143, 320, 325, 341, 358, 1718, 1730, 1735], "is_ivy_arrai": [134, 135, 334, 343], "is_ivy_contain": [134, 135], "is_native_arrai": [134, 135, 343], "scatter_flat": [134, 135], "size": [134, 135, 142, 143, 146, 147, 150, 151, 152, 153, 336, 337, 344], "occupi": [134, 135], "hold": [134, 135, 142, 143, 158, 159, 344, 1730], "scatter_nd": [134, 135, 339, 343, 1719], "arr": [134, 135, 325, 326], "40": [134, 135], "stable_divid": [134, 135, 332], "denomin": [134, 135, 148, 149, 332, 358, 1726], "min_denomin": [134, 135], "divis": [134, 135, 136, 137, 332], "global": [134, 135, 148, 149, 322, 325, 326, 329, 332, 335, 341, 1729], "_min_denomin": [134, 135], "stable_pow": [134, 135], "min_bas": [134, 135], "_min_bas": [134, 135, 148, 149], "power": [134, 135, 142, 143, 337, 343, 344, 345, 1729, 1731, 1735], "supports_inplace_upd": [134, 135], "supports_inplac": [134, 135], "to_list": [134, 135, 1719], "represent": [134, 135, 357, 1727, 1728, 1730, 1734, 1735], "to_numpi": [134, 135, 344, 1719], "to_scalar": [134, 135], "value_is_nan": [134, 135], "92": [134, 135], "arraywithgradi": [136, 343], "adam_step": [136, 137], "mw": [136, 137, 345], "vw": [136, 137, 345], "beta1": [136, 137, 345], "beta2": [136, 137, 345], "999": [136, 137, 345], "epsilon": [136, 137, 142, 143, 144, 145, 148, 149, 323, 332, 334, 345], "1e": [136, 137, 144, 145, 148, 149, 323, 332, 334, 336, 345, 346, 1719], "07": [136, 137, 144, 145, 345], "cost": [136, 137, 339, 1727], "weight": [136, 137, 140, 141, 148, 149, 323, 332, 341, 345, 346, 1728], "w": [136, 137, 140, 141, 341, 344, 345], "dc": [136, 137], "dw": [136, 137], "averag": [136, 137], "forget": [136, 137, 325], "adam": [136, 137, 344, 345, 346, 1719, 1729], "delta": [136, 137], "dcdw": [136, 137], "adam_step_delta": [136, 137], "182": [136, 137], "adam_upd": [136, 137, 345], "lr": [136, 137, 344, 345], "mw_tm1": [136, 137], "vw_tm1": [136, 137], "stop_gradi": [136, 137, 345, 1719], "rate": [136, 137], "stop": [136, 137, 331, 339, 341, 358, 1729], "ws_new": [136, 137], "gradient_descent_upd": [136, 137, 1719], "handl": [136, 137, 319, 323, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 345, 1726, 1736], "higher": [136, 137, 340, 341, 346, 358, 1726, 1729, 1730, 1733, 1735, 1736], "descent": [136, 137, 345, 1729], "new_weight": [136, 137, 344], "95": [136, 137, 150, 151], "97": [136, 137], "96": [136, 137], "is_vari": [136, 137, 334], "trainabl": [136, 137, 328, 342, 344, 345], "is_var": [136, 137], "lamb_upd": [136, 137], "max_trust_ratio": [136, 137], "decay_lambda": [136, 137], "trust": [136, 137], "ratio": [136, 137], "decai": [136, 137], "lamb": [136, 137, 345], "784": [136, 137], "78": [136, 137], "02": [136, 137, 148, 149, 150, 151], "01": [136, 137, 322, 346], "5e": [136, 137], "04": [136, 137, 336, 337], "0e": [136, 137], "lars_upd": [136, 137], "lar": [136, 137, 345], "optimizer_upd": [136, 137], "effective_grad": [136, 137], "3e": [136, 137], "preserve_typ": [136, 137], "preserv": [136, 137, 337, 346, 358], "variable_data": [136, 137], "intern": [136, 137, 321, 323, 326, 328, 334], "gradient": [137, 338, 344, 345, 357, 358, 1719, 1729], "arraywithimag": [138, 343], "arraywithlay": [140, 343], "conv1d": [140, 141], "stride": [140, 141, 1729], "pad": [140, 141], "data_format": [140, 141], "nwc": [140, 141], "dilat": [140, 141], "batch_siz": [140, 141, 150, 151, 344], "d_in": [140, 141], "convolut": [140, 141, 1727, 1729], "fw": [140, 141, 336, 337], "d_out": [140, 141], "slide": [140, 141], "algorithm": [140, 141, 325, 335, 339, 358, 1729, 1731, 1733], "ncw": [140, 141], "wio": [140, 141], "conv1d_transpos": [140, 141], "output_shap": [140, 141], "conv2d": [140, 141, 1719], "nhwc": [140, 141], "h": [140, 141, 319, 323, 1725], "fh": [140, 141], "nchw": [140, 141], "hwio": [140, 141], "conv3d": [140, 141], "ndhwc": [140, 141], "conv3d_transpos": [140, 141], "depthwise_conv2d": [140, 141, 1719], "randint": [140, 141, 150, 151, 325, 1719], "255": [140, 141], "random_norm": [140, 141, 150, 151], "std": [140, 141, 150, 151, 158, 159, 327], "dropout": [140, 141, 344], "prob": [140, 141], "scale": [140, 141, 1729, 1731], "bia": [140, 141, 148, 149, 341, 345], "transform": [140, 141, 346, 357, 1718, 1727, 1729, 1730, 1731], "outer_batch_shap": [140, 141], "inner_batch_shap": [140, 141], "in_featur": [140, 141], "out_featur": [140, 141], "84": [140, 141], "133": [140, 141], "134": [140, 141], "212": [140, 141], "lstm_updat": [140, 141, 341], "init_h": [140, 141, 341], "init_c": [140, 141, 341], "kernel": [140, 141, 339, 341, 358, 1729, 1732, 1733], "recurrent_kernel": [140, 141, 341], "recurrent_bia": [140, 141, 341], "multi_head_attent": [140, 141, 334], "num_head": [140, 141], "mask": [140, 141, 339], "to_q_fn": [140, 141], "to_kv_fn": [140, 141], "to_out_fn": [140, 141, 334], "to_q_v": [140, 141], "to_kv_v": [140, 141], "to_out_v": [140, 141], "scaled_dot_product_attent": [140, 141], "linear_algebra": [142, 143, 338], "arraywithlinearalgebra": [142, 343], "choleski": [142, 143, 334], "symmetr": [142, 143, 323], "625": [142, 143], "cross": [142, 143, 144, 145, 324, 1719], "vif": [142, 143], "det": [142, 143], "diag": [142, 143, 341], "offset": [142, 143], "axis1": [142, 143, 146, 147], "axis2": [142, 143], "eigh": [142, 143], "eigvalsh": [142, 143], "inv": [142, 143, 1719], "adjoint": [142, 143], "matmul": [142, 143, 322, 337, 338, 341, 1719], "matrix_norm": [142, 143], "ord": [142, 143], "fro": [142, 143], "keepdim": [142, 143, 146, 147, 152, 153, 158, 159, 160, 161, 329, 335, 341], "liter": [142, 143, 330], "nuc": [142, 143], "arang": [142, 143, 325, 1719, 1736], "reshap": [142, 143, 146, 147, 334, 335, 337, 341, 343, 346, 1719], "matrix_rank": [142, 143], "atol": [142, 143], "rtol": [142, 143, 336], "rank": [142, 143, 146, 147, 160, 161], "singular": [142, 143, 325], "toler": [142, 143, 320, 336, 1729], "small": [142, 143, 148, 149, 327, 332, 336, 339, 341, 345, 358, 1730], "largest_singular_valu": [142, 143], "equival": [142, 143, 334, 335, 339, 344, 346], "dimension": [142, 143, 146, 147, 152, 153, 158, 159, 160, 161, 341, 1726, 1729, 1736], "ep": [142, 143], "defici": [142, 143], "matrix_transpos": [142, 143, 343], "transpos": [142, 143, 334, 343, 346, 1719], "pinv": [142, 143, 1719], "0426": [142, 143], "0964": [142, 143], "0605": [142, 143], "1368": [142, 143], "qr": [142, 143], "slogdet": [142, 143], "namedtupl": [142, 143, 154, 155], "logabsdet": [142, 143], "6931472": [142, 143], "solv": [142, 143, 320, 335, 342, 357, 1731], "svd": [142, 143, 1719], "compute_uv": [142, 143], "full_matric": [142, 143], "svdval": [142, 143], "tensordot": [142, 143, 325], "vander": [142, 143], "vandermond": [142, 143], "column": [142, 143], "len": [142, 143, 323, 334, 335, 337, 343, 346], "125": [142, 143], "vecdot": [142, 143], "vector_norm": [142, 143], "vector_to_skew_symmetric_matrix": [142, 143, 1719], "arraywithloss": [144, 343], "binary_cross_entropi": [144, 145], "pred": [144, 145, 323, 332, 334], "predict": [144, 145], "amount": [144, 145, 326, 336], "smooth": [144, 145], "binari": [144, 145], "entropi": [144, 145], "357": [144, 145], "223": [144, 145], "cross_entropi": [144, 145, 323, 332, 334], "3862944": [144, 145], "sparse_cross_entropi": [144, 145], "logit": [144, 145], "loss": [145, 325, 332, 335, 338, 344, 345, 346, 1719, 1729, 1736], "arraywithmanipul": [146, 343], "x_min": [146, 147, 346], "x_max": [146, 147, 346], "join": [146, 147, 329, 1719], "count": [146, 147, 154, 155, 160, 161, 323, 327, 344], "constant_pad": [146, 147], "pad_width": [146, 147], "expand_dim": [146, 147, 335, 341, 344, 1719], "flip": [146, 147, 335, 343, 344, 346, 1719], "reorder": [146, 147], "permute_dim": [146, 147], "nativeshap": [146, 147, 150, 151], "length": [146, 147, 330, 337, 344], "valueerror": [146, 147, 329], "reus": [146, 147, 329, 337, 1734], "memori": [146, 147, 325, 326, 334, 335, 339, 341, 356, 358, 1719, 1729, 1731, 1732, 1733], "buffer": [146, 147, 358], "roll": [146, 147, 323, 331], "larger": [146, 147, 158, 159, 337, 1736], "restor": [146, 147], "num_or_size_split": [146, 147, 341], "with_remaind": [146, 147], "evenli": [146, 147], "entri": [146, 147, 1729], "squeez": [146, 147, 1719, 1729], "swapax": [146, 147], "axis0": [146, 147], "swap_ax": [146, 147], "tile": [146, 147, 1719], "rep": [146, 147], "unstack": [146, 147, 323, 341, 344, 1719, 1736], "unpack": [146, 147, 330, 336, 337], "zero_pad": [146, 147, 1719], "arraywithnorm": [148, 343], "layer_norm": [148, 149], "normalized_idx": [148, 149], "new_std": [148, 149], "learnabl": [148, 149, 346], "gamma": [148, 149], "constant": [148, 149, 332, 338, 345, 346, 358], "0976": [148, 149], "3452": [148, 149], "2740": [148, 149], "1047": [148, 149], "5886": [148, 149], "2732": [148, 149], "7696": [148, 149], "7024": [148, 149], "2518": [148, 149], "826": [148, 149], "178": [148, 149], "981": [148, 149], "831": [148, 149], "421": [148, 149], "arraywithrandom": [150, 343], "multinomi": [150, 151], "population_s": [150, 151], "num_sampl": [150, 151], "seed": [150, 151, 1719], "unnorm": [150, 151, 337], "popul": [150, 151, 158, 159, 325, 326, 337, 341, 1735], "uniform": [150, 151, 345, 1736], "batch_shap": [150, 151, 339, 341, 343], "sampl": [150, 151, 158, 159, 333, 336, 337], "independ": [150, 151, 320, 325, 327, 333, 341, 346, 1727], "drawn": [150, 151, 337], "parameter": [150, 151], "highest": [150, 151], "low": [150, 151, 323, 335, 339, 341, 1725, 1727, 1729, 1730, 1731, 1733, 1735], "half": [150, 151, 339], "int16": [150, 151, 325, 337, 341], "int64": [150, 151, 152, 153, 156, 157, 325, 337, 341], "46": [150, 151], "44": [150, 151], "72": [150, 151], "235": [150, 151], "float16": [150, 151, 325, 337], "49": [150, 151], "807": [150, 151], "42": [150, 151, 341, 346], "random_uniform": [150, 151, 326, 337, 345, 1719], "boundari": [150, 151, 1729], "86": [150, 151], "06": [150, 151, 337, 344], "53": [150, 151], "shuffl": [150, 151, 1719], "object": [150, 151, 323, 333, 335, 337, 343, 346, 1729, 1735], "arraywithsearch": [152, 343], "argmax": [152, 153, 1719], "output_dtyp": [152, 153], "insert": [152, 153], "occurr": [152, 153], "argmin": [152, 153, 1719], "singleton": [152, 153, 158, 159, 160, 161, 341], "accordingli": [152, 153, 158, 159, 160, 161, 330, 335, 341], "argwher": [152, 153, 330], "nonzero": [152, 153], "as_tupl": [152, 153], "ndim": [152, 153, 323, 337], "fewer": [152, 153], "yield": [152, 153, 324, 330], "arraywithset": [154, 343], "unique_al": [154, 155], "unique_count": [154, 155], "field": [154, 155, 357, 1727, 1735], "unique_invers": [154, 155], "inverse_indic": [154, 155], "reconstruct": [154, 155], "unique_valu": [154, 155], "arraywithsort": [156, 343], "argsort": [156, 157], "descend": [156, 157], "ascend": [156, 157], "stabil": [156, 157, 325, 339], "searchsort": [156, 157], "sorter": [156, 157], "ret_dtyp": [156, 157], "arraywithstatist": [158, 343], "cumprod": [158, 159, 335, 346], "cumul": [158, 159, 357], "exclud": [158, 159, 327, 341], "120": [158, 159], "cumsum": [158, 159, 325, 1719], "einsum": [158, 159], "equat": [158, 159, 1729], "arithmet": [158, 159, 335], "x_i": [158, 159, 328], "propag": [158, 159], "By": [158, 159, 160, 161, 325, 327, 332, 334, 335, 341, 345, 346], "var": [158, 159, 327, 341], "varianc": [158, 159], "freedom": [158, 159, 322], "adjust": [158, 159], "constitut": [158, 159, 332, 341, 1730], "unbias": [158, 159], "commonli": [158, 159, 329, 332], "bessel": [158, 159], "6666665": [158, 159, 344], "08": [158, 159], "667": [158, 159], "arraywithutil": [160, 343], "AND": [160, 161], "backward": [160, 161, 358], "add_ivy_array_instance_method": 162, "cl": [162, 163], "to_ignor": [162, 163], "loop": [162, 163, 322, 330, 358], "_wrap_funct": [162, 163, 332, 333], "toi": [162, 163], "arrayexampl": [162, 163], "hasattr": [162, 163], "who": [319, 340, 358, 1729, 1731], "target": [319, 336, 338, 340, 344, 345, 346, 1719, 1725, 1727, 1728, 1729, 1732, 1734, 1735], "hood": [319, 323, 327, 332, 335, 337, 339, 340, 341, 344, 346, 1736], "weed": [319, 340], "tour": 319, "primari": [319, 322, 325, 334, 335, 337, 339, 358, 1718], "superset": [319, 358], "goe": [319, 339], "dynam": [319, 325, 326, 334, 335, 341, 1729, 1733], "runtim": [319, 337, 339, 1729], "borrow": 319, "assert": [319, 320, 330, 335, 337, 338, 343, 344], "conjunct": 320, "establish": [320, 1731], "2020": [320, 1729], "group": [320, 323, 332, 335, 336, 1725, 1728, 1734], "intend": [320, 331, 1727, 1729, 1733, 1734], "popular": [320, 1729], "sens": [320, 327, 335, 343], "unconnect": 320, "decis": [320, 323, 325, 335, 339, 341, 343, 1729], "initialis": [320, 337], "checkout": [320, 337], "everytim": [320, 325], "init": [320, 346], "thoroughli": 320, "ci": [320, 325, 330, 337, 358], "insert_chosen_backend": 320, "test_linalg": 320, "test_set_funct": 320, "test_signatur": 320, "excess": [320, 322, 327], "explicitli": [320, 321, 322, 323, 325, 328, 329, 332, 333, 334, 337, 341, 358, 1729], "array_modul": 320, "set_backend": [320, 322, 325, 332, 333, 341, 343, 346, 1719], "vv": 320, "test_manipulation_funct": 320, "test_concat": [320, 337], "typic": [320, 332, 1728, 1736], "nb": 320, "varieti": [320, 324, 325, 326, 337, 1725, 1727, 1731, 1732, 1735, 1736], "known": [320, 325, 335, 337], "test_asarray_arrai": 320, "test_floor_divid": 320, "health": 320, "test_iop": 320, "__imod__": 320, "x1_i": 320, "isequ": 320, "test_matrix_norm": 320, "alter": 320, "tweak": 320, "array_api_methods_to_test": 320, "identifi": [320, 324, 337, 339], "202": 320, "test_trac": 320, "latter": [320, 322, 325, 328, 335], "hand": [320, 325, 332, 337, 358], "scheme": [320, 345, 1729], "edg": [320, 337, 1719, 1729, 1731, 1735], "test_special_cas": 320, "__ipow__": 320, "is_integ": 320, "unskip": 320, "temporarili": [320, 338], "straightforward": [320, 344], "tf": [321, 325, 326, 331, 334, 335, 337, 338, 339, 341, 346, 358, 1718, 1719, 1729], "xla_extens": [321, 325, 326, 331, 338, 341, 343], "devicearrai": [321, 336, 341, 343], "overwritten": [321, 322], "wrapper": [321, 323, 325, 333, 334, 343, 1718, 1725, 1729], "_data": [321, 335, 343], "meta": [321, 338, 1729], "organiz": [321, 323, 335], "inherit": [321, 323, 329, 343, 358, 1718], "bear": [321, 323, 325, 335], "necessarili": [321, 323], "although": [321, 323, 335, 1727, 1729], "underpin": [321, 323, 341], "programmat": [321, 323, 1730], "backup": [321, 323], "accident": [321, 323, 335], "readabl": [321, 323, 329, 331, 338, 343, 344], "absent": [321, 323], "perk": [321, 323], "auto": [321, 323, 344], "__add__": [321, 323, 327, 328, 331, 335, 343], "__sub__": [321, 323, 327, 331, 343], "__mul__": [321, 323, 327, 331, 339, 343], "__truediv__": [321, 323, 327], "__setitem__": [321, 323, 343], "throw": [321, 325, 329, 343, 1729], "imposs": 321, "chain": [321, 323, 335, 345, 346, 358, 1729], "inputs_to_native_arrai": [321, 333], "outputs_to_ivy_arrai": [321, 325, 326, 331, 333], "firstli": [321, 325, 327, 328, 329, 332, 333, 334, 339, 344, 1725, 1735], "anywai": [321, 333, 335], "secondli": [321, 325], "permit": [321, 331, 335, 337, 339], "dictat": [321, 327, 331, 334], "extra": [321, 325, 327, 333, 335, 336, 339, 341, 1726, 1731], "implicit_backend": [322, 341], "__dict__": [322, 341], "ivy_original_dict": [322, 341], "string": [322, 325, 326, 329, 330, 341, 344], "unmodifi": [322, 325], "duplic": [322, 328, 330, 333, 336, 345, 1735], "get_backend": [322, 332], "opt": [322, 325, 334, 337, 338, 339], "unset_backend": 322, "unset": [322, 341], "fallback": 322, "backend_handl": [322, 341, 1719], "layout": [322, 335, 339], "requires_grad": [322, 336], "memory_format": 322, "preserve_format": 322, "weren": 322, "break": [322, 325, 330, 331, 338, 358, 1719], "Not": [322, 336, 344, 345, 358], "vast": [322, 325, 1729], "minor": [322, 339, 341, 358], "fn_name_v_1p12_and_abov": 322, "similarli": [322, 325, 335, 339, 343, 1735], "fn_name_v_1p01_to_1p1": 322, "inclus": [322, 334, 335, 339], "fn_name": [322, 336, 337], "vari": [323, 327, 335, 337, 343], "five": [323, 344], "map": [323, 325, 331, 332, 335, 337, 338, 344, 357, 358, 1718, 1730], "all_tru": [323, 344], "to_iter": 323, "containerbas": 323, "multi_map": 323, "diff": [323, 327, 344], "common_key_chain": 323, "properti": [323, 327, 332, 336, 337, 343, 344, 345, 1735], "recap": [323, 327, 345], "arbitrarili": [323, 333, 344], "multi_map_in_static_method": 323, "static_add": [323, 327, 328], "static_tan": [323, 327], "static_rol": [323, 327], "containerwithelementwis": 323, "__repr__": 323, "control": [323, 325, 334, 335, 339, 343, 344, 357, 1718, 1729, 1735], "__getattr__": 323, "underli": [323, 339, 1729], "queri": [323, 325, 343, 1729], "attribut": [323, 325, 328, 333, 334, 342, 343, 344, 345], "__setattr__": 323, "__getitem__": 323, "__contains__": 323, "__getstate__": 323, "__setstate__": 323, "pickl": [323, 344], "unpickl": 323, "num_dim": [323, 346], "__len__": 323, "restrict": [323, 335, 341, 1726], "enforc": [323, 343], "extern": [323, 331, 335, 337, 338], "flexibl": [323, 331, 338, 1729], "l1": [323, 344], "c1": 323, "l2": 323, "lefthand": 323, "righthand": 323, "operand": [323, 328, 335], "decor": [323, 325, 326, 332, 333, 334, 335, 336, 337], "handle_nest": [323, 332, 333, 341], "addition": [323, 334, 335, 1735], "counterpart": [323, 333], "behavior": [323, 325, 335, 336, 337, 339, 341, 358, 1726], "presenc": [323, 334], "absenc": [323, 331, 1729], "implicitli": [323, 341], "themselv": [323, 325, 326, 328, 332, 335, 345, 1726, 1735], "log_pr": [323, 332, 334], "intuit": [323, 344, 345, 1725], "chronolog": 323, "concurr": [323, 332, 1729], "had": [323, 334, 1729, 1730], "consum": [323, 331, 336, 337], "sequenti": [323, 345], "But": [323, 328, 333, 334, 346], "flow": [323, 357, 1729, 1730], "compil": [323, 335, 338, 339, 340, 342, 358, 1718, 1719, 1725, 1728, 1729, 1730, 1733, 1736], "implic": 323, "whatsoev": [323, 332, 1718, 1735], "implicit": [323, 328, 335, 337, 341, 1729], "eager": [323, 358, 1729], "children": 323, "shallowest": 323, "deepest": 323, "event": [324, 337], "ex": 324, "reopen": 324, "review_request": 324, "yml": 324, "dispatch": [324, 358, 1729, 1732], "pair": 324, "test_nn": 324, "test_stat": 324, "yellow": 324, "dot": 324, "queu": 324, "redirect": 324, "ignor": [324, 327, 337, 358, 1735], "book": 324, "procedur": [324, 327], "decoupl": [324, 345], "ran": 324, "badg": 324, "clickabl": 324, "uint8": [325, 337], "uint16": [325, 337, 341], "uint32": [325, 337, 341], "uint64": [325, 337, 341], "bfloat16": [325, 335, 337], "constructor": [325, 326, 343], "all_dtyp": 325, "all_numeric_dtyp": 325, "all_int_dtyp": 325, "all_float_dtyp": 325, "replic": [325, 327, 335, 339], "four": [325, 327, 331, 332, 337, 339, 344], "thirdli": 325, "native_float32": 325, "importantli": [325, 343, 346, 357], "conveni": [325, 326, 331, 336, 342, 344, 345, 1718, 1735], "set_default_dtyp": [325, 332], "default_dtyp": [325, 332], "arguabl": [325, 326, 335], "promote_typ": 325, "type_promote_arrai": 325, "promote_types_of_input": 325, "jaxarrai": [325, 326, 331, 334, 338, 341], "jnp": [325, 326, 331, 334, 336, 338, 341, 346, 1719], "_handle_0_dim_output": [325, 334], "experiment": [325, 338, 341, 1729], "subtli": [325, 334], "On": [325, 335, 337, 342, 346], "promote_types_frontend_nam": 325, "promote_types_of_frontend_name_input": 325, "frontend_nam": 325, "mathemat": [325, 335, 339, 1729, 1735], "demonstr": [325, 327, 343], "accuraci": 325, "precis": [325, 335, 339, 1733], "upcast": 325, "instabl": 325, "underflow": 325, "nearli": [325, 331, 333, 1729], "downcast": 325, "footprint": 325, "constraint": 325, "concret": 325, "compound": 325, "infer_dtyp": [325, 326, 331, 333], "default_int_dtyp": 325, "default_float_dtyp": 325, "settabl": [325, 326], "set_default_int_dtyp": 325, "set_default_float_dtyp": 325, "irrelev": [325, 327], "dim": [325, 336, 339], "handle_out_argu": [325, 326, 331, 333, 334, 341], "infer_devic": [325, 326, 331, 333], "deleg": [325, 1736], "shape_to_tupl": 325, "with_supported_dtyp": 325, "with_unsupported_dtyp": 325, "unment": 325, "dictionari": [325, 344, 358], "backend_vers": 325, "_cast_for_unary_op": 325, "target_typ": 325, "function_supported_dtyp": 325, "function_unsupported_dtyp": 325, "discov": 325, "unsupported_dtyp": 325, "invalid_dtyp": 325, "former": [325, 328, 335], "uint": [325, 336], "lack": [325, 334, 1729, 1736], "rang": [325, 329, 337, 341, 344, 345, 346, 1719, 1729, 1735], "patch": [325, 1729], "achiev": [325, 330, 333, 337, 344, 346, 1718], "subtl": [325, 338, 1735], "unsign": [325, 336, 341], "offici": [325, 341], "inconsist": [325, 329], "unexpect": 325, "84530": 325, "unwarr": 325, "risk": [325, 1735], "needlessli": 325, "bloat": 325, "undergo": [325, 358], "supported_dtyp": [325, 335], "unsupported_devic": 325, "supported_devic": 325, "slight": [325, 345], "downsid": 325, "coverag": [325, 337], "inflat": 325, "idx": [326, 343], "tpu": [326, 1729, 1732], "get_all_ivy_arrays_on_dev": 326, "aliv": 326, "num_gpu": [326, 337], "total_mem_on_dev": 326, "dev_util": 326, "num_cpu_cor": 326, "default_devic": [326, 329], "outsid": [326, 330, 332, 343, 1734], "dual": 326, "categor": [326, 332, 335], "thrown": [326, 329, 358], "far": [326, 327, 342, 1734, 1735], "set_default_devic": 326, "eight": [327, 340], "func_nam": [327, 328, 332, 335], "static_func_nam": 327, "__": [327, 344], "op_nam": 327, "__r": 327, "combinatori": 327, "variat": [327, 337], "grid": [327, 337, 357], "unus": [327, 330, 334], "okai": [327, 339, 341], "showcas": [327, 357], "meant": 327, "imaginari": 327, "spec": [327, 328], "my_func": [327, 338], "some_flag": 327, "another_flag": 327, "jointli": 327, "x0": 327, "5574077": 327, "1850398": 327, "5463025": 327, "8422884": 327, "91601413": 327, "9647598": 327, "3738229": 327, "1597457": 327, "0963247": 327, "9955841": 327, "3278579": 327, "multi": [327, 340, 358, 1719, 1725, 1727, 1729, 1733], "pars": [327, 358], "satisfi": [327, 337], "asid": [327, 357], "increasingli": 327, "14254655": 327, "1578213": 327, "380515": 327, "143": 327, "38": 327, "trivial": 327, "exlud": 327, "__radd__": [327, 328, 335], "failing_fn_nam": 327, "onlin": [327, 328], "minutest": 327, "suffici": 327, "segment": 327, "fault": [327, 1729], "contrast": [328, 331, 335, 1735], "instanti": 328, "templat": [328, 337, 1719], "array_api": 328, "raw": [328, 1730], "preview": 328, "newlin": 328, "render": 328, "incorrectli": 328, "domain": [328, 1727, 1729], "codomain": 328, "ref": [328, 341], "needless": [328, 336], "info": [328, 337, 1719], "subset": [328, 331, 335, 337, 341, 1729], "renam": 328, "judgment": 328, "beyond": [328, 335, 1735], "pure": [328, 331, 335, 339, 343, 346, 358, 1729, 1735, 1736], "operator_nam": 328, "succinct": 328, "contstructor": 328, "_forward": [328, 341, 344, 345, 1719], "docst": 328, "ivyexcept": [329, 335], "super": [329, 341, 344, 345, 346], "ivybackendexcept": 329, "_default": 329, "current_backend_str": [329, 341, 343], "_delimit": 329, "indexerror": 329, "ivyerror": 329, "repetit": 329, "caught": 329, "fn": [329, 335, 341], "functool": [329, 335, 343], "new_fn": [329, 335], "__name__": 329, "current_backend": [329, 332, 335, 338, 341], "comparison": 329, "error_stack": 329, "axiserror": 329, "bound": [329, 337, 341, 1735], "got": [329, 1719], "assertionerror": [329, 337], "elif": [329, 334, 335], "polici": [329, 337, 357], "moreov": 329, "cleaner": [329, 344], "check_less": 329, "allow_equ": 329, "lesser": 329, "set_split_factor": 329, "split_factor": 329, "met": 329, "flake8": 330, "undefin": 330, "statement": [330, 334, 337, 339, 358], "handler": [330, 340, 342, 346, 1718, 1719], "annot": [330, 331], "star": 330, "byte": [330, 1734, 1735], "notimpl": 330, "notimplementederror": 330, "unsuccess": 330, "reformat": 330, "exceed": 330, "black": 330, "disobei": 330, "taken": [330, 338, 346, 1730], "successfulli": 330, "inde": [330, 331, 339, 358, 1727], "adress": 331, "revisit": 331, "dedic": [331, 343, 345], "to_native_arrays_and_back": [331, 333, 341], "usabl": [331, 338], "sole": [331, 338, 1728, 1729, 1730], "strictli": [331, 334], "linspac": [331, 339, 341, 1719, 1736], "endpoint": 331, "rational": 331, "__div__": [331, 339], "dicat": 331, "futher": 331, "pep": 331, "484": 331, "brittl": 331, "freeli": 331, "technic": [331, 334, 358, 1729, 1731], "original_typ": 331, "cumbersom": 331, "omit": [331, 334, 335], "venn": 332, "diagram": [332, 1735], "light": [332, 335, 358, 1718, 1730, 1735], "array_arg": 332, "cache_fn": 332, "cach": [332, 337], "deal": [332, 336, 358], "modif": [332, 1729], "briefli": [332, 337, 344], "get_all_arrays_on_dev": 332, "nested_map": 332, "index_nest": 332, "inputs_to_ivy_arrai": 333, "heavili": [333, 335, 358], "facilit": 333, "integer_array_to_float": 333, "handle_cmd_line_arg": [333, 336, 337], "as_vari": [333, 336, 337], "with_out": [333, 336, 337], "instance_method": [333, 337], "test_gradi": 333, "topic": [333, 343, 1729], "suffic": [333, 337], "program": [334, 1726, 1727, 1729, 1732, 1733, 1736], "ration": [334, 339], "speak": 334, "x_nativ": 334, "val_n": 334, "unspecifi": 334, "predominantli": [334, 338, 357], "support_native_out": 334, "math": [334, 335, 337, 346, 1719, 1727], "mx": 334, "nd": 334, "_wrap_fn": 334, "dim0": 334, "dim1": 334, "maxim": [334, 339, 341, 1726, 1727, 1731, 1732, 1733], "third": [334, 358, 1728, 1729, 1735], "leverag": [334, 1727, 1729], "capabl": [334, 339], "input_arrai": 334, "plai": [335, 337, 346, 1729, 1732], "tf_frontend": 335, "lax": [335, 336, 339, 346, 358], "neither": [335, 339], "fn_tree": [335, 336], "wrong": [335, 339], "carefulli": [335, 1727, 1732], "acceler": [335, 1719, 1727, 1731, 1732, 1733, 1734], "algebra": [335, 1727, 1728, 1729, 1732, 1736], "xla": [335, 358, 1718, 1729], "decompos": 335, "dynamic": 335, "extent": 335, "mimic": 335, "arithmetic_oper": 335, "same_kind": 335, "subok": [335, 336, 339], "as_ivy_dtyp": 335, "recov": 335, "obtain": 335, "unhandl": 335, "seek": 335, "subclass": [335, 339], "trigonometric_funct": 335, "from_zero_dim_arrays_to_float": 335, "pointwise_op": 335, "resid": [335, 341, 345], "preferred_element_typ": 335, "conv_general_dil": 335, "finer": 335, "nor": [335, 1733], "margin": 335, "fit": [335, 341, 1725, 1726, 1729], "meet": 335, "criteria": 335, "incorpor": [335, 344, 1729], "omiss": 335, "median": 335, "sensibl": 335, "deem": 335, "reserv": 335, "resum": 335, "possibli": [335, 337, 358], "straight": [335, 337, 343, 1719], "ahead": [335, 1729], "heavi": [335, 336, 339, 1730], "logicaland": 335, "truth": [335, 337], "np_frontend": 335, "radd": 335, "_init_data": 335, "isinst": [335, 337, 338, 345, 346], "_process_str_data": 335, "check_equ": 335, "2d": 335, "_shape": [335, 343], "_dtype": [335, 343], "govern": 335, "promote_types_of_": 335, "_input": 335, "promote_types_of_tensorflow_input": 335, "saniti": 335, "handle_numpy_cast": 335, "func_wrapp": 335, "to_ivy_arrays_and_back": [335, 336], "handle_numpy_casting_speci": 335, "check_elem_in_list": 335, "equiv": 335, "safe": 335, "unsaf": 335, "array_type_test": 335, "watch": 335, "youtub": 335, "seri": [335, 337, 1729, 1731], "jump": 336, "knowledg": 336, "test_frontend_funct": 336, "lift": [336, 1730], "get_dtyp": [336, 337], "dtype_and_valu": [336, 337], "num_positional_arg": [336, 337], "get_shap": [336, 337], "np_frontend_help": 336, "nn": [336, 339, 346, 1719, 1730], "test_jax": 336, "test_jax_lax_oper": 336, "dtype_and_x": [336, 337], "available_dtyp": [336, 337], "test_jax_lax_tan": 336, "input_dtyp": [336, 337], "as_variable_flag": [336, 337], "native_array_flag": [336, 337], "test_numpi": 336, "test_mathematical_funct": 336, "test_np_trigonometric_funct": 336, "test_numpy_tan": 336, "handle_where_and_array_bool": 336, "test_tensorflow": 336, "test_math": 336, "test_tensorflow_tan": 336, "test_torch": 336, "test_non_linear_activation_funct": 336, "st": [336, 337], "min_valu": [336, 337], "max_valu": [336, 337], "with_inplac": 336, "test_torch_leaky_relu": 336, "negative_slop": 336, "_fill_valu": 336, "allow_non": [336, 337], "min_num_dim": [336, 337], "max_num_dim": [336, 337], "min_dim_s": [336, 337], "max_dim_s": 336, "test_jax_lax_ful": 336, "test_from_shape_or_valu": 336, "test_numpy_ful": 336, "test_tf_funct": 336, "test_tensorflow_ful": 336, "discrep": 336, "test_creation_op": 336, "_requires_grad": 336, "test_torch_ful": 336, "accommod": 336, "walkthrough": 336, "torch_frontend": 336, "gt": [336, 341], "comparison_op": 336, "promote_types_of_torch_input": 336, "test_comparison_op": 336, "dtype_and_input": 336, "num_arrai": [336, 337], "allow_inf": [336, 337], "shared_dtyp": 336, "test_torch_great": 336, "has_alias": 336, "all_alias": 336, "test_frontend_instance_method": 336, "frontend_class": 336, "test_jax_devicearrai": 336, "test_jax_instance_add": 336, "test_frontend_array_instance_method": 336, "test_ndarrai": 336, "test_numpy_ndarray_add": 336, "test_frontend_method": 336, "input_dtypes_init": 336, "as_variable_flags_init": 336, "num_positional_args_init": 336, "native_array_flags_init": 336, "all_as_kwargs_np_init": 336, "input_dtypes_method": 336, "as_variable_flags_method": 336, "num_positional_args_method": 336, "native_array_flags_method": 336, "all_as_kwargs_np_method": 336, "class_nam": 336, "method_nam": 336, "test_tensor": 336, "test_tensorflow_instance_add": 336, "1e04": 336, "1e06": 336, "allow_infin": 336, "test_torch_instance_add": 336, "somewhat": [336, 358, 1729], "value_test": 336, "dtype_x": 336, "test_jax_special_add": 336, "ret_gt": 336, "flatten_and_to_np": 336, "zip": [336, 341], "ret_from_gt": 336, "ground_truth_backend": 336, "_arrays_idx_n_dtyp": 336, "test_manipul": [336, 337], "surprisingli": 336, "cat": [336, 339, 341, 346], "closest_relevant_group": 336, "strive": [336, 337, 339, 358, 1731], "cycl": 337, "And": 337, "exhaust": [337, 1726, 1735], "fixtur": 337, "300": 337, "hit": [337, 341], "eleg": [337, 1729], "intellig": [337, 339, 1731], "unexplor": 337, "repeatedli": 337, "upload": 337, "artifact": 337, "parametr": [337, 1729], "impli": 337, "bespok": 337, "_array_or_typ": 337, "standalon": [337, 1718, 1725, 1730, 1735, 1736], "test_default_int_dtyp": 337, "clariti": [337, 339, 1729], "print_hypothesis_exampl": 337, "searchstrategi": 337, "custom_strategi": 337, "sampled_from": 337, "randomis": 337, "simplist": 337, "intricaci": 337, "one_of": 337, "datum": 337, "pipe": 337, "overload": 337, "shorthand": 337, "isclos": 337, "flatmap": 337, "suppos": 337, "scaler": 337, "array_or_scal": 337, "len_of_arrai": 337, "interact": [337, 1719, 1728, 1729, 1734], "bodi": 337, "reusabl": [337, 358, 1727, 1729], "snippet": 337, "container_flag": 337, "thankfulli": 337, "advis": 337, "seamlessli": 337, "encount": 337, "criterion": 337, "array_valu": 337, "valid_ax": 337, "craft": 337, "hoc": 337, "intersect": [337, 357], "44758124e": 337, "308": 337, "11228": 337, "456": 337, "268": 337, "wherev": 337, "dtype_values_axi": 337, "9622": 337, "28136": 337, "6375": 337, "12720": 337, "21354": 337, "900e": 337, "00": 337, "955e": 337, "exclude_min": 337, "large_abs_safety_factor": 337, "safety_factor_scal": 337, "57384": 337, "25687": 337, "248": 337, "array_dtyp": 337, "min_siz": 337, "max_siz": 337, "array_bool": 337, "na": 337, "treat": [337, 342, 346], "anyth": [337, 338, 1729, 1730], "test_devic": 337, "array_shap": 337, "common_shap": 337, "test_lay": 337, "size_bound": 337, "reshape_shap": 337, "stand": 337, "fashion": 337, "some_sequ": 337, "allow_nan": 337, "allow_subnorm": 337, "get_bound": 337, "arrays_valu": 337, "73": 337, "36418": 337, "213": 337, "21716926": 337, "none_or_list_of_float": 337, "get_prob": 337, "get_mean_std": 337, "103515625e": 337, "099609375": 337, "probabilist": 337, "get_axi": 337, "number_positional_argu": 337, "unreproduc": 337, "test_valu": 337, "enough": [337, 343, 344, 345], "report": 337, "ivy_np": 337, "valid_float_dtyp": 337, "test_demo": 337, "falsifi": 337, "failing_test": 337, "traceback": 337, "file_nam": [337, 338], "123": 337, "shrink": 337, "prescrib": 337, "closest": [337, 339], "scratch": 337, "databas": 337, "therebi": 337, "test_gelu": 337, "test_fil": 337, "brief": 337, "phase": [337, 358, 1729], "notabl": [337, 1729], "verbos": [337, 341, 1719], "newer": 337, "max_exampl": 337, "impact": [337, 345, 1731], "deadlin": 337, "weird": 337, "systemat": 337, "safeguard": 337, "inabl": 337, "test_result_typ": 337, "9090909090909091": 337, "judgement": 338, "some_namespac": 338, "some_backend": 338, "another_backend": 338, "refactor": 338, "ongo": 338, "op": [338, 341, 358], "cooler": 338, "something_cool": 338, "clean": [338, 339, 341, 342, 344], "_assert_fill_value_and_dtype_are_compat": 338, "_to_devic": 338, "focus": [338, 357, 1727, 1728, 1729, 1735, 1736], "prior": 338, "older": 338, "grow": [338, 1719, 1729], "unbound": 338, "battl": 338, "face": [339, 341, 1729, 1735], "answer": [339, 343, 358], "contradict": 339, "entail": 339, "sacrif": 339, "dimems": 339, "noth": [339, 1735], "conv": 339, "jacfwd": 339, "jacrev": 339, "banner": 339, "pointwis": 339, "unnecessari": 339, "fuse": 339, "tensorrt": 339, "highli": [339, 1729], "expens": 339, "incredibli": [339, 344, 358, 1732], "six": 339, "__gt__": 339, "price": 339, "pai": 339, "intrus": 339, "x_beta": 339, "equip": 339, "deliber": 339, "ey": [339, 346], "priorit": 339, "simplif": 339, "allevi": 339, "ineffici": [339, 358, 1729], "arriv": 339, "fledg": [341, 342], "syntact": [341, 346], "logspac": 341, "construct": [341, 345, 346, 1727, 1729, 1736], "power_seq": 341, "backend_stack": 341, "cprint": 341, "_determine_backend_from_arg": 341, "importlib": 341, "import_modul": 341, "_backend_dict": 341, "illustr": [341, 357], "un": 341, "unrol": [341, 344], "lstm": [341, 1729], "cell": 341, "hidden": [341, 345], "recurr": [341, 1729, 1733], "timestep": 341, "x_shape": 341, "input_channel": [341, 345], "x_flat": 341, "wi": 341, "wi_x": 341, "wii_x": 341, "wif_x": 341, "wig_x": 341, "wio_x": 341, "wh": 341, "ht": 341, "ct": 341, "hts_list": 341, "wii_xt": 341, "wif_xt": 341, "wig_xt": 341, "wio_xt": 341, "htm1": 341, "ctm1": 341, "wh_htm1": 341, "whi_htm1": 341, "whf_htm1": 341, "whg_htm1": 341, "who_htm1": 341, "ft": 341, "ot": 341, "reliabl": 341, "sacrific": 341, "hear": 341, "virtu": [341, 1726], "pure_ivi": 341, "compile_graph": [341, 346], "pure_torch": 341, "backbon": [341, 344], "_layer": 341, "random_unifrom": 341, "unclean": 341, "wx": 341, "temp": 341, "ivy_func": 341, "emphas": 341, "torchscript": [341, 1718, 1736], "example_input": 341, "static_argnum": 341, "static_argnam": 341, "jit": [341, 358, 1729], "primit": [342, 358, 1727, 1729], "upcom": 342, "hierarch": [342, 344, 345, 1729], "_init": 343, "_size": 343, "mul": 343, "_devic": 343, "_dev_str": 343, "as_ivy_dev": 343, "_pre_repr": 343, "_post_repr": 343, "framework_str": 343, "noinspect": 343, "pypep8nam": 343, "mt": 343, "typeerror": 343, "immut": 343, "claim": 343, "truli": 343, "_native_wrapp": 343, "attributeerror": 343, "genuin": 343, "some_method": 343, "rewritten": 343, "__pow__": 343, "strang": 343, "compartment": 343, "public": [343, 1732], "newshap": 343, "new_shap": 343, "tidi": 343, "shorter": 343, "crystal": 343, "50": 343, "ton": 344, "ado": [344, 345], "soup": 344, "walk": [344, 345], "dct": 344, "cnt": 344, "combo": 344, "1000": 344, "3333335": 344, "Or": 344, "200": 344, "grad": [344, 345, 346, 1719], "delimit": 344, "autocomplet": 344, "midwai": 344, "agent": 344, "total_spe": 344, "total_height": 344, "total_width": 344, "ag": 344, "tot": 344, "total_": 344, "total_h": 344, "disk": [344, 1728], "hdf5": 344, "to_disk_as_hdf5": 344, "from_disk_as_hdf5": 344, "same_arrai": 344, "to_disk_as_pickl": 344, "from_disk_as_pickl": 344, "dataset": [344, 356, 1719], "to_disk_as_json": 344, "from_disk_as_json": 344, "cnt0": 344, "cnt1": 344, "deep_copi": 344, "diff_0": 344, "diff_1": 344, "config0": 344, "config1": 344, "decod": 344, "l0": 344, "truncat": 344, "flatten_key_chain": 344, "above_height": 344, "decoder__l0": 344, "decoder__l1": 344, "encoder__l0": 344, "encoder__l1": 344, "height": 344, "below_depth": 344, "l0__b": 344, "l0__w": 344, "l1__b": 344, "l1__w": 344, "with_print_limit": 344, "printabl": 344, "with_key_length_limit": 344, "with_print_ind": 344, "indent": 344, "obviou": [344, 1729], "foresight": 344, "untidili": 344, "update_ag": 344, "normalize_img": 344, "img": 344, "img_max": 344, "reduce_max": [344, 1719], "img_min": 344, "reduce_min": [344, 1719], "img_rang": 344, "agent_posit": 344, "agent_veloc": 344, "agent_cam_front_rgb": 344, "agent_cam_front_depth": 344, "agent_cam_rear_rgb": 344, "agent_cam_rear_depth": 344, "agent_cam_lidar": 344, "camera": 344, "front_rgb": 344, "front_depth": 344, "rear_rgb": 344, "rear_depth": 344, "lidar": 344, "rgb": 344, "rear": 344, "veloc": 344, "cam": 344, "cam_max": 344, "cam_min": 344, "cam_rang": 344, "Of": [344, 1734, 1735], "perman": 344, "thread": [344, 1729], "multiprocess": [344, 358], "queue": 344, "pretti": [344, 1735], "dataload": [344, 356, 1719], "_cnt": 344, "img_": 344, "_dataset_s": 344, "_batch_siz": 344, "_count": [344, 345], "__next__": 344, "filenam": 344, "img_fnam": 344, "list_stack": 344, "fname": 344, "loaded_img": 344, "cv2": 344, "imread": 344, "from_numpi": 344, "loader": [344, 358], "batch_slic": 344, "model": [344, 345, 1718, 1719, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1736], "mymodel": [344, 1719], "linear0": [344, 345, 1719], "linear1": [344, 345, 1719], "x_in": [344, 345, 346, 1719], "loss_fn": [344, 345, 346, 1719], "reduce_mean": [344, 345, 346, 1719], "execute_with_gradi": [344, 345, 346, 358, 1719], "0145": 344, "grad_fn": 344, "addbackward0": 344, "_create_vari": 345, "output_channel": 345, "with_bia": 345, "_input_channel": 345, "_output_channel": 345, "_w_shape": 345, "_b_shape": 345, "_with_bia": 345, "729": 345, "396": 345, "764": 345, "872": 345, "211": 345, "439": 345, "644": 345, "nightmar": 345, "overcom": 345, "fc": 345, "v0": 345, "v1": 345, "key0": 345, "key1": 345, "linear3": 345, "v2": 345, "counter": 345, "fed": 345, "weight_initi": 345, "glorotuniform": 345, "bias_initi": 345, "_w_init": 345, "_b_init": 345, "create_vari": 345, "var_shap": 345, "fan_out": 345, "fan_in": 345, "fan_mod": 345, "fan_sum": 345, "misnom": 345, "saw": 345, "vanilla": [345, 1729], "compile_on_next_step": 345, "_beta1": 345, "_beta2": 345, "_epsilon": 345, "_mw": 345, "_vw": 345, "_first_pass": 345, "_should_compil": 345, "_step": 345, "new_v": 345, "_lr": 345, "_inplac": 345, "_stop_gradi": 345, "set_stat": 345, "clamp": 346, "clip_by_valu": 346, "captur": [346, 1730], "sparse_funct": 346, "num_class": 346, "new_axi": 346, "constitu": 346, "_linear": 346, "jax_graph": 346, "to_backend": 346, "to_ivy_modul": 346, "thinli": 346, "whilst": [346, 1718, 1729], "to_haiku_modul": 346, "hk": 346, "loss_fn_t": 346, "without_apply_rng": 346, "rng": 346, "prngkei": 346, "param": 346, "update_rul": 346, "tree_multimap": 346, "mechan": [356, 358, 1719], "robot": [356, 1719], "perfect": 357, "3d": 357, "differenti": [357, 1729], "orient": 357, "pose": 357, "largest": 357, "euler": 357, "quaternion": 357, "rotat": 357, "ivy_mech": 357, "target_facing_rotation_matrix": 357, "polar_to_cartesian_coord": 357, "ordin": 357, "warp": 357, "optic": 357, "voxel": 357, "ivy_vis": 357, "coords_to_voxel_grid": 357, "render_pixel_coord": 357, "neural": [357, 1719, 1725, 1727, 1728, 1729, 1733, 1735, 1736], "radianc": 357, "nerf": 357, "trajectori": 357, "motion": 357, "plan": [357, 1719], "mobil": [357, 1729], "sample_spline_path": 357, "rigidmobil": 357, "sample_bodi": 357, "drone": 357, "sample_link": 357, "openai": 357, "swimmer": 357, "reward": 357, "supervis": 357, "reinforc": 357, "door": [357, 358], "cartpol": 357, "mountain_car": 357, "pendulum": 357, "reacher": 357, "learnt": 357, "ture": 357, "ntm": 357, "egospher": 357, "spatial": 357, "esm": 357, "ivy_memori": 357, "egocentr": 357, "room": 357, "inspir": 357, "doubt": 358, "grate": 358, "probe": 358, "remark": 358, "surpris": 358, "lock": 358, "gold": 358, "dex": 358, "ye": 358, "scan": 358, "tricki": [358, 1718], "predictor": 358, "tight": 358, "driver": 358, "schedul": [358, 1729, 1736], "Will": 358, "ast": 358, "cond": 358, "jacobian": [358, 1729], "checkpoint": 358, "autodiff": 358, "shine": 358, "merci": 358, "autograd": 358, "cluster": [358, 1729], "compet": [358, 1729], "paradigm": [358, 1729], "parallelis": 358, "spmd": 358, "mixtur": 358, "expert": 358, "sophist": 358, "depart": 358, "routin": [358, 1729], "hundr": 358, "thousand": 358, "deepli": [358, 1729], "broadli": [358, 1735], "supplementari": 358, "fanci": [358, 1729], "fusion": [358, 1733], "lose": 358, "vmap": [358, 1729], "pmap": 358, "overhead": [358, 1732], "eventu": 358, "supplement": 358, "backdoor": 358, "callback": 358, "load": [358, 1728, 1735], "record": [358, 1730], "metric": 358, "outsourc": 358, "is_ivy_sparse_arrai": 427, "nail": 1718, "retain": 1718, "funtion": 1718, "asset": 1718, "functiona": 1718, "scientist": 1718, "deploi": [1718, 1727, 1728, 1729, 1731, 1735], "correl": 1718, "analyz": 1718, "ai": [1719, 1727, 1731], "colab": 1719, "sharp": 1719, "favorit": 1719, "jax_concat": 1719, "tf_concat": 1719, "np_concat": 1719, "torch_concat": 1719, "get_devic": 1719, "reduce_prod": 1719, "reduce_sum": 1719, "gradient_imag": 1719, "indices_wher": 1719, "bilinear_resampl": 1719, "stack_imag": 1719, "neural_net": 1719, "floormod": 1719, "articl": 1719, "lenton2021ivi": 1719, "inter": 1719, "portabl": [1719, 1727], "lenton": 1719, "daniel": 1719, "pardo": 1719, "fabio": 1719, "falck": 1719, "fabian": 1719, "jame": 1719, "stephen": 1719, "clark": 1719, "ronald": 1719, "journal": 1719, "arxiv": 1719, "preprint": 1719, "2102": 1719, "02886": 1719, "2021": 1719, "conceptu": [1725, 1730], "broken": [1725, 1729], "tracer": 1725, "infrastructur": [1725, 1731, 1732], "vendor": [1725, 1731], "complimentari": [1725, 1735], "acycl": [1725, 1730], "insert_numb": 1726, "insert_t": 1726, "scaffold": [1727, 1735], "heart": 1727, "toolchain": [1727, 1732], "intermedi": [1727, 1728, 1729, 1730, 1735], "ir": [1727, 1730, 1735], "assembli": [1727, 1734, 1735], "idl": 1727, "middl": 1727, "emit": 1727, "gnu": [1727, 1732], "gcc": [1727, 1734], "broader": 1727, "heterogen": 1727, "aid": 1727, "coprocessor": 1727, "programm": [1727, 1734], "gate": 1727, "onednn": 1727, "awai": [1727, 1729], "complementari": [1727, 1735], "sit": [1727, 1730, 1735], "tandem": 1727, "possess": 1727, "underneath": 1727, "export": [1728, 1735], "signal": [1728, 1729], "khrono": [1728, 1734], "appl": 1728, "coremltool": 1728, "albeit": 1728, "promin": 1729, "abbrevi": 1729, "laboratori": 1729, "proprietari": [1729, 1733, 1734], "mathwork": 1729, "commerci": 1729, "1984": 1729, "plot": 1729, "toolbox": 1729, "mupad": 1729, "engin": [1729, 1731, 1732], "simulink": 1729, "graphic": [1729, 1733, 1734], "simul": 1729, "embed": 1729, "million": [1729, 1732], "worldwid": 1729, "scienc": [1729, 1731], "econom": 1729, "2001": 1729, "scientif": 1729, "interpol": 1729, "od": 1729, "solver": 1729, "fortran": [1729, 1733], "cython": 1729, "friendli": 1729, "2002": 1729, "lua": 1729, "luajit": 1729, "idiap": 1729, "epfl": 1729, "2005": 1729, "numarrai": 1729, "cpython": 1729, "partli": 1729, "multidimension": 1729, "2007": 1729, "classif": 1729, "regress": [1729, 1736], "forest": 1729, "boost": 1729, "dbscan": 1729, "inbuilt": 1729, "esqu": 1729, "aesara": 1729, "2008": 1729, "analysi": [1729, 1730], "datafram": 1729, "slice": 1729, "critic": [1729, 1735], "2012": 1729, "Its": 1729, "polymorph": 1729, "parallel": [1729, 1733, 1734], "mpi": 1729, "openmp": 1729, "glue": 1729, "jaot": 1729, "nasa": 1729, "cern": 1729, "climat": 1729, "allianc": 1729, "influenti": 1729, "2014": 1729, "analyt": [1729, 1731, 1735], "scala": 1729, "ship": 1729, "forgiv": 1729, "decemb": 1729, "2019": [1729, 1732], "announc": 1729, "transit": 1729, "mainten": 1729, "v7": 1729, "meaning": 1729, "2016": 1729, "imper": 1729, "fast": 1729, "amazon": 1729, "traction": 1729, "cognit": [1729, 1736], "toolkit": [1729, 1730, 1736], "grade": 1729, "realiz": 1729, "feed": [1729, 1730], "dnn": 1729, "cnn": 1729, "rnn": 1729, "stochast": 1729, "sgd": 1729, "backpropag": 1729, "succumb": 1729, "came": 1729, "asynchron": 1729, "monitor": 1729, "practition": [1729, 1733, 1734, 1735], "hobbyist": 1729, "tremend": 1729, "ecosystem": 1729, "gear": 1729, "batteri": 1729, "zygot": 1729, "jl": 1729, "workload": 1729, "daggerflux": 1729, "frontier": 1729, "hessian": 1729, "2018": 1729, "lightweight": [1729, 1736], "shortcom": 1729, "eas": 1729, "barrier": 1729, "inexperienc": 1729, "underdevelop": 1729, "fanat": 1729, "ounc": 1729, "infanc": 1729, "emerg": 1729, "nich": 1729, "introduct": 1729, "lite": 1729, "enterpris": 1729, "reinvent": [1729, 1731], "inertia": 1729, "haven": 1729, "creator": [1729, 1731], "paszk": 1729, "hi": 1729, "safeti": 1729, "bulk": 1729, "haskel": 1729, "dataflow": 1730, "distil": 1730, "essenc": [1730, 1735], "enclos": 1730, "scope": [1730, 1734], "trace_modul": 1730, "scriptfunct": 1730, "scriptmodul": 1730, "fake": 1730, "proxi": 1730, "site": 1730, "graphmodul": 1730, "travi": 1731, "oliph": 1731, "leader": 1731, "led": 1731, "cornerston": 1731, "numba": 1731, "numfocu": 1731, "pydata": 1731, "confer": 1731, "consult": 1731, "servic": 1731, "expertis": 1731, "devop": 1731, "mlop": 1731, "dashboard": 1731, "startup": 1731, "mlir": [1731, 1732, 1735], "Their": 1731, "held": 1731, "privileg": 1731, "presum": 1731, "llvm": [1731, 1734], "founder": 1731, "tvm": [1731, 1735], "sustain": 1731, "empow": 1731, "har": 1731, "burden": 1731, "benchmark": 1731, "convention": 1732, "precompil": 1732, "executor": 1732, "exploit": 1732, "julia": [1732, 1735], "fsf": 1732, "gpl": 1732, "roughli": 1732, "biggest": [1732, 1735], "nvidia": [1733, 1734], "conduct": 1733, "throughput": 1733, "autotun": 1733, "consumpt": 1733, "gpgpu": 1733, "talk": 1734, "classic": 1734, "sycl": 1734, "dpc": 1734, "processor": 1734, "x86": 1734, "oneapi": 1734, "ia": 1734, "aka": 1734, "xeon": 1734, "gen9": 1734, "xe": 1734, "card": 1734, "arria": 1734, "gx": 1734, "fpga": 1734, "tune": [1734, 1735], "lofti": 1735, "ambit": 1735, "realm": 1735, "bedrock": 1735, "flux": 1735, "bite": 1735, "chew": 1735, "eagerpi": 1735, "tensorli": 1735, "thinc": 1735, "neuropod": 1735, "exhibit": 1735, "emploi": 1735, "fx": 1735, "retrain": 1735, "wider": 1735, "closer": 1735, "greatli": 1735, "challeng": 1735, "modular": 1735, "anywher": 1735, "switch": 1736, "theano": 1736, "plaidml": 1736, "partial_svd": 1736, "kron": 1736, "tucker_mode_dot": 1736, "excel": 1736, "subsystem": 1736}, "objects": {"ivy.array": [[45, 0, 0, "-", "activations"], [49, 0, 0, "-", "conversions"], [54, 0, 0, "-", "creation"], [56, 0, 0, "-", "data_type"], [58, 0, 0, "-", "device"], [60, 0, 0, "-", "elementwise"], [134, 0, 0, "-", "general"], [136, 0, 0, "-", "gradients"], [138, 0, 0, "-", "image"], [140, 0, 0, "-", "layers"], [142, 0, 0, "-", "linear_algebra"], [144, 0, 0, "-", "losses"], [146, 0, 0, "-", "manipulation"], [148, 0, 0, "-", "norms"], [150, 0, 0, "-", "random"], [152, 0, 0, "-", "searching"], [154, 0, 0, "-", "set"], [156, 0, 0, "-", "sorting"], [158, 0, 0, "-", "statistical"], [160, 0, 0, "-", "utility"], [162, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[46, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[46, 2, 1, "", "gelu"], [46, 2, 1, "", "leaky_relu"], [46, 2, 1, "", "log_softmax"], [46, 2, 1, "", "relu"], [46, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [46, 2, 1, "", "softplus"]], "ivy.array.conversions": [[50, 3, 1, "", "args_to_ivy"], [51, 3, 1, "", "args_to_native"], [52, 3, 1, "", "to_ivy"], [53, 3, 1, "", "to_native"]], "ivy.array.creation": [[55, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[55, 2, 1, "", "asarray"], [55, 2, 1, "", "copy_array"], [55, 2, 1, "", "empty_like"], [55, 2, 1, "", "from_dlpack"], [55, 2, 1, "", "full_like"], [55, 2, 1, "", "meshgrid"], [55, 2, 1, "", "native_array"], [55, 2, 1, "", "one_hot"], [55, 2, 1, "", "ones_like"], [55, 2, 1, "", "tril"], [55, 2, 1, "", "triu"], [55, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[57, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[57, 2, 1, "", "astype"], [57, 2, 1, "", "broadcast_arrays"], [57, 2, 1, "", "broadcast_to"], [57, 2, 1, "", "can_cast"], [57, 2, 1, "", "dtype"], [57, 2, 1, "", "finfo"], [57, 2, 1, "", "iinfo"], [57, 2, 1, "", "is_bool_dtype"], [57, 2, 1, "", "is_float_dtype"], [57, 2, 1, "", "is_int_dtype"], [57, 2, 1, "", "is_uint_dtype"], [57, 2, 1, "", "result_type"]], "ivy.array.device": [[59, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[59, 2, 1, "", "dev"], [59, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[61, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[61, 2, 1, "", "abs"], [61, 2, 1, "", "acos"], [61, 2, 1, "", "acosh"], [61, 2, 1, "", "add"], [61, 2, 1, "", "asin"], [61, 2, 1, "", "asinh"], [61, 2, 1, "", "atan"], [61, 2, 1, "", "atan2"], [61, 2, 1, "", "atanh"], [61, 2, 1, "", "bitwise_and"], [61, 2, 1, "", "bitwise_invert"], [61, 2, 1, "", "bitwise_left_shift"], [61, 2, 1, "", "bitwise_or"], [61, 2, 1, "", "bitwise_right_shift"], [61, 2, 1, "", "bitwise_xor"], [61, 2, 1, "", "ceil"], [61, 2, 1, "", "cos"], [61, 2, 1, "", "cosh"], [61, 2, 1, "", "deg2rad"], [61, 2, 1, "", "divide"], [61, 2, 1, "", "equal"], [61, 2, 1, "", "erf"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "expm1"], [61, 2, 1, "", "floor"], [61, 2, 1, "", "floor_divide"], [61, 2, 1, "", "greater"], [61, 2, 1, "", "greater_equal"], [61, 2, 1, "", "isfinite"], [61, 2, 1, "", "isinf"], [61, 2, 1, "", "isnan"], [61, 2, 1, "", "isreal"], [61, 2, 1, "", "less"], [61, 2, 1, "", "less_equal"], [61, 2, 1, "", "log"], [61, 2, 1, "", "log10"], [61, 2, 1, "", "log1p"], [61, 2, 1, "", "log2"], [61, 2, 1, "", "logaddexp"], [61, 2, 1, "", "logical_and"], [61, 2, 1, "", "logical_not"], [61, 2, 1, "", "logical_or"], [61, 2, 1, "", "logical_xor"], [61, 2, 1, "", "maximum"], [61, 2, 1, "", "minimum"], [61, 2, 1, "", "multiply"], [61, 2, 1, "", "negative"], [61, 2, 1, "", "not_equal"], [61, 2, 1, "", "positive"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "rad2deg"], [61, 2, 1, "", "reciprocal"], [61, 2, 1, "", "remainder"], [61, 2, 1, "", "round"], [61, 2, 1, "", "sign"], [61, 2, 1, "", "sin"], [61, 2, 1, "", "sinh"], [61, 2, 1, "", "sqrt"], [61, 2, 1, "", "square"], [61, 2, 1, "", "subtract"], [61, 2, 1, "", "tan"], [61, 2, 1, "", "tanh"], [61, 2, 1, "", "trunc"], [61, 2, 1, "", "trunc_divide"]], "ivy.array.extensions": [[77, 0, 0, "-", "activations"], [98, 0, 0, "-", "conversions"], [100, 0, 0, "-", "creation"], [102, 0, 0, "-", "data_type"], [104, 0, 0, "-", "device"]], "ivy.array.extensions.activations": [[78, 1, 1, "", "ArrayWithActivationsExtensions"]], "ivy.array.extensions.conversions": [[99, 1, 1, "", "ArrayWithConversionsExtensions"]], "ivy.array.extensions.creation": [[101, 1, 1, "", "ArrayWithCreationExtensions"]], "ivy.array.extensions.data_type": [[103, 1, 1, "", "ArrayWithData_typeExtensions"]], "ivy.array.extensions.device": [[105, 1, 1, "", "ArrayWithDeviceExtensions"]], "ivy.array.general": [[135, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[135, 2, 1, "", "all_equal"], [135, 2, 1, "", "array_equal"], [135, 2, 1, "", "assert_supports_inplace"], [135, 2, 1, "", "clip_matrix_norm"], [135, 2, 1, "", "clip_vector_norm"], [135, 2, 1, "", "default"], [135, 2, 1, "", "einops_rearrange"], [135, 2, 1, "", "einops_reduce"], [135, 2, 1, "", "einops_repeat"], [135, 2, 1, "", "exists"], [135, 2, 1, "", "fourier_encode"], [135, 2, 1, "", "gather"], [135, 2, 1, "", "gather_nd"], [135, 2, 1, "", "get_num_dims"], [135, 2, 1, "", "has_nans"], [135, 2, 1, "", "inplace_decrement"], [135, 2, 1, "", "inplace_increment"], [135, 2, 1, "", "inplace_update"], [135, 2, 1, "", "is_array"], [135, 2, 1, "", "is_ivy_array"], [135, 2, 1, "", "is_ivy_container"], [135, 2, 1, "", "is_native_array"], [135, 2, 1, "", "scatter_flat"], [135, 2, 1, "", "scatter_nd"], [135, 2, 1, "", "stable_divide"], [135, 2, 1, "", "stable_pow"], [135, 2, 1, "", "supports_inplace_updates"], [135, 2, 1, "", "to_list"], [135, 2, 1, "", "to_numpy"], [135, 2, 1, "", "to_scalar"], [135, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[137, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[137, 2, 1, "", "adam_step"], [137, 2, 1, "", "adam_update"], [137, 2, 1, "", "gradient_descent_update"], [137, 2, 1, "", "is_variable"], [137, 2, 1, "", "lamb_update"], [137, 2, 1, "", "lars_update"], [137, 2, 1, "", "optimizer_update"], [137, 2, 1, "", "stop_gradient"], [137, 2, 1, "", "variable"], [137, 2, 1, "", "variable_data"]], "ivy.array.image": [[139, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[141, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[141, 2, 1, "", "conv1d"], [141, 2, 1, "", "conv1d_transpose"], [141, 2, 1, "", "conv2d"], [141, 2, 1, "", "conv3d"], [141, 2, 1, "", "conv3d_transpose"], [141, 2, 1, "", "depthwise_conv2d"], [141, 2, 1, "", "dropout"], [141, 2, 1, "", "linear"], [141, 2, 1, "", "lstm_update"], [141, 2, 1, "", "multi_head_attention"], [141, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[143, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[143, 2, 1, "", "cholesky"], [143, 2, 1, "", "cross"], [143, 2, 1, "", "det"], [143, 2, 1, "", "diag"], [143, 2, 1, "", "diagonal"], [143, 2, 1, "", "eigh"], [143, 2, 1, "", "eigvalsh"], [143, 2, 1, "", "inner"], [143, 2, 1, "", "inv"], [143, 2, 1, "", "matmul"], [143, 2, 1, "", "matrix_norm"], [143, 2, 1, "", "matrix_rank"], [143, 2, 1, "", "matrix_transpose"], [143, 2, 1, "", "outer"], [143, 2, 1, "", "pinv"], [143, 2, 1, "", "qr"], [143, 2, 1, "", "slogdet"], [143, 2, 1, "", "solve"], [143, 2, 1, "", "svd"], [143, 2, 1, "", "svdvals"], [143, 2, 1, "", "tensordot"], [143, 2, 1, "", "trace"], [143, 2, 1, "", "vander"], [143, 2, 1, "", "vecdot"], [143, 2, 1, "", "vector_norm"], [143, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[145, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[145, 2, 1, "", "binary_cross_entropy"], [145, 2, 1, "", "cross_entropy"], [145, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[147, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[147, 2, 1, "", "clip"], [147, 2, 1, "", "concat"], [147, 2, 1, "", "constant_pad"], [147, 2, 1, "", "expand_dims"], [147, 2, 1, "", "flip"], [147, 2, 1, "", "permute_dims"], [147, 2, 1, "", "repeat"], [147, 2, 1, "", "reshape"], [147, 2, 1, "", "roll"], [147, 2, 1, "", "split"], [147, 2, 1, "", "squeeze"], [147, 2, 1, "", "stack"], [147, 2, 1, "", "swapaxes"], [147, 2, 1, "", "tile"], [147, 2, 1, "", "unstack"], [147, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[149, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[149, 2, 1, "", "layer_norm"]], "ivy.array.random": [[151, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[151, 2, 1, "", "multinomial"], [151, 2, 1, "", "randint"], [151, 2, 1, "", "random_normal"], [151, 2, 1, "", "random_uniform"], [151, 2, 1, "", "shuffle"]], "ivy.array.searching": [[153, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[153, 2, 1, "", "argmax"], [153, 2, 1, "", "argmin"], [153, 2, 1, "", "argwhere"], [153, 2, 1, "", "nonzero"], [153, 2, 1, "", "where"]], "ivy.array.set": [[155, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[155, 2, 1, "", "unique_all"], [155, 2, 1, "", "unique_counts"], [155, 2, 1, "", "unique_inverse"], [155, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[157, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[157, 2, 1, "", "argsort"], [157, 2, 1, "", "searchsorted"], [157, 2, 1, "", "sort"]], "ivy.array.statistical": [[159, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[159, 2, 1, "", "cumprod"], [159, 2, 1, "", "cumsum"], [159, 2, 1, "", "einsum"], [159, 2, 1, "", "max"], [159, 2, 1, "", "mean"], [159, 2, 1, "", "min"], [159, 2, 1, "", "prod"], [159, 2, 1, "", "std"], [159, 2, 1, "", "sum"], [159, 2, 1, "", "var"]], "ivy.array.utility": [[161, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[161, 2, 1, "", "all"], [161, 2, 1, "", "any"]], "ivy.array.wrapping": [[163, 3, 1, "", "add_ivy_array_instance_methods"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"assert": [1, 329], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 322, 325, 338, 341, 358], "handler": [19, 341], "choose_random_backend": 20, "clear_backend_stack": 21, "current_backend": 22, "fn_name_from_version_specific_fn_nam": 23, "get_backend": 24, "set_backend": 25, "set_backend_to_specific_vers": 26, "set_jax_backend": 27, "set_numpy_backend": 28, "set_tensorflow_backend": 29, "set_torch_backend": 30, "unset_backend": 31, "background": [32, 1719], "ml": [33, 1731, 1735], "explos": 33, "standard": [34, 339, 1726, 1735], "skeptic": 34, "complimentari": 34, "v": [34, 358], "competit": 34, "do": [34, 337], "work": [34, 38, 1725], "The": [34, 42, 335, 343, 358], "arrai": [34, 44, 47, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 320, 321, 324, 331, 343, 427, 438, 443, 448, 453, 458, 463, 468, 481, 488, 492, 500, 506, 517, 522, 527, 535, 541, 546, 554, 561, 566, 571, 576, 594, 605, 612, 617, 622, 627, 634, 655, 675, 684, 689, 694, 699, 704, 709, 714, 719, 724, 729, 734, 739, 744, 749, 754, 759, 764, 769, 774, 779, 784, 789, 794, 799, 804, 809, 814, 819, 824, 829, 834, 839, 844, 849, 854, 859, 864, 869, 874, 879, 884, 889, 894, 899, 904, 909, 914, 919, 924, 929, 934, 939, 944, 949, 954, 959, 964, 969, 974, 980, 985, 990, 995, 1000, 1006, 1013, 1016, 1022, 1027, 1034, 1037, 1042, 1047, 1052, 1055, 1062, 1067, 1079, 1087, 1093, 1098, 1103, 1109, 1115, 1120, 1125, 1135, 1140, 1155, 1160, 1166, 1172, 1178, 1183, 1194, 1200, 1204, 1210, 1214, 1220, 1224, 1228, 1234, 1241, 1246, 1253, 1258, 1263, 1272, 1277, 1285, 1290, 1297, 1302, 1307, 1312, 1318, 1323, 1328, 1333, 1338, 1343, 1347, 1350, 1355, 1360, 1365, 1374, 1379, 1384, 1389, 1394, 1399, 1404, 1410, 1415, 1420, 1425, 1430, 1435, 1440, 1445, 1450, 1455, 1460, 1466, 1471, 1476, 1481, 1486, 1491, 1496, 1501, 1506, 1511, 1516, 1521, 1527, 1532, 1537, 1542, 1569, 1574, 1579, 1584, 1589, 1595, 1601, 1606, 1611, 1616, 1622, 1628, 1633, 1638, 1643, 1648, 1653, 1658, 1664, 1669, 1674, 1678, 1682, 1686, 1690, 1694, 1699, 1704, 1709, 1714, 1726], "api": [34, 40, 320, 323, 324, 338, 341, 343, 345, 346, 1726, 1733, 1735], "why": [35, 337], "unifi": [35, 343, 1731, 1735], "No": [35, 41], "more": [35, 41, 339], "re": [35, 337], "implement": 35, "infinit": 35, "shelf": 35, "life": 35, "contribut": [36, 1719], "appli": [37, 357], "librari": [37, 357], "introduct": [37, 335, 336], "exampl": [37, 327, 331, 336, 339], "ivi": [37, 40, 41, 42, 321, 324, 327, 329, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 471, 478, 479, 481, 482, 483, 488, 489, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 506, 507, 508, 509, 511, 512, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 584, 585, 589, 590, 591, 594, 595, 596, 597, 599, 600, 602, 603, 605, 606, 607, 608, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 634, 635, 636, 637, 655, 656, 657, 658, 674, 675, 676, 677, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 839, 840, 841, 842, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 879, 880, 881, 882, 884, 885, 886, 887, 889, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 902, 904, 905, 906, 907, 909, 910, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 989, 990, 991, 992, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1006, 1007, 1008, 1009, 1013, 1014, 1016, 1017, 1018, 1019, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1052, 1053, 1055, 1056, 1057, 1058, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1079, 1080, 1081, 1082, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1204, 1205, 1206, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1220, 1221, 1222, 1224, 1225, 1226, 1228, 1229, 1230, 1233, 1234, 1235, 1236, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1569, 1570, 1571, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1595, 1596, 1597, 1598, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1679, 1680, 1682, 1683, 1684, 1686, 1687, 1688, 1690, 1691, 1692, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1735], "robot": [37, 354, 357], "build": [38, 341], "doc": 38, "docker": [38, 41, 42], "dockerless": 38, "us": [38, 41, 320, 344], "miniconda": [38, 41], "venv": [38, 41], "document": 38, "pipelin": [38, 324, 337, 358], "make_doc": 38, "sh": 38, "entrypoint": 38, "_make_doc": 38, "generate_src_rst_fil": 38, "py": 38, "sphinx": 38, "correct_built_html_fil": 38, "remove_fil": 38, "help": [39, 42], "resourc": 39, "open": 40, "task": 40, "function": [40, 323, 325, 326, 329, 331, 332, 333, 335, 336, 337, 338, 341, 346, 358], "format": [40, 330, 1728, 1735], "checklist": 40, "frontend": [40, 322, 324, 335, 336, 346], "where": [40, 1620, 1622, 1623, 1624], "place": 40, "extens": [40, 42, 76, 203, 356, 382, 1719], "set": [41, 126, 154, 281, 309, 322, 424, 1625], "up": 41, "clone": 41, "pycharm": [41, 42], "virtual": 41, "environ": 41, "interpret": 41, "window": 41, "maco": 41, "ubuntu": 41, "test": [41, 42, 320, 324, 336, 337], "detail": 41, "hypothesi": [41, 336, 337], "log": [41, 853, 854, 855, 856], "free": 41, "github": [41, 324], "codespac": 41, "pre": [41, 330], "commit": [41, 42, 330], "basic": [42, 335], "get": 42, "todo": 42, "list": 42, "issu": 42, "manag": 42, "your": 42, "fork": 42, "who": 42, "To": 42, "ask": 42, "With": 42, "command": 42, "line": 42, "browser": 42, "pull": [42, 324], "request": [42, 324], "small": 42, "often": 42, "interact": 42, "contain": [42, 164, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 323, 344, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 479, 483, 493, 495, 498, 501, 503, 507, 509, 512, 515, 518, 520, 523, 525, 528, 530, 533, 536, 538, 540, 542, 545, 547, 550, 553, 555, 562, 564, 567, 569, 572, 574, 577, 579, 585, 589, 591, 595, 597, 600, 603, 606, 608, 613, 615, 618, 620, 623, 625, 628, 630, 635, 637, 656, 658, 674, 676, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 780, 782, 785, 787, 790, 792, 795, 797, 800, 802, 805, 807, 810, 812, 815, 817, 820, 822, 825, 827, 830, 832, 835, 837, 840, 842, 845, 847, 850, 852, 855, 857, 860, 862, 865, 867, 870, 872, 875, 877, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917, 920, 922, 925, 927, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 955, 957, 960, 962, 965, 967, 970, 972, 975, 977, 979, 981, 984, 986, 989, 991, 994, 996, 999, 1001, 1007, 1009, 1017, 1019, 1023, 1025, 1028, 1030, 1038, 1040, 1043, 1045, 1048, 1050, 1056, 1058, 1063, 1065, 1068, 1070, 1080, 1082, 1088, 1090, 1094, 1096, 1099, 1101, 1104, 1106, 1110, 1112, 1116, 1118, 1121, 1123, 1126, 1128, 1136, 1138, 1141, 1143, 1156, 1158, 1161, 1163, 1165, 1167, 1171, 1173, 1177, 1179, 1182, 1184, 1193, 1195, 1201, 1205, 1211, 1215, 1217, 1221, 1225, 1229, 1233, 1235, 1240, 1242, 1245, 1247, 1254, 1256, 1259, 1261, 1264, 1266, 1268, 1270, 1273, 1275, 1278, 1280, 1286, 1288, 1291, 1293, 1298, 1300, 1303, 1305, 1308, 1310, 1313, 1315, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1339, 1341, 1344, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1368, 1370, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1395, 1397, 1400, 1402, 1405, 1407, 1409, 1411, 1414, 1416, 1419, 1421, 1424, 1426, 1429, 1431, 1434, 1436, 1439, 1441, 1444, 1446, 1451, 1453, 1456, 1458, 1461, 1463, 1467, 1469, 1472, 1474, 1477, 1479, 1482, 1484, 1487, 1489, 1492, 1494, 1497, 1499, 1502, 1504, 1507, 1509, 1512, 1514, 1517, 1519, 1522, 1524, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1570, 1575, 1577, 1580, 1582, 1585, 1587, 1590, 1592, 1596, 1598, 1602, 1604, 1607, 1609, 1612, 1614, 1617, 1619, 1621, 1623, 1627, 1629, 1632, 1634, 1637, 1639, 1642, 1644, 1649, 1651, 1654, 1656, 1659, 1661, 1665, 1667, 1670, 1672, 1675, 1679, 1683, 1687, 1691, 1695, 1698, 1700, 1703, 1705, 1710, 1712, 1715, 1717], "run": [42, 320, 337], "local": 42, "most": 42, "out": [42, 331, 334], "id": [42, 320], "data": [43, 56, 102, 175, 257, 325, 335, 337, 344, 358, 388, 557], "class": [43, 329, 335, 343, 1737], "activ": [45, 77, 165, 204, 383, 436, 1738], "arraywithactiv": 46, "convers": [49, 98, 171, 253], "args_to_ivi": 50, "args_to_n": 51, "to_ivi": 52, "to_n": 53, "creation": [54, 100, 173, 255, 386, 475], "arraywithcr": 55, "type": [56, 102, 175, 257, 325, 332, 335, 358, 388, 557], "arraywithdatatyp": 57, "devic": [58, 104, 177, 259, 326, 331, 335, 389, 648], "arraywithdevic": 59, "elementwis": [60, 74, 179, 201, 371, 682], "arraywithelementwis": 61, "experiment": [62, 181, 370], "method": [63, 79, 182, 206, 323, 335, 336, 343, 344], "count_nonzero": [64, 183, 372], "exp2": [65, 184, 373], "float_pow": [66, 185, 374], "fmax": [67, 186, 375], "fmod": [68, 187, 376], "gcd": [69, 188, 377], "lcm": [70, 189, 378], "nansum": [71, 190, 379], "sinc": [72, 191, 380], "trapz": [73, 381], "arraywithelementwiseextens": 75, "arraywithactivationsextens": 78, "diagflat": [80, 207, 402], "dirichlet": [81, 208, 422], "flatten": [82, 209, 406], "fliplr": [83, 210, 407], "flipud": [84, 211, 408], "heavisid": [85, 214, 409], "hstack": [86, 215, 410], "i0": [87, 216, 411], "kron": [88, 219, 403], "max_pool1d": [89, 220, 397], "max_pool2d": [90, 221, 398], "median": [91, 222, 433], "moveaxi": [92, 223, 412], "msort": [93, 224, 426], "pad": [94, 225, 399], "rot90": [95, 226, 415], "top_k": [96, 250, 416], "vstack": [97, 252, 417], "arraywithconversionsextens": 99, "arraywithcreationextens": 101, "arraywithdata_typeextens": 103, "arraywithdeviceextens": 105, "gener": [106, 134, 261, 289, 337, 339, 390, 1004], "arraywithgeneralextens": 107, "gradient": [108, 136, 263, 291, 391, 1198], "arraywithgradientsextens": 109, "imag": [110, 138, 265, 293], "arraywithimageextens": 111, "layer": [112, 140, 267, 295, 392, 1250, 1753], "arraywithlayersextens": 113, "linear": [114, 142, 269, 297, 401, 1296, 1297, 1298, 1299, 1316, 1763], "algebra": [114, 142, 269, 297, 401, 1316], "arraywithlinalgextens": 115, "loss": [116, 144, 271, 299, 404, 1448], "arraywithlossesextens": 117, "manipul": [118, 146, 273, 301, 405, 1464], "arraywithmanipulationextens": 119, "norm": [120, 148, 275, 303, 420, 1567, 1768], "arraywithnormsextens": 121, "random": [122, 150, 277, 305, 421, 1572], "arraywithrandomextens": 123, "search": [124, 152, 279, 307, 423, 1599], "arraywithsearchingextens": 125, "arraywithsetextens": 127, "sort": [128, 156, 283, 311, 425, 1646, 1657, 1658, 1659, 1660], "arraywithsortingextens": 129, "statist": [130, 158, 285, 313, 432, 1662], "arraywithstatisticalextens": 131, "util": [132, 160, 287, 315, 434, 1707], "arraywithutilityextens": 133, "arraywithgener": 135, "arraywithgradi": 137, "arraywithimag": 139, "arraywithlay": 141, "arraywithlinearalgebra": 143, "arraywithloss": 145, "arraywithmanipul": 147, "arraywithnorm": 149, "arraywithrandom": 151, "arraywithsearch": 153, "arraywithset": 155, "arraywithsort": 157, "arraywithstatist": 159, "arraywithutil": 161, "wrap": [162, 317, 333], "add_ivy_array_instance_method": 163, "containerwithactiv": 166, "base": 167, "containerbas": 168, "containerwithconvers": 172, "containerwithcr": 174, "containerwithdatatyp": 176, "containerwithdevic": 178, "containerwithelementwis": 180, "static_count_nonzero": 192, "static_exp2": 193, "static_float_pow": 194, "static_fmax": 195, "static_fmod": 196, "static_gcd": 197, "static_lcm": 198, "static_nansum": 199, "static_sinc": 200, "containerwithelementwiseextens": 202, "containerwithactivationextens": 205, "hamming_window": [212, 393], "hann_window": [213, 394], "kaiser_bessel_derived_window": [217, 395], "kaiser_window": [218, 396], "static_diagflat": 227, "static_dirichlet": 228, "static_flatten": 229, "static_fliplr": 230, "static_flipud": 231, "static_hamming_window": 232, "static_hann_window": 233, "static_heavisid": 234, "static_hstack": 235, "static_i0": 236, "static_kaiser_bessel_derived_window": 237, "static_kaiser_window": 238, "static_kron": 239, "static_max_pool1d": 240, "static_max_pool2d": 241, "static_median": 242, "static_moveaxi": 243, "static_msort": 244, "static_pad": 245, "static_rot90": 246, "static_top_k": 247, "static_triu_indic": 248, "static_vstack": 249, "triu_indic": [251, 387], "containerwithconversionextens": 254, "containerwithcreationextens": 256, "containerwithdata_typeextens": 258, "containerwithdeviceextens": 260, "containerwithgeneralextens": 262, "containerwithgradientsextens": 264, "containerwithimageextens": 266, "containerwithlayersextens": 268, "containerwithlinalgextens": 270, "containerwithlossesextens": 272, "containerwithmanipulationextens": 274, "containerwithnormsextens": 276, "containerwithrandomextens": 278, "containerwithsearchingextens": 280, "containerwithsetextens": 282, "containerwithsortingextens": 284, "containerwithstatisticalextens": 286, "containerwithutilityextens": 288, "containerwithgener": 290, "containerwithgradi": 292, "containerwithimag": 294, "containerwithlay": 296, "containerwithlinearalgebra": 298, "containerwithloss": 300, "containerwithmanipul": 302, "containerwithnorm": 304, "containerwithrandom": 306, "containerwithsearch": 308, "containerwithset": 310, "containerwithsort": 312, "containerwithstatist": 314, "containerwithutil": 316, "add_ivy_container_instance_method": 318, "deep": 319, "dive": 319, "termin": 320, "skip": 320, "nativ": 321, "handl": [321, 329, 358], "version": [322, 338, 358], "support": [322, 325, 335, 358], "instanc": [323, 335, 336, 343], "static": 323, "special": [323, 335, 336], "nestabl": [323, 331, 332], "continu": 324, "integr": [324, 337], "action": 324, "core": 324, "nn": 324, "state": [324, 345, 358], "ci": 324, "push": 324, "schedul": 324, "cron": 324, "job": 324, "dashboard": 324, "modul": [325, 326, 345, 1765, 1766], "promot": [325, 335], "argument": [325, 326, 331, 334, 335], "other": [325, 326], "unsupport": 325, "bug": 325, "superset": [325, 339], "docstr": [327, 328], "tan": [327, 336, 983, 985, 986, 987], "roll": [327, 1505, 1506, 1507, 1508], "add": [327, 336, 698, 699, 700, 701, 1735], "except": 329, "handle_except": 329, "decor": 329, "lint": 330, "check": [330, 358], "hook": 330, "posit": [331, 923, 924, 925, 926], "keyword": 331, "input": 331, "dtype": [331, 588, 589, 590], "number": 331, "oper": [331, 343, 358], "integ": 331, "sequenc": 331, "primari": 332, "composit": [332, 335], "mix": 332, "standalon": 332, "conveni": 332, "inplac": 334, "updat": 334, "copi": 334, "unus": 335, "miss": 335, "temporari": 335, "rule": 335, "numpi": [335, 1729], "cast": 335, "full": [336, 504], "alia": 336, "helper": [336, 337, 338], "import": 337, "strategi": 337, "we": 337, "need": 337, "how": 337, "write": 337, "effect": 337, "bonu": 337, "extend": [337, 339], "featur": 337, "self": 337, "consist": 337, "explicit": 337, "test_array_funct": 337, "fail": 337, "navig": 338, "code": 338, "categor": 338, "submodul": 338, "design": [338, 340, 1719], "pin": 338, "behaviour": 339, "what": [339, 1735], "i": 339, "A": 339, "non": 339, "duplic": 339, "when": 339, "too": 339, "much": 339, "balanc": 339, "effici": 339, "block": 341, "graph": [341, 346, 1730, 1735], "compil": [341, 346, 384, 472, 473, 1727, 1732, 1734, 1735], "framework": [342, 1729, 1732, 1735, 1736, 1737], "monkei": 343, "patch": 343, "construct": 344, "represent": 344, "recurs": 344, "built": 344, "ins": 344, "access": 344, "save": 344, "load": 344, "comparison": 344, "custom": [344, 358], "case": 344, "compartment": 344, "configur": 344, "network": [344, 346], "weight": 344, "initi": [345, 1743, 1747], "optim": [345, 1770, 1774], "transpil": 346, "role": 346, "convert": [346, 1741], "model": [346, 353, 358], "builder": 348, "ecosystem": 349, "gym": [350, 357], "mech": 351, "memori": [352, 357], "vision": [355, 357], "mechan": 357, "faq": 358, "maintain": 358, "dynam": 358, "size": 358, "shape": [358, 1152], "gpu": 358, "deploy": 358, "control": 358, "flow": 358, "auto": 358, "differenti": 358, "replica": 358, "parallel": 358, "altern": 358, "structur": 358, "func": 359, "wrapper": [359, 1735, 1736], "from_zero_dim_arrays_to_float": 360, "handle_nest": 361, "handle_out_argu": 362, "infer_devic": 363, "infer_dtyp": 364, "inputs_to_ivy_arrai": 365, "inputs_to_native_arrai": 366, "integer_arrays_to_float": 367, "outputs_to_ivy_arrai": 368, "to_native_arrays_and_back": 369, "constant": [385, 474, 1744], "vorbis_window": 400, "ndenumer": 413, "ndindex": 414, "meta": [418, 1545], "nest": [419, 1549], "spars": 427, "is_ivy_sparse_arrai": 428, "is_native_sparse_arrai": 429, "native_sparse_arrai": 430, "native_sparse_array_to_indices_values_and_shap": 431, "gelu": [437, 438, 439, 440, 1740], "static_gelu": 441, "leaky_relu": [442, 443, 444, 445], "static_leaky_relu": 446, "log_softmax": [447, 448, 449, 450], "static_log_softmax": 451, "relu": [452, 453, 454, 455], "static_relu": 456, "sigmoid": [457, 458, 459, 460], "static_sigmoid": 461, "softmax": [462, 463, 464, 465], "static_softmax": 466, "softplu": [467, 468, 469, 470], "static_softplu": 471, "nestedsequ": 476, "arang": [477, 478], "static_arang": 479, "asarrai": [480, 481, 482], "static_asarrai": 483, "asarray_handle_nest": 484, "asarray_infer_devic": 485, "asarray_to_native_arrays_and_back": 486, "copy_arrai": [487, 488, 489], "empti": 490, "empty_lik": [491, 492, 493, 494], "static_empty_lik": 495, "ey": [496, 497], "static_ey": 498, "from_dlpack": [499, 500, 501, 502], "static_from_dlpack": 503, "full_lik": [505, 506, 507, 508], "static_full_lik": 509, "linspac": [510, 511], "static_linspac": 512, "logspac": [513, 514], "static_logspac": 515, "meshgrid": [516, 517, 518, 519], "static_meshgrid": 520, "native_arrai": [521, 522, 523, 524], "static_native_arrai": 525, "one_hot": [526, 527, 528, 529], "static_one_hot": 530, "ones": [531, 532], "static_on": 533, "ones_lik": [534, 535, 536, 537], "static_ones_lik": 538, "tril": [539, 541, 542, 543], "static_tril": 540, "triu": [544, 546, 547, 548], "static_triu": 545, "zero": [549, 551, 1752], "static_zero": 550, "zeros_lik": [552, 554, 555, 556], "static_zeros_lik": 553, "as_ivy_dtyp": 558, "as_native_dtyp": 559, "astyp": [560, 561, 562, 563], "static_astyp": 564, "broadcast_arrai": [565, 566, 567, 568], "static_broadcast_arrai": 569, "broadcast_to": [570, 571, 572, 573], "static_broadcast_to": 574, "can_cast": [575, 576, 577, 578], "static_can_cast": 579, "check_float": 580, "closest_valid_dtyp": 581, "default_dtyp": 582, "default_float_dtyp": [583, 584], "static_default_float_dtyp": 585, "default_int_dtyp": 586, "default_uint_dtyp": 587, "static_dtyp": 591, "dtype_bit": 592, "finfo": [593, 594, 595, 596], "static_finfo": 597, "function_supported_dtyp": [598, 599], "static_function_supported_dtyp": 600, "function_unsupported_dtyp": [601, 602], "static_function_unsupported_dtyp": 603, "iinfo": [604, 605, 606, 607], "static_iinfo": 608, "infer_default_dtyp": 609, "invalid_dtyp": 610, "is_bool_dtyp": [611, 612, 613, 614], "static_is_bool_dtyp": 615, "is_float_dtyp": [616, 617, 618, 619], "static_is_float_dtyp": 620, "is_int_dtyp": [621, 622, 623, 624], "static_is_int_dtyp": 625, "is_uint_dtyp": [626, 627, 628, 629], "static_is_uint_dtyp": 630, "promote_typ": 631, "promote_types_of_input": 632, "result_typ": [633, 634, 635, 636], "static_result_typ": 637, "set_default_dtyp": 638, "set_default_float_dtyp": 639, "set_default_int_dtyp": 640, "set_default_uint_dtyp": 641, "type_promote_arrai": 642, "unset_default_dtyp": 643, "unset_default_float_dtyp": 644, "unset_default_int_dtyp": 645, "unset_default_uint_dtyp": 646, "valid_dtyp": 647, "profil": 649, "as_ivy_dev": 650, "as_native_dev": 651, "clear_mem_on_dev": 652, "default_devic": 653, "dev": [654, 655, 656, 657], "static_dev": 658, "dev_util": 659, "function_supported_devic": 660, "function_unsupported_devic": 661, "get_all_ivy_arrays_on_dev": 662, "gpu_is_avail": 663, "num_cpu_cor": 664, "num_gpu": 665, "num_ivy_arrays_on_dev": 666, "percent_used_mem_on_dev": 667, "print_all_ivy_arrays_on_dev": 668, "set_default_devic": 669, "set_split_factor": 670, "split_factor": 671, "split_func_cal": 672, "to_devic": [673, 675, 676, 677], "static_to_devic": 674, "total_mem_on_dev": 678, "tpu_is_avail": 679, "unset_default_devic": 680, "used_mem_on_dev": 681, "ab": [683, 684, 685, 686], "static_ab": 687, "aco": [688, 689, 690, 691], "static_aco": 692, "acosh": [693, 694, 695, 696], "static_acosh": 697, "static_add": 702, "asin": [703, 704, 705, 706], "static_asin": 707, "asinh": [708, 709, 710, 711], "static_asinh": 712, "atan": [713, 714, 715, 716], "static_atan": 717, "atan2": [718, 719, 720, 721], "static_atan2": 722, "atanh": [723, 724, 725, 726], "static_atanh": 727, "bitwise_and": [728, 729, 730, 731], "static_bitwise_and": 732, "bitwise_invert": [733, 734, 735, 736], "static_bitwise_invert": 737, "bitwise_left_shift": [738, 739, 740, 741], "static_bitwise_left_shift": 742, "bitwise_or": [743, 744, 745, 746], "static_bitwise_or": 747, "bitwise_right_shift": [748, 749, 750, 751], "static_bitwise_right_shift": 752, "bitwise_xor": [753, 754, 755, 756], "static_bitwise_xor": 757, "ceil": [758, 759, 760, 761], "static_ceil": 762, "co": [763, 764, 765, 766], "static_co": 767, "cosh": [768, 769, 770, 771], "static_cosh": 772, "deg2rad": [773, 774, 775, 776], "static_deg2rad": 777, "divid": [778, 779, 780, 781], "static_divid": 782, "equal": [783, 784, 785, 786], "static_equ": 787, "erf": [788, 789, 790, 791], "static_erf": 792, "exp": [793, 794, 795, 796], "static_exp": 797, "expm1": [798, 799, 800, 801], "static_expm1": 802, "floor": [803, 804, 805, 806], "static_floor": 807, "floor_divid": [808, 809, 810, 811], "static_floor_divid": 812, "greater": [813, 814, 815, 816], "static_great": 817, "greater_equ": [818, 819, 820, 821], "static_greater_equ": 822, "isfinit": [823, 824, 825, 826], "static_isfinit": 827, "isinf": [828, 829, 830, 831], "static_isinf": 832, "isnan": [833, 834, 835, 836], "static_isnan": 837, "isreal": [838, 839, 840, 841], "static_isr": 842, "less": [843, 844, 845, 846], "static_less": 847, "less_equ": [848, 849, 850, 851], "static_less_equ": 852, "static_log": 857, "log10": [858, 859, 860, 861], "static_log10": 862, "log1p": [863, 864, 865, 866], "static_log1p": 867, "log2": [868, 869, 870, 871], "static_log2": 872, "logaddexp": [873, 874, 875, 876], "static_logaddexp": 877, "logical_and": [878, 879, 880, 881], "static_logical_and": 882, "logical_not": [883, 884, 885, 886], "static_logical_not": 887, "logical_or": [888, 889, 890, 891], "static_logical_or": 892, "logical_xor": [893, 894, 895, 896], "static_logical_xor": 897, "maximum": [898, 899, 900, 901], "static_maximum": 902, "minimum": [903, 904, 905, 906], "static_minimum": 907, "multipli": [908, 909, 910, 911], "static_multipli": 912, "neg": [913, 914, 915, 916], "static_neg": 917, "not_equ": [918, 919, 920, 921], "static_not_equ": 922, "static_posit": 927, "pow": [928, 929, 930, 931], "static_pow": 932, "rad2deg": [933, 934, 935, 936], "static_rad2deg": 937, "reciproc": [938, 939, 940, 941], "static_reciproc": 942, "remaind": [943, 944, 945, 946], "static_remaind": 947, "round": [948, 949, 950, 951], "static_round": 952, "sign": [953, 954, 955, 956], "static_sign": 957, "sin": [958, 959, 960, 961], "static_sin": 962, "sinh": [963, 964, 965, 966], "static_sinh": 967, "sqrt": [968, 969, 970, 971], "static_sqrt": 972, "squar": [973, 974, 975, 976], "static_squar": 977, "subtract": [978, 980, 981, 982], "static_subtract": 979, "static_tan": 984, "tanh": [988, 990, 991, 992], "static_tanh": 989, "trunc": [993, 995, 996, 997], "static_trunc": 994, "trunc_divid": [998, 1000, 1001, 1002], "static_trunc_divid": 999, "all_equ": [1005, 1006, 1007, 1008], "static_all_equ": 1009, "arg_info": 1010, "arg_nam": 1011, "array_equ": [1012, 1013, 1014], "assert_supports_inplac": [1015, 1016, 1017, 1018], "static_assert_supports_inplac": 1019, "cache_fn": 1020, "clip_matrix_norm": [1021, 1022, 1023, 1024], "static_clip_matrix_norm": 1025, "clip_vector_norm": [1026, 1027, 1028, 1029], "static_clip_vector_norm": 1030, "container_typ": 1031, "current_backend_str": 1032, "default": [1033, 1034, 1035], "einops_rearrang": [1036, 1037, 1038, 1039], "static_einops_rearrang": 1040, "einops_reduc": [1041, 1042, 1043, 1044], "static_einops_reduc": 1045, "einops_repeat": [1046, 1047, 1048, 1049], "static_einops_repeat": 1050, "exist": [1051, 1052, 1053], "fourier_encod": [1054, 1055, 1056, 1057], "static_fourier_encod": 1058, "function_supported_devices_and_dtyp": 1059, "function_unsupported_devices_and_dtyp": 1060, "gather": [1061, 1062, 1063, 1064], "static_gath": 1065, "gather_nd": [1066, 1067, 1068, 1069], "static_gather_nd": 1070, "get_all_arrays_in_memori": 1071, "get_array_mod": 1072, "get_exception_trace_mod": 1073, "get_item": 1074, "get_min_bas": 1075, "get_min_denomin": 1076, "get_nestable_mod": 1077, "get_num_dim": [1078, 1079, 1080, 1081], "static_get_num_dim": 1082, "get_queue_timeout": 1083, "get_referrers_recurs": 1084, "get_tmp_dir": 1085, "has_nan": [1086, 1087, 1088, 1089], "static_has_nan": 1090, "inplace_arrays_support": 1091, "inplace_decr": [1092, 1093, 1094, 1095], "static_inplace_decr": 1096, "inplace_incr": [1097, 1098, 1099, 1100], "static_inplace_incr": 1101, "inplace_upd": [1102, 1103, 1104, 1105], "static_inplace_upd": 1106, "inplace_variables_support": 1107, "is_arrai": [1108, 1109, 1110, 1111], "static_is_arrai": 1112, "is_frontend_arrai": 1113, "is_ivy_arrai": [1114, 1115, 1116, 1117], "static_is_ivy_arrai": 1118, "is_ivy_contain": [1119, 1120, 1121, 1122], "static_is_ivy_contain": 1123, "is_native_arrai": [1124, 1125, 1126, 1127], "static_is_native_arrai": 1128, "isscalar": 1129, "match_kwarg": 1130, "multiprocess": 1131, "num_arrays_in_memori": 1132, "print_all_arrays_in_memori": 1133, "scatter_flat": [1134, 1135, 1136, 1137], "static_scatter_flat": 1138, "scatter_nd": [1139, 1140, 1141, 1142], "static_scatter_nd": 1143, "set_array_mod": 1144, "set_exception_trace_mod": 1145, "set_min_bas": 1146, "set_min_denomin": 1147, "set_nestable_mod": 1148, "set_queue_timeout": 1149, "set_shape_array_mod": 1150, "set_tmp_dir": 1151, "shape_array_mod": 1153, "stable_divid": [1154, 1155, 1156, 1157], "static_stable_divid": 1158, "stable_pow": [1159, 1160, 1161, 1162], "static_stable_pow": 1163, "supports_inplace_upd": [1164, 1166, 1167, 1168], "static_supports_inplace_upd": 1165, "to_ivy_shap": 1169, "to_list": [1170, 1172, 1173, 1174], "static_to_list": 1171, "to_native_shap": 1175, "to_numpi": [1176, 1178, 1179, 1180], "static_to_numpi": 1177, "to_scalar": [1181, 1183, 1184, 1185], "static_to_scalar": 1182, "try_else_non": 1186, "unset_array_mod": 1187, "unset_exception_trace_mod": 1188, "unset_nestable_mod": 1189, "unset_queue_timeout": 1190, "unset_shape_array_mod": 1191, "value_is_nan": [1192, 1194, 1195, 1196], "static_value_is_nan": 1193, "vmap": 1197, "adam_step": [1199, 1200, 1201, 1202], "adam_upd": [1203, 1204, 1205, 1206], "execute_with_gradi": 1207, "grad": 1208, "gradient_descent_upd": [1209, 1210, 1211, 1212], "is_vari": [1213, 1214, 1215, 1216], "static_is_vari": 1217, "jac": 1218, "lamb_upd": [1219, 1220, 1221, 1222], "lars_upd": [1223, 1224, 1225, 1226], "optimizer_upd": [1227, 1228, 1229, 1230], "set_with_grad": 1231, "stop_gradi": [1232, 1234, 1235, 1236], "static_stop_gradi": 1233, "unset_with_grad": 1237, "value_and_grad": 1238, "variabl": [1239, 1241, 1242, 1243], "static_vari": 1240, "variable_data": [1244, 1246, 1247, 1248], "static_variable_data": 1245, "with_grad": 1249, "conv": 1251, "conv1d": [1252, 1253, 1254, 1255, 1754], "static_conv1d": 1256, "conv1d_transpos": [1257, 1258, 1259, 1260], "static_conv1d_transpos": 1261, "conv2d": [1262, 1263, 1264, 1265, 1756], "static_conv2d": 1266, "conv2d_transpos": [1267, 1268, 1269], "static_conv2d_transpos": 1270, "conv3d": [1271, 1272, 1273, 1274, 1758], "static_conv3d": 1275, "conv3d_transpos": [1276, 1277, 1278, 1279], "static_conv3d_transpos": 1280, "conv_general_dil": 1281, "conv_general_transpos": 1282, "deconv_length": 1283, "depthwise_conv2d": [1284, 1285, 1286, 1287], "static_depthwise_conv2d": 1288, "dropout": [1289, 1290, 1291, 1292, 1761], "static_dropout": 1293, "get_x_data_format": 1294, "handle_pad": 1295, "static_linear": 1300, "lstm_updat": [1301, 1302, 1303, 1304], "static_lstm_upd": 1305, "multi_head_attent": [1306, 1307, 1308, 1309], "static_multi_head_attent": 1310, "scaled_dot_product_attent": [1311, 1312, 1313, 1314], "static_scaled_dot_product_attent": 1315, "choleski": [1317, 1318, 1319, 1320], "static_choleski": 1321, "cross": [1322, 1323, 1324, 1325], "static_cross": 1326, "det": [1327, 1328, 1329, 1330], "static_det": 1331, "diag": [1332, 1333, 1334, 1335], "static_diag": 1336, "diagon": [1337, 1338, 1339, 1340], "static_diagon": 1341, "eigh": [1342, 1343, 1344, 1345], "eigvalsh": [1346, 1347, 1348], "inner": [1349, 1350, 1351, 1352], "static_inn": 1353, "inv": [1354, 1355, 1356, 1357], "static_inv": 1358, "matmul": [1359, 1360, 1361, 1362], "static_matmul": 1363, "matrix_norm": [1364, 1365, 1366, 1367], "static_matrix_norm": 1368, "matrix_pow": [1369, 1370, 1371], "static_matrix_pow": 1372, "matrix_rank": [1373, 1374, 1375, 1376], "static_matrix_rank": 1377, "matrix_transpos": [1378, 1379, 1380, 1381], "static_matrix_transpos": 1382, "outer": [1383, 1384, 1385, 1386], "static_out": 1387, "pinv": [1388, 1389, 1390, 1391], "static_pinv": 1392, "qr": [1393, 1394, 1395, 1396], "static_qr": 1397, "slogdet": [1398, 1399, 1400, 1401], "static_slogdet": 1402, "solv": [1403, 1404, 1405, 1406], "static_solv": 1407, "svd": [1408, 1410, 1411, 1412], "static_svd": 1409, "svdval": [1413, 1415, 1416, 1417], "static_svdv": 1414, "tensordot": [1418, 1420, 1421, 1422], "static_tensordot": 1419, "trace": [1423, 1425, 1426, 1427], "static_trac": 1424, "vander": [1428, 1430, 1431, 1432], "static_vand": 1429, "vecdot": [1433, 1435, 1436, 1437], "static_vecdot": 1434, "vector_norm": [1438, 1440, 1441, 1442], "static_vector_norm": 1439, "vector_to_skew_symmetric_matrix": [1443, 1445, 1446, 1447], "static_vector_to_skew_symmetric_matrix": 1444, "binary_cross_entropi": [1449, 1450, 1451, 1452], "static_binary_cross_entropi": 1453, "cross_entropi": [1454, 1455, 1456, 1457], "static_cross_entropi": 1458, "sparse_cross_entropi": [1459, 1460, 1461, 1462], "static_sparse_cross_entropi": 1463, "clip": [1465, 1466, 1467, 1468], "static_clip": 1469, "concat": [1470, 1471, 1472, 1473], "static_concat": 1474, "constant_pad": [1475, 1476, 1477, 1478], "static_constant_pad": 1479, "expand_dim": [1480, 1481, 1482, 1483], "static_expand_dim": 1484, "flip": [1485, 1486, 1487, 1488], "static_flip": 1489, "permute_dim": [1490, 1491, 1492, 1493], "static_permute_dim": 1494, "repeat": [1495, 1496, 1497, 1498], "static_repeat": 1499, "reshap": [1500, 1501, 1502, 1503], "static_reshap": 1504, "static_rol": 1509, "split": [1510, 1511, 1512, 1513], "static_split": 1514, "squeez": [1515, 1516, 1517, 1518], "static_squeez": 1519, "stack": [1520, 1521, 1522, 1523], "static_stack": 1524, "swapax": [1525, 1527, 1528, 1529], "static_swapax": 1526, "tile": [1530, 1532, 1533, 1534], "static_til": 1531, "unstack": [1535, 1537, 1538, 1539], "static_unstack": 1536, "zero_pad": [1540, 1542, 1543, 1544], "static_zero_pad": 1541, "fomaml_step": 1546, "maml_step": 1547, "reptile_step": 1548, "all_nested_indic": 1550, "copy_nest": 1551, "index_nest": 1552, "insert_into_nest_at_index": 1553, "insert_into_nest_at_indic": 1554, "map": 1555, "map_nest_at_index": 1556, "map_nest_at_indic": 1557, "multi_index_nest": 1558, "nested_ani": 1559, "nested_argwher": 1560, "nested_map": 1561, "nested_multi_map": 1562, "prune_nest_at_index": 1563, "prune_nest_at_indic": 1564, "set_nest_at_index": 1565, "set_nest_at_indic": 1566, "layer_norm": [1568, 1569, 1570, 1571], "multinomi": [1573, 1574, 1575, 1576], "static_multinomi": 1577, "randint": [1578, 1579, 1580, 1581], "static_randint": 1582, "random_norm": [1583, 1584, 1585, 1586], "static_random_norm": 1587, "random_uniform": [1588, 1589, 1590, 1591], "static_random_uniform": 1592, "seed": 1593, "shuffl": [1594, 1595, 1596, 1597], "static_shuffl": 1598, "argmax": [1600, 1601, 1602, 1603], "static_argmax": 1604, "argmin": [1605, 1606, 1607, 1608], "static_argmin": 1609, "argwher": [1610, 1611, 1612, 1613], "static_argwher": 1614, "nonzero": [1615, 1616, 1617, 1618], "static_nonzero": 1619, "static_wher": 1621, "unique_al": [1626, 1628, 1629, 1630], "static_unique_al": 1627, "unique_count": [1631, 1633, 1634, 1635], "static_unique_count": 1632, "unique_invers": [1636, 1638, 1639, 1640], "static_unique_invers": 1637, "unique_valu": [1641, 1643, 1644, 1645], "static_unique_valu": 1642, "argsort": [1647, 1648, 1649, 1650], "static_argsort": 1651, "searchsort": [1652, 1653, 1654, 1655], "static_searchsort": 1656, "static_sort": 1661, "cumprod": [1663, 1664, 1665, 1666], "static_cumprod": 1667, "cumsum": [1668, 1669, 1670, 1671], "static_cumsum": 1672, "einsum": [1673, 1674, 1675, 1676], "max": [1677, 1678, 1679, 1680], "mean": [1681, 1682, 1683, 1684], "min": [1685, 1686, 1687, 1688], "prod": [1689, 1690, 1691, 1692], "std": [1693, 1694, 1695, 1696], "sum": [1697, 1699, 1700, 1701], "static_sum": 1698, "var": [1702, 1704, 1705, 1706], "static_var": 1703, "all": [1708, 1709, 1710, 1711], "static_al": 1712, "ani": [1713, 1714, 1715, 1716], "static_ani": 1717, "glossari": 1718, "content": 1719, "overview": 1719, "quick": 1719, "start": 1719, "citat": 1719, "inspect": 1722, "add_array_spec": 1723, "fn_array_spec": 1724, "relat": 1725, "infrastructur": [1727, 1735], "llvm": 1727, "mlir": 1727, "oneapi": 1727, "exchang": [1728, 1735], "onnx": 1728, "nnef": 1728, "coreml": 1728, "matlab": 1729, "scipi": 1729, "torch": [1729, 1730], "scikit": 1729, "learn": 1729, "theano": 1729, "panda": 1729, "julia": 1729, "apach": [1729, 1732], "spark": 1729, "mllib": 1729, "caff": 1729, "chainer": 1729, "tensorflow": 1729, "1": 1729, "mxnet": 1729, "cntk": 1729, "pytorch": 1729, "flux": 1729, "jax": 1729, "2": 1729, "dex": 1729, "languag": 1729, "tracer": [1730, 1735], "tf": 1730, "jaxpr": 1730, "jit": 1730, "fx": 1730, "compani": [1731, 1735], "quansight": 1731, "modular": 1731, "octoml": 1731, "multi": [1732, 1735], "vendor": [1732, 1733, 1734, 1735], "tvm": 1732, "xla": 1732, "gcc": 1732, "specif": [1733, 1734, 1735], "tensorrt": 1733, "cuda": 1733, "icc": 1734, "icx": 1734, "nvcc": 1734, "doe": 1735, "eagerpi": 1736, "kera": 1736, "thinc": 1736, "tensorli": 1736, "neuropod": 1736, "geglu": 1739, "to_ivy_modul": 1742, "firstlayersiren": 1745, "glorotuniform": 1746, "kaimingnorm": 1748, "Ones": 1749, "siren": 1750, "uniform": 1751, "conv1dtranspos": 1755, "conv2dtranspos": 1757, "conv3dtranspos": 1759, "depthwiseconv2d": 1760, "lstm": 1762, "multiheadattent": 1764, "newtorchmodul": 1767, "layernorm": 1769, "adam": 1771, "lamb": 1772, "lar": 1773, "sgd": 1775, "sequenti": [1776, 1777], "verbos": 1779, "cprint": 1780}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})